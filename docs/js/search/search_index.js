var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/AnimationStateMachine.html",[0,0.177,1,1.854]],["body/interfaces/AnimationStateMachine.html",[0,0.248,1,2.598,2,0.398,3,0.398,4,0.341,5,0.553,6,2.221,7,2.054,8,2.221,9,3.445,10,0.369,11,2.763,12,1.692,13,4.738,14,1.46,15,1.196,16,1.196,17,1.694,18,1.39,19,0.457,20,2.45,21,3.107,22,4.074,23,5.214,24,2.062,25,0.926,26,0.019,27,4.075,28,3.16,29,5.329,30,2.45,31,1.781,32,2.763,33,2.962,34,0.931,35,1.694,36,3.407,37,2.763,38,2.948,39,0.973,40,0.488,41,2.38,42,2.081,43,3.07,44,0.341,45,2.79,46,5.329,47,4.014,48,3.07,49,0.621,50,4.014,51,1.651,52,0.014,53,0.014]],["title/interfaces/AnimationStateMachineConstructor.html",[0,0.177,54,2.431]],["body/interfaces/AnimationStateMachineConstructor.html",[0,0.284,1,2.415,2,0.491,3,0.491,4,0.421,5,0.682,6,2.74,7,1.939,8,2.74,10,0.455,11,3.161,12,1.71,13,4.237,26,0.019,34,0.89,35,1.575,40,0.803,44,0.421,52,0.015,53,0.015,54,3.897,55,4.251,56,1.369,57,4.662,58,3.789,59,2.278,60,3.789,61,2.649,62,2.649,63,2.153,64,2.568,65,1.932,66,2.038,67,2.038,68,4.251,69,4.954]],["title/injectables/AnimationStatesService.html",[70,0.992,71,1.971]],["body/injectables/AnimationStatesService.html",[1,3.024,2,0.329,3,0.329,4,0.397,5,0.746,6,2.997,7,1.946,8,2.997,10,0.43,11,2.425,12,1.676,13,4.089,14,0.909,19,0.378,25,0.838,26,0.02,30,2.151,31,1.966,34,0.485,35,2.183,37,2.425,38,3.56,39,0.854,40,0.804,44,0.282,52,0.012,53,0.012,54,3.761,56,1.05,58,4.499,59,1.526,60,2.538,61,2.934,62,2.934,63,1.442,64,1.72,65,1.294,66,2.778,67,2.551,68,4.014,70,1.534,71,2.425,72,3.212,73,2.848,74,2.99,75,1.694,76,5.049,77,2.773,78,1.46,79,3.318,80,5.418,81,3.318,82,1.282,83,0.809,84,1.161,85,3.318,86,3.318,87,1.442,88,1.442,89,0.783,90,2.306,91,2.848,92,2.848,93,1.967,94,2.848,95,2.121,96,2.538,97,2.538,98,2.848,99,3.318,100,3.318,101,1.612,102,2.032,103,3.318,104,2.354,105,3.318,106,3.318]],["title/interfaces/AnimationStylesMap.html",[0,0.177,62,1.652]],["body/interfaces/AnimationStylesMap.html",[0,0.293,2,0.442,3,0.442,4,0.379,5,0.786,6,3.158,7,1.955,10,0.41,12,1.107,19,0.508,24,1.727,26,0.019,31,1.909,35,2.002,37,2.313,39,1.042,40,0.542,44,0.485,49,1.118,52,0.014,53,0.014,59,2.052,61,1.939,62,2.481,63,2.481,67,2.349,107,3.413,108,1.905,109,5.887,110,4.463,111,5.076,112,3.101,113,3.83,114,4.367,115,3.158,116,2.469,117,3.83,118,3.413,119,3.413,120,4.367,121,2.646,122,3.968,123,3.101,124,3.83]],["title/interfaces/AnimationTransitionsMap.html",[0,0.177,61,1.652]],["body/interfaces/AnimationTransitionsMap.html",[0,0.286,2,0.419,3,0.419,4,0.36,5,0.759,6,3.052,7,1.958,10,0.389,12,1.369,19,0.482,24,1.28,25,0.655,26,0.019,31,1.414,35,2.199,37,2.86,39,1.12,40,0.514,44,0.469,49,1.118,52,0.014,53,0.014,59,1.945,61,2.397,62,1.839,63,2.397,67,1.741,107,3.236,108,1.857,109,5.268,111,5.16,112,3.834,113,4.735,114,4.975,115,3.598,116,3.052,117,4.735,118,4.219,119,4.219,120,4.975,121,3.271,122,4.266,123,3.834,124,4.735,125,4.232,126,4.232]],["title/interfaces/ComponentConstructor.html",[0,0.177,127,1.854]],["body/interfaces/ComponentConstructor.html",[0,0.306,2,0.556,3,0.556,4,0.477,5,0.774,10,0.516,15,1.262,26,0.018,44,0.477,52,0.017,53,0.017,56,1.262,127,3.206,128,4.823,129,2.913,130,4.298,131,3.905,132,5.619]],["title/interfaces/ContainersMap.html",[0,0.177,133,2.643]],["body/interfaces/ContainersMap.html",[0,0.293,2,0.516,3,0.516,4,0.443,10,0.479,19,0.593,26,0.019,39,0.951,40,0.634,44,0.443,49,1.045,52,0.016,53,0.016,83,1.168,89,1.231,108,1.902,133,4.37,134,2.587,135,5.397,136,4.809,137,3.332,138,3.479,139,3.066,140,4.004,141,4.473,142,5.212]],["title/interfaces/Content.html",[0,0.177,143,1.483]],["body/interfaces/Content.html",[0,0.28,2,0.479,3,0.479,4,0.411,10,0.444,19,0.55,20,2.761,25,0.929,26,0.019,32,3.113,40,0.73,44,0.411,49,1.087,52,0.015,53,0.015,83,1.039,89,1.141,134,1.989,139,2.928,143,2.664,144,4.149,145,5.153,146,4.173,147,4.977,148,4.173,149,4.592,150,5.225,151,3.779,152,2.866,153,3.09,154,3.697]],["title/interfaces/ContentConductor.html",[0,0.177,155,1.854]],["body/interfaces/ContentConductor.html",[0,0.141,2,0.185,3,0.377,4,0.159,10,0.498,11,1.566,15,0.678,16,0.678,19,0.776,21,1.855,22,2.433,25,0.796,26,0.019,30,1.389,32,1.566,36,1.931,39,1.029,40,0.367,44,0.159,49,1.062,51,2.115,52,0.008,53,0.008,70,0.788,75,1.259,78,1.548,82,1.409,83,1.112,84,1.276,89,0.441,101,1.483,104,2.862,121,3.945,134,2.395,138,3.82,139,3.324,140,1.791,143,2.111,147,2.099,148,2.099,155,1.473,156,3.019,157,1.601,158,1.566,159,1.671,160,2.31,161,1.931,162,1.931,163,4.252,164,2.593,165,2.31,166,2.31,167,3.754,168,4.123,169,4.413,170,1.601,171,5.716,172,5.653,173,1.866,174,3.771,175,3.861,176,4.413,177,5.637,178,4.311,179,1.601,180,1.866,181,2.748,182,1.866,183,2.592,184,1.671,185,1.566,186,3.021,187,1.931,188,2.31,189,1.601,190,1.866,191,4.374,192,2.364,193,4.374,194,3.049,195,3.335,196,2.31,197,2.592,198,1.866,199,1.866,200,1.601,201,5.251,202,3.266,203,1.866,204,2.31,205,2.796,206,3.754,207,4.646,208,4.374,209,3.021,210,3.021,211,4.413,212,2.31,213,1.601,214,1.866,215,1.931,216,0.967,217,0.967,218,1.193,219,1.866,220,1.866,221,1.866,222,1.601,223,4.374,224,1.601,225,1.866,226,1.866,227,1.866,228,1.866]],["title/interfaces/ContentConductorConstructor.html",[0,0.177,229,2.255]],["body/interfaces/ContentConductorConstructor.html",[0,0.27,2,0.451,3,0.451,4,0.387,10,0.418,16,1.501,26,0.02,40,0.813,44,0.387,52,0.015,53,0.015,56,1.298,65,1.776,78,1.435,89,1.075,101,1.247,104,2.513,130,3.482,134,1.873,138,2.519,143,2.692,149,3.482,155,3.26,156,2.36,162,4.681,181,2.819,216,3.295,217,2.36,218,2.911,229,3.429,230,2.998,231,2.911,232,2.379,233,3.482,234,3.482,235,4.423,236,3.697,237,4.423]],["title/modules/ContentConductorModule.html",[238,1.483,239,2.643]],["body/modules/ContentConductorModule.html",[0,0.198,2,0.288,3,0.288,4,0.247,10,0.267,14,1.165,17,2.224,24,2.044,26,0.02,31,1.421,34,0.735,39,0.776,40,0.773,44,0.47,49,0.658,52,0.011,53,0.011,66,1.749,78,0.721,82,1.165,83,0.735,84,1.055,87,2.185,89,0.686,93,2.521,101,1.516,119,3.252,134,1.195,138,2.352,139,3.294,143,2.751,155,2.698,156,1.506,158,3.379,159,2.352,161,2.718,163,3.846,164,2.521,175,3.832,185,2.204,217,1.506,229,2.521,230,3.19,231,2.718,238,2.4,239,4.861,240,1.723,241,2.019,242,3.495,243,2.019,244,2.494,245,2.494,246,2.494,247,2.494,248,3.832,249,2.955,250,2.019,251,1.858,252,2.906,253,3.252,254,4.252,255,2.955,256,3.649,257,4.233,258,2.521,259,4.252,260,2.073,261,2.955,262,4.252,263,4.252,264,3.252,265,3.649,266,4.252,267,4.252,268,3.252,269,2.955,270,3.252,271,3.846,272,3.846,273,2.718,274,3.252,275,4.252,276,2.222,277,3.649,278,2.718,279,2.494,280,3.846,281,3.252,282,2.906,283,2.906,284,1.506,285,1.723,286,2.906,287,2.222,288,2.494]],["title/injectables/ContentConductorService.html",[70,0.992,158,1.971]],["body/injectables/ContentConductorService.html",[2,0.312,3,0.312,4,0.268,10,0.414,14,0.863,15,1.012,16,1.42,19,0.359,25,0.889,26,0.02,31,1.921,34,0.46,39,0.823,40,0.792,44,0.268,52,0.011,53,0.011,56,1.012,65,1.228,70,1.65,74,3.365,75,1.516,78,1.426,82,1.442,83,0.78,84,1.119,89,0.744,95,2.014,96,2.409,97,2.409,101,1.442,102,1.369,104,1.959,134,2.165,143,2.716,146,3.133,151,2.494,155,3.306,156,2.729,158,2.979,162,4.725,163,3.133,181,2.802,195,1.633,216,3.152,217,1.633,218,2.014,229,3.407,230,2.979,231,2.882,233,2.409,234,2.409,235,4.395,236,3.674,237,4.65,255,3.133,278,2.014,279,2.703,284,1.633,288,3.869,289,2.796,290,2.409,291,3.133,292,3.447,293,4.508,294,3.447,295,4.508,296,2.494,297,4.508,298,4.932,299,3.15,300,3.15,301,3.15,302,3.15,303,2.014,304,2.703,305,2.409,306,2.703,307,2.014,308,3.15,309,3.15,310,3.15,311,1.633,312,1.448,313,1.868]],["title/interfaces/ContentContainer.html",[0,0.177,216,1.971]],["body/interfaces/ContentContainer.html",[0,0.286,2,0.495,3,0.495,4,0.424,10,0.459,19,0.569,20,2.817,25,0.948,26,0.019,40,0.607,44,0.424,49,1.097,52,0.016,53,0.016,83,1.06,89,1.179,134,2.055,140,4.28,145,5.259,146,4.259,148,4.259,154,4.686,156,2.59,216,3.177,217,2.59,314,4.287,315,5.931,316,5.931]],["title/directives/ContentContainerDirective.html",[16,0.854,175,2.103]],["body/directives/ContentContainerDirective.html",[2,0.374,3,0.374,4,0.321,10,0.347,14,1.704,16,1.586,19,0.43,25,0.792,26,0.019,28,3.687,31,1.71,34,0.552,39,1.059,40,0.705,44,0.321,49,1.037,52,0.013,53,0.013,56,1.149,78,0.938,82,1.035,83,1.003,84,0.938,89,0.892,101,1.402,102,2.223,134,2.558,139,3.513,140,3.972,143,2.754,155,2.495,156,3.224,158,3.224,174,3.44,175,2.83,188,3.913,216,3.008,217,3.224,218,2.415,232,2.105,248,2.83,277,3.243,289,2.352,315,3.243,316,4.391,317,3.243,318,2.223,319,1.959,320,3.034,321,3.687,322,2.829,323,3.243,324,4.979,325,5.117,326,4.391,327,3.778,328,2.626,329,3.778,330,2.89,331,3.778]],["title/directives/ContentDirective.html",[16,0.854,248,2.103]],["body/directives/ContentDirective.html",[2,0.426,3,0.426,4,0.366,10,0.395,14,1.528,16,1.588,19,0.49,25,0.863,26,0.019,34,0.628,39,1.129,40,0.752,44,0.366,49,0.863,52,0.014,53,0.014,56,0.966,70,1.454,78,1.068,82,1.179,83,0.744,84,1.068,89,1.016,134,2.693,139,2.719,143,2.85,147,4.983,150,3.29,151,3.085,153,2.75,188,4.265,232,2.294,248,3.085,289,2.564,296,2.38,319,2.23,320,3.307,321,3.881,322,3.017,328,2.99,330,3.29,332,3.692,333,4.265,334,4.302,335,5.577,336,4.302,337,4.302,338,4.302,339,2.99,340,4.302,341,4.302,342,4.302]],["title/classes/DefaultContentConductorService.html",[34,0.555,272,2.643]],["body/classes/DefaultContentConductorService.html",[2,0.188,3,0.188,4,0.161,10,0.174,17,0.973,19,0.502,21,2.152,22,2.822,25,0.843,26,0.02,34,0.645,39,1.069,40,0.662,44,0.161,49,1.065,51,2.13,52,0.008,53,0.008,56,0.687,75,0.881,78,1.622,82,1.493,83,0.942,84,1.352,87,1.329,89,0.447,101,0.838,102,2.722,108,1.163,121,3.958,133,2.673,134,2.473,136,1.45,138,3.014,139,2.656,143,2.729,152,1.124,153,1.212,155,2.361,162,4.179,167,3.788,168,4.156,169,4.156,170,2.625,171,4.167,172,5.729,176,4.156,179,1.627,189,1.627,197,2.625,200,1.627,201,4.156,202,4.156,207,3.301,213,2.625,216,0.983,217,0.983,218,1.212,222,1.627,224,1.627,232,1.816,233,1.45,234,1.45,235,2.34,237,2.941,270,2.34,272,2.126,274,2.34,276,5.229,278,1.956,290,1.45,303,2.459,304,1.627,343,2.34,344,3.059,345,1.895,346,1.895,347,1.895,348,1.895,349,1.895,350,1.895,351,1.895,352,1.895,353,1.895,354,1.895,355,2.941,356,3.846,357,0.871,358,1.627,359,1.627,360,4.178,361,1.895,362,1.895,363,3.326,364,1.895,365,1.895,366,1.895,367,1.895,368,1.895,369,1.895,370,1.895,371,1.895,372,1.895,373,1.895,374,1.895,375,1.895,376,1.895,377,3.743,378,1.895,379,2.625,380,3.301,381,3.059,382,3.059,383,3.059,384,3.059,385,5.67,386,2.625,387,1.895,388,1.895,389,1.895,390,1.895,391,3.059,392,1.895,393,3.059,394,1.895,395,1.895,396,1.895,397,3.059,398,3.059,399,2.625,400,3.059,401,1.895,402,1.895,403,1.895,404,1.895,405,1.895,406,1.895,407,1.895,408,3.059,409,1.895,410,1.895,411,1.895,412,1.895,413,1.895,414,1.895,415,3.059,416,3.059,417,1.895,418,1.895,419,1.895,420,1.895,421,1.895,422,1.895,423,1.895,424,1.895,425,1.895,426,1.895,427,1.895,428,1.895,429,1.895,430,1.895,431,1.895]],["title/classes/DefaultDynamicAnimationsHandlerService.html",[34,0.555,432,2.643]],["body/classes/DefaultDynamicAnimationsHandlerService.html",[1,1.915,2,0.259,3,0.259,4,0.222,5,0.814,7,1.731,8,1.444,10,0.24,12,1.776,17,1.249,18,1.787,19,0.297,21,2.56,25,0.813,26,0.02,33,2.571,34,0.574,35,1.952,39,1.028,40,0.746,41,2.328,42,2.036,43,1.996,44,0.222,48,3.003,49,0.871,51,2.16,52,0.01,53,0.01,56,0.882,60,1.996,61,2.745,62,2.745,63,1.134,64,1.353,66,1.615,67,2.658,71,2.723,72,1.548,75,1.131,76,2.24,78,1.303,82,1.439,83,0.908,84,1.303,87,1.706,101,1.076,102,2.905,108,1.428,122,3.281,232,2.16,357,1.2,360,3.65,377,3.018,432,2.729,433,5.078,434,4.525,435,2.24,436,2.92,437,2.036,438,3.37,439,3.37,440,3.37,441,2.24,442,3.281,443,2.904,444,3.61,445,2.723,446,3.61,447,2.611,448,2.611,449,2.611,450,2.611,451,3.927,452,2.611,453,3.927,454,2.611,455,1.353,456,1.814,457,1.353,458,1.814,459,1.814,460,2.611,461,2.611,462,2.611,463,2.611,464,2.611,465,2.611,466,2.611,467,2.611,468,4.507,469,3.927,470,2.611,471,5.252,472,2.611,473,3.927,474,3.927,475,3.37,476,4.051,477,2.611,478,2.611,479,3.927,480,2.24,481,2.611,482,2.611,483,2.611,484,2.611,485,2.611,486,2.611,487,2.24,488,2.611,489,2.611]],["title/classes/DefaultDynamicComponentSerializer.html",[34,0.555,490,2.643]],["body/classes/DefaultDynamicComponentSerializer.html",[2,0.385,3,0.385,4,0.331,5,0.866,10,0.358,15,1.648,17,1.66,18,1.873,19,0.443,25,0.974,26,0.019,34,0.763,39,1.075,40,0.716,44,0.331,49,0.912,52,0.013,53,0.013,56,0.874,75,1.812,78,1.562,82,1.725,83,1.019,84,1.462,87,2.268,101,1.431,127,3.2,129,2.018,192,2.4,232,2.589,284,2.018,296,2.153,303,2.489,357,1.79,490,3.628,491,5.402,492,4.814,493,3.341,494,3.2,495,2.735,496,4.007,497,4.48,498,4.48,499,3.893,500,3.893,501,4.48,502,4.48,503,3.893,504,3.341,505,4.48,506,3.893,507,2.308,508,2.018,509,2.705,510,5.221,511,3.893,512,3.893]],["title/directives/DynamicAnimationsDirective.html",[16,0.854,437,1.971]],["body/directives/DynamicAnimationsDirective.html",[0,0.129,2,0.166,3,0.166,4,0.143,5,0.772,7,1.932,10,0.377,12,1.795,15,1.098,16,1.33,18,1.071,19,0.191,24,1.375,25,0.757,26,0.02,33,2.126,34,0.715,35,1.783,37,2.805,38,1.533,39,1.159,40,0.682,44,0.143,49,0.916,51,2.012,52,0.007,53,0.007,56,0.622,59,0.772,66,2.225,67,1.14,75,0.798,78,1.214,82,0.97,83,1.024,84,1.284,88,1.975,89,0.397,93,1.643,102,2.629,108,1.242,111,2.706,112,1.926,115,1.533,116,1.533,121,1.643,151,1.533,174,1.533,181,2.216,185,1.437,187,2.625,192,1.274,195,1.437,205,2.262,212,2.12,215,2.625,232,1.14,238,1.081,257,2.12,285,1.643,289,1.888,311,0.871,312,0.772,313,0.996,318,1.204,319,2.356,320,1.643,321,1.643,322,2.816,328,1.167,357,0.772,360,3.597,436,1.437,437,1.437,441,1.441,442,2.459,443,1.627,455,0.871,456,1.167,457,0.871,468,1.441,475,1.441,476,1.441,513,3.102,514,1.441,515,2.772,516,1.926,517,2.772,518,1.926,519,2.12,520,2.863,521,2.772,522,1.772,523,2.695,524,2.772,525,2.379,526,3.308,527,2.379,528,2.379,529,2.772,530,3.693,531,1.926,532,2.12,533,3.539,534,3.037,535,2.772,536,3.524,537,4.107,538,3.539,539,2.435,540,3.539,541,2.435,542,3.539,543,2.435,544,2.435,545,2.772,546,2.772,547,3.539,548,2.772,549,1.68,550,1.68,551,1.68,552,1.68,553,3.524,554,3.524,555,1.441,556,2.459,557,1.772,558,1.441,559,1.284,560,1.441,561,1.441,562,1.167,563,1.441,564,1.68,565,1.68,566,1.68,567,3.476,568,1.68,569,1.441,570,3.524,571,1.441,572,2.379,573,1.441,574,1.441,575,1.441,576,1.68,577,2.379,578,2.379,579,1.68,580,1.441,581,1.441,582,1.68,583,2.706,584,1.68,585,1.68,586,2.772,587,1.68,588,1.68,589,1.68,590,1.68,591,1.68,592,1.68,593,1.68,594,2.772,595,1.68,596,1.68,597,1.68,598,1.68,599,1.68,600,1.68,601,1.68,602,1.68,603,1.68,604,1.68,605,1.68,606,1.68,607,1.68,608,1.68,609,1.68,610,1.441,611,1.68,612,1.68,613,1.284,614,1.68]],["title/interfaces/DynamicAnimationsHandler.html",[0,0.177,436,1.971]],["body/interfaces/DynamicAnimationsHandler.html",[0,0.291,2,0.377,3,0.377,4,0.324,5,0.524,7,1.881,10,0.35,12,1.704,14,1.41,15,1.155,16,1.155,17,1.636,19,0.434,20,2.366,21,3.042,23,3.936,24,2.112,25,0.966,26,0.019,27,3.936,28,3.051,33,2.711,34,0.752,35,2.072,38,2.847,40,0.626,44,0.324,48,4.772,49,0.796,51,2.567,52,0.013,53,0.013,61,2.236,62,2.236,63,1.656,64,1.975,67,1.567,108,1.763,185,2.668,187,3.29,192,2.366,258,3.051,318,2.711,357,1.752,436,2.668,439,5.355,440,5.355,443,2.366,455,1.975,457,1.975,513,2.108,615,3.27,616,4.416,617,3.936,618,3.29,619,5.146,620,5.146,621,5.146,622,5.146,623,3.936,624,3.81]],["title/interfaces/DynamicAnimationsHandlerConstructor.html",[0,0.177,625,2.431]],["body/interfaces/DynamicAnimationsHandlerConstructor.html",[0,0.273,2,0.46,3,0.46,4,0.395,5,0.64,7,1.605,10,0.427,11,3.037,12,1.786,18,1.212,26,0.019,30,2.693,33,2.927,35,1.477,40,0.844,42,2.409,44,0.395,49,0.719,52,0.015,53,0.015,56,1.315,57,4.48,61,2.545,62,2.545,63,2.019,64,2.409,65,1.812,66,1.912,67,1.912,71,2.409,72,2.755,357,2.136,436,2.409,442,3.23,443,2.693,444,3.554,445,3.037,446,3.554,455,2.409,456,3.23,457,2.409,458,3.23,459,3.23,513,2.571,625,3.745,626,3.988,627,4.48,628,3.988,629,4.647]],["title/modules/DynamicAnimationsModule.html",[238,1.483,630,2.643]],["body/modules/DynamicAnimationsModule.html",[1,1.984,2,0.271,3,0.271,4,0.233,5,0.377,7,1.709,8,2.251,10,0.252,12,1.746,14,1.115,16,0.914,17,2.118,18,1.737,24,1.231,26,0.02,33,1.768,34,0.4,40,0.848,42,1.419,44,0.512,52,0.01,53,0.01,54,2.601,71,3.122,72,1.623,75,1.172,78,0.679,87,2.336,89,0.646,90,2.828,91,2.349,92,2.349,101,1.575,159,2.251,185,2.11,232,2.212,238,2.097,240,1.623,241,1.903,242,3.376,243,1.903,249,2.828,250,1.903,251,1.75,255,2.828,260,2.622,261,2.828,264,3.112,268,3.714,273,2.601,280,3.714,281,3.112,285,2.88,287,3.112,312,1.871,319,2.11,343,3.112,432,3.737,434,2.094,436,2.11,437,3.618,445,3.122,455,2.11,458,1.903,459,1.903,513,1.514,520,2.251,522,2.601,539,3.571,541,3.571,543,3.571,544,4.058,555,2.349,556,2.828,557,1.75,558,2.349,561,2.349,562,1.903,563,2.349,616,3.492,625,2.601,630,5.051,631,2.349,632,2.349,633,2.349,634,2.349,635,2.738,636,4.069,637,4.615,638,4.069,639,2.601,640,2.349,641,2.738,642,2.828,643,2.349,644,2.349,645,2.738,646,2.738,647,3.492,648,4.069]],["title/injectables/DynamicAnimationsService.html",[70,0.992,539,2.255]],["body/injectables/DynamicAnimationsService.html",[1,3.156,2,0.281,3,0.281,4,0.241,5,0.683,7,1.672,10,0.384,12,1.743,14,1.499,15,0.938,16,0.938,18,1.293,19,0.323,24,0.858,25,0.647,26,0.02,31,1.829,32,2.166,33,2.377,34,0.414,35,2.006,39,0.763,40,0.803,42,1.471,44,0.241,49,0.767,52,0.011,53,0.011,56,0.938,61,2.651,62,2.651,63,1.233,64,1.471,65,1.106,66,2.836,67,2.399,70,1.427,71,2.836,72,1.682,74,2.671,75,1.575,77,2.477,78,1.231,82,1.145,83,0.723,84,1.037,87,1.233,88,1.233,89,0.67,95,1.814,101,1.672,102,2.155,104,2.534,123,2.904,174,2.311,184,2.311,192,2.515,258,2.477,260,2.667,289,1.921,292,3.195,294,3.195,305,2.17,307,1.814,357,1.304,436,3.425,442,4.053,443,2.805,444,3.793,445,2.836,446,3.793,455,2.571,456,1.972,457,1.471,458,1.972,459,1.972,480,2.435,487,2.435,513,2.744,532,2.17,539,3.458,625,3.498,627,3.195,628,5.005,640,2.435,642,1.972,643,2.435,647,3.586,649,2.435,650,3.586,651,3.586,652,5.471,653,2.837,654,2.837,655,2.837,656,2.837,657,2.17,658,2.837,659,2.837,660,2.837,661,2.837]],["title/interfaces/DynamicComponentData.html",[0,0.177,662,2.431]],["body/interfaces/DynamicComponentData.html",[0,0.272,2,0.457,3,0.457,4,0.392,5,0.635,10,0.424,14,1.597,15,1.508,18,1.52,19,0.525,20,2.68,25,0.902,26,0.019,32,2.391,40,0.56,44,0.392,49,0.989,52,0.015,53,0.015,83,1.162,84,1.447,93,3.457,115,3.225,149,4.458,194,3.457,253,4.458,495,2.919,662,3.727,663,2.004,664,3.526,665,3.957,666,5.003,667,5.83,668,4.052,669,5.83,670,5.003,671,5.83,672,5.003,673,5.053,674,3.526,675,3.957]],["title/directives/DynamicComponentDirective.html",[16,0.854,676,2.255]],["body/directives/DynamicComponentDirective.html",[0,0.103,2,0.128,3,0.128,4,0.11,5,0.837,10,0.42,14,1.321,15,1.557,16,1.325,17,1.763,18,1.48,19,0.147,20,2.318,21,1.081,25,0.897,26,0.02,31,1.612,32,2.368,34,0.188,39,1.125,40,0.613,44,0.11,51,1.984,52,0.006,53,0.006,56,0.958,65,1.352,66,0.912,75,0.639,77,1.315,78,1.464,82,1.381,83,1.037,84,1.251,87,0.964,88,2.191,89,0.304,101,1.689,102,1.854,104,1.984,108,1.29,127,2.227,129,0.669,140,2.529,151,1.227,152,2.055,153,0.824,159,1.227,165,1.696,174,2.789,181,1.69,183,1.904,184,1.227,187,2.216,192,1.961,194,1.315,204,1.696,205,1.418,232,0.912,260,1.081,261,1.542,269,2.714,284,0.669,289,0.593,296,1.227,307,2.497,311,0.669,312,0.593,313,0.765,318,1.697,319,0.669,320,1.315,321,2.529,322,2.551,323,1.107,326,1.904,328,0.896,330,0.986,339,1.542,355,4.713,359,1.107,363,0.713,494,1.904,495,1.697,508,0.669,509,0.896,520,1.227,522,2.216,530,2.216,532,1.696,534,2.505,567,2.651,583,1.696,639,2.216,663,2.643,668,3.174,673,2.965,674,0.986,675,1.107,676,2.859,677,1.107,678,1.904,679,1.904,680,3.636,681,2.974,682,2.409,683,1.696,684,1.904,685,2.505,686,1.917,687,2.218,688,1.904,689,2.218,690,2.218,691,3.223,692,4.139,693,2.974,694,1.904,695,1.904,696,1.904,697,1.904,698,1.904,699,2.965,700,1.904,701,1.904,702,1.542,703,2.218,704,1.904,705,2.218,706,3.466,707,1.904,708,2.529,709,1.542,710,2.218,711,2.218,712,2.218,713,3.905,714,6.694,715,3.466,716,3.466,717,3.466,718,2.218,719,2.218,720,2.218,721,2.919,722,2.218,723,3.466,724,2.218,725,2.218,726,3.466,727,1.29,728,2.218,729,1.29,730,2.218,731,2.651,732,1.29,733,3.466,734,1.904,735,2.218,736,2.218,737,1.29,738,1.904,739,2.987,740,2.218,741,1.29,742,2.218,743,2.218,744,1.29,745,5.232,746,3.905,747,1.29,748,2.218,749,2.218,750,1.29,751,2.218,752,1.29,753,2.218,754,1.29,755,2.218,756,1.29,757,2.218,758,1.29,759,2.919,760,3.466,761,1.29,762,1.29,763,1.29,764,1.29,765,1.29,766,2.651,767,0.986,768,1.29,769,0.986,770,1.107,771,0.896,772,0.986,773,1.107,774,1.29,775,1.29,776,1.29,777,1.29,778,1.29,779,1.29,780,1.29,781,1.29,782,1.29,783,2.218,784,2.218,785,1.29,786,1.29,787,1.29,788,1.29,789,1.29,790,1.29,791,2.218,792,1.29,793,1.29,794,1.29,795,1.29,796,1.29,797,1.29,798,1.29,799,2.218,800,1.29,801,1.29,802,1.29,803,1.29,804,1.29,805,1.29,806,1.29,807,1.29,808,1.29,809,1.29,810,1.29,811,1.29,812,1.29,813,1.29,814,1.29,815,1.29,816,1.29,817,1.29,818,1.29,819,1.29,820,1.29,821,1.29,822,1.29]],["title/interfaces/DynamicComponentModel.html",[0,0.177,691,2.431]],["body/interfaces/DynamicComponentModel.html",[0,0.258,2,0.421,3,0.421,4,0.361,5,0.585,10,0.391,15,1.555,17,2.274,18,1.604,19,0.484,20,2.544,25,0.952,26,0.019,31,1.85,40,0.792,44,0.361,52,0.014,53,0.014,84,1.775,89,1.004,101,1.165,152,3.281,236,3.538,318,2.404,322,3.439,662,4.319,663,1.847,664,3.251,668,3.846,680,3.846,691,3.538,699,4.97,731,4.984,739,4.232,766,4.232,767,3.251,769,3.251,770,3.649,771,2.955,772,3.251,773,3.649,823,3.649,824,4.749,825,6.517,826,4.252]],["title/interfaces/DynamicComponentSerializer.html",[0,0.177,494,1.854]],["body/interfaces/DynamicComponentSerializer.html",[0,0.269,2,0.45,3,0.45,4,0.386,5,0.874,10,0.417,15,1.643,19,0.517,25,0.982,26,0.019,39,1.054,40,0.552,44,0.386,49,1.091,52,0.015,53,0.015,56,1.296,75,1.662,78,1.433,82,1.739,83,1.155,84,1.433,127,3.437,129,2.354,164,3.423,260,2.815,284,2.354,303,2.903,494,2.815,495,2.509,497,4.955,498,4.955,502,4.955,504,3.897,505,4.955,508,3.291,663,2.758,827,3.897,828,4.541,829,4.541,830,4.541]],["title/interfaces/DynamicComponentSerializerConstructor.html",[0,0.177,831,2.431]],["body/interfaces/DynamicComponentSerializerConstructor.html",[0,0.291,2,0.51,3,0.51,4,0.438,5,0.709,10,0.474,15,1.652,18,1.628,26,0.019,40,0.759,44,0.438,52,0.016,53,0.016,56,1.402,131,4.34,357,2.369,494,2.512,495,3.035,496,3.055,507,3.055,508,2.671,509,3.581,663,2.239,831,3.992,832,4.422,833,5.153,834,5.153]],["title/interfaces/DynamicComponentSerializerMap.html",[0,0.177,496,2.255]],["body/interfaces/DynamicComponentSerializerMap.html",[0,0.279,2,0.477,3,0.477,4,0.41,5,0.664,10,0.443,11,3.108,15,1.576,19,0.549,20,2.756,25,0.928,26,0.019,30,2.756,34,0.876,40,0.586,44,0.41,49,0.928,52,0.015,53,0.015,83,1.037,108,2.165,127,2.351,129,2.499,137,3.082,164,3.554,260,2.923,284,2.499,495,2.966,496,3.554,507,2.859,663,2.095,708,3.554,835,5.858,836,5.858]],["title/injectables/DynamicComponentSerializerService.html",[70,0.992,686,2.103]],["body/injectables/DynamicComponentSerializerService.html",[2,0.373,3,0.373,4,0.434,5,0.797,10,0.346,14,1.031,15,1.664,18,1.784,19,0.428,25,0.896,26,0.02,31,1.706,34,0.55,39,0.931,40,0.846,44,0.32,49,0.79,52,0.013,53,0.013,56,1.146,65,2.258,70,1.619,75,1.469,78,1.266,82,1.398,83,1.122,84,1.266,89,0.888,93,2.231,94,3.229,95,2.405,96,2.877,97,2.877,98,3.229,102,1.635,108,1.751,127,1.834,129,1.951,284,1.951,307,3.262,357,2.346,363,2.081,494,1.834,495,2.697,496,3.025,501,3.229,507,3.025,508,3.001,509,2.615,663,2.516,686,2.822,831,3.968,835,3.229,836,3.229,837,3.229,838,4.379,839,3.763,840,3.763,841,5.102,842,5.102,843,3.968,844,3.763,845,2.615,846,3.229,847,3.229,848,3.763,849,3.763,850,3.763,851,3.763,852,3.763,853,3.763]],["title/interfaces/DynamicComponentsMap.html",[0,0.177,843,2.431]],["body/interfaces/DynamicComponentsMap.html",[0,0.29,2,0.507,3,0.507,4,0.435,5,0.857,10,0.471,15,1.65,19,0.583,26,0.019,39,0.935,40,0.623,44,0.435,49,1.037,52,0.016,53,0.016,56,1.397,83,1.076,108,1.882,127,3.268,129,2.656,137,3.275,141,4.397,284,2.656,507,3.69,663,2.704,843,3.978,854,5.123,855,5.123]],["title/modules/DynamicComponentsModule.html",[238,1.483,856,2.643]],["body/modules/DynamicComponentsModule.html",[2,0.322,3,0.322,4,0.276,5,0.448,10,0.299,14,1.264,15,1.632,16,1.035,17,2.09,18,1.807,26,0.02,31,1.542,34,0.783,40,0.817,44,0.543,49,0.714,52,0.012,53,0.012,75,1.328,78,0.807,83,0.798,87,2.328,89,0.768,101,1.468,108,1.395,184,2.551,185,2.391,232,2.63,238,2.274,240,1.928,241,2.26,242,3.724,243,2.26,249,3.205,250,2.26,251,2.079,260,2.248,268,4.098,269,3.205,271,3.205,273,2.948,280,4.098,281,3.527,285,1.928,287,2.487,291,3.205,322,2.248,343,3.527,490,4.052,492,2.487,494,2.248,495,1.413,508,2.778,519,3.527,639,2.948,650,3.958,663,1.413,676,4.261,680,3.205,686,3.537,708,2.734,771,3.205,831,2.948,845,3.205,846,2.791,847,2.791,856,4.815,857,2.791,858,2.791,859,2.791,860,2.791,861,3.252,862,4.612,863,4.612,864,4.612,865,2.791,866,3.252,867,3.252,868,4.612]],["title/directives/LeaveDirective.html",[16,0.854,544,2.255]],["body/directives/LeaveDirective.html",[2,0.315,3,0.315,4,0.27,5,0.729,10,0.293,12,1.749,16,1.371,18,1.799,19,0.362,24,1.374,25,0.703,26,0.02,34,0.465,35,1.684,36,2.904,37,2.355,39,1.054,40,0.552,44,0.45,49,0.819,51,1.868,52,0.012,53,0.012,59,1.464,66,1.868,67,1.309,75,1.308,78,1.127,82,0.872,83,0.551,84,0.79,87,1.383,88,1.973,89,0.752,101,0.872,104,2.301,192,2.655,195,2.355,196,2.435,205,2.904,258,2.693,260,2.214,271,3.157,285,2.693,292,3.474,294,3.474,318,1.383,319,1.65,320,2.693,363,1.761,377,3.385,437,2.355,518,2.212,520,2.512,523,3.961,526,4.058,544,2.693,617,3.474,618,4.545,657,3.474,672,3.898,709,3.157,869,2.212,870,4.855,871,6.681,872,4.542,873,4.542,874,4.542,875,4.542,876,4.542,877,4.542,878,3.898,879,3.474,880,3.898,881,4.542,882,4.542,883,4.542,884,5.774,885,4.542,886,5.295,887,3.183,888,4.542,889,3.183,890,3.183,891,3.183,892,3.183,893,3.898,894,2.732,895,2.732,896,2.732]],["title/injectables/NgStateService.html",[70,0.992,543,2.255]],["body/injectables/NgStateService.html",[2,0.432,3,0.432,4,0.371,5,0.858,7,1.542,10,0.517,12,1.083,19,0.497,25,0.675,26,0.019,30,2.588,34,0.638,39,1.027,40,0.757,44,0.371,52,0.014,53,0.014,56,1.399,59,2.007,62,3.084,63,1.897,64,2.263,70,1.625,75,1.621,78,1.546,82,1.196,83,0.755,84,1.083,89,1.031,101,1.542,104,1.897,108,1.32,181,2.744,319,3.412,543,3.338,554,5.987,562,4.33,897,4.33,898,3.746,899,5.987,900,5.629,901,4.365,902,5.629,903,4.365,904,4.365,905,4.365,906,4.365]],["title/injectables/NgTransitionService.html",[70,0.992,541,2.255]],["body/injectables/NgTransitionService.html",[2,0.301,3,0.301,4,0.259,5,0.711,7,1.205,10,0.404,12,0.755,17,1.398,19,0.346,25,0.471,26,0.02,30,2.022,34,0.445,35,2.199,39,0.803,40,0.729,44,0.259,49,0.471,52,0.011,53,0.011,56,1.159,59,1.399,61,2.868,63,1.322,64,1.578,70,1.347,75,1.266,78,1.489,82,0.834,83,0.526,84,0.755,89,0.718,101,1.415,102,1.911,104,1.911,120,3.363,122,2.115,181,2.758,312,2.022,360,3.056,363,3.566,377,1.946,386,2.612,541,2.607,553,6.054,556,3.056,557,3.301,559,2.327,560,2.612,610,2.612,897,3.589,899,5.366,907,2.612,908,3.056,909,4.398,910,3.043,911,4.398,912,3.043,913,3.774,914,2.612,915,3.043,916,3.043,917,3.043,918,3.043,919,3.043,920,3.043,921,4.398,922,3.043,923,3.043,924,3.043,925,3.043,926,3.043,927,3.949,928,3.043,929,3.043,930,3.043,931,3.043,932,3.043,933,3.043,934,3.043,935,3.043,936,4.398,937,4.398,938,4.398,939,4.398,940,3.043,941,3.043,942,3.043,943,3.043,944,3.043,945,3.043,946,3.043,947,3.043,948,3.043,949,3.043,950,3.043,951,3.043,952,3.043,953,3.043,954,3.043,955,3.043,956,4.398,957,3.043,958,3.043,959,4.398]],["title/interfaces/StateCSSMap.html",[0,0.177,443,1.748]],["body/interfaces/StateCSSMap.html",[0,0.29,2,0.506,3,0.506,4,0.434,5,0.855,7,1.702,10,0.47,12,1.661,19,0.582,26,0.018,33,3.101,34,0.978,35,1.975,37,2.649,38,3.436,39,0.932,44,0.434,45,3.551,49,1.036,52,0.016,53,0.016,65,1.992,66,2.101,108,1.545,118,3.907,137,3.266,195,2.649,443,2.856,457,3.221,960,4.318,961,5.109,962,3.907,963,5.109,964,5.109]],["title/interfaces/StateCSSMapper.html",[0,0.177,41,2.255]],["body/interfaces/StateCSSMapper.html",[0,0.255,2,0.414,3,0.414,4,0.355,5,0.576,7,1.842,10,0.384,11,2.168,14,1.5,19,0.476,20,2.517,21,3.157,24,2.156,25,1.002,26,0.019,27,4.187,28,3.246,30,1.923,33,3.132,34,1.026,39,1.259,41,3.246,42,2.168,44,0.355,45,2.907,49,0.647,51,2.511,52,0.014,53,0.014,77,3.839,83,0.723,101,1.672,108,1.265,195,3.695,215,4.408,443,3.17,960,2.907,965,3.589,966,5.557,967,4.699,968,4.182]],["title/injectables/StateCssMapperService.html",[70,0.992,445,1.971]],["body/injectables/StateCssMapperService.html",[2,0.32,3,0.32,4,0.274,5,0.8,7,1.937,10,0.491,19,0.368,21,1.574,25,0.826,26,0.02,31,1.943,33,3.198,34,0.996,38,3.215,39,1.121,40,0.649,41,3.164,42,3.013,43,2.469,44,0.274,45,3.189,49,0.71,52,0.012,53,0.012,56,0.725,66,2.758,70,1.392,74,2.933,75,1.321,77,3.782,78,1.442,82,1.462,83,0.923,84,1.324,89,0.762,101,1.257,104,2.525,108,2.064,160,3.509,184,2.538,195,2.767,212,3.509,215,2.064,258,2.72,260,2.237,296,1.786,357,1.485,377,2.064,443,3.277,445,2.379,457,1.674,960,4.039,966,2.771,967,3.938,969,2.771,970,4.588,971,4.588,972,3.229,973,5.812,974,3.229,975,4.588,976,4.588,977,3.229,978,3.229,979,3.229,980,3.938,981,3.229,982,3.229,983,4.588,984,3.229,985,3.229,986,3.229,987,3.229,988,3.229,989,3.229]],["title/coverage.html",[990,4.41]],["body/coverage.html",[0,0.332,1,1.188,4,0.207,5,1.021,6,3.187,7,1.694,8,2.504,9,2.092,12,1.605,15,1.581,16,1.227,18,1.322,24,0.737,25,0.377,26,0.019,33,2.504,34,0.741,41,1.445,42,1.933,52,0.009,53,0.009,54,1.558,55,2.092,61,1.059,62,1.059,63,1.62,65,0.95,70,1.564,71,1.264,72,1.445,73,2.092,90,1.694,107,2.851,127,1.188,128,2.092,129,1.264,130,2.851,133,1.694,134,2.661,135,2.092,136,1.864,137,3.241,143,1.765,144,2.092,148,1.694,155,1.188,156,2.987,157,2.092,158,1.264,175,1.348,216,1.264,217,1.933,229,1.445,230,2.629,231,2.383,248,1.348,272,1.694,276,2.851,278,1.558,290,2.851,314,2.092,317,2.092,332,2.092,399,2.092,432,1.694,433,3.199,434,1.864,435,2.092,436,1.264,437,1.264,443,1.121,445,1.264,455,2.347,457,1.264,490,1.694,491,2.092,492,1.864,493,2.092,494,1.188,495,1.62,496,1.445,507,2.21,508,2.629,513,3.022,514,2.092,526,2.383,539,1.445,541,1.445,543,1.445,544,1.445,557,1.558,562,1.694,615,2.092,625,1.558,626,2.092,637,2.092,642,1.694,644,2.092,649,2.092,662,1.558,663,2.754,664,1.864,665,2.092,676,1.445,677,2.092,686,1.348,691,1.558,767,1.864,823,2.092,827,2.092,831,1.558,832,2.092,837,2.092,843,1.558,845,1.694,869,3.146,897,2.591,898,2.092,907,2.092,960,3.146,965,2.092,969,2.092,990,2.092,991,1.864,992,2.437,993,7.122,994,6.947,995,2.092,996,4.005,997,2.437,998,5.762,999,5.762,1000,6.184,1001,6.184,1002,2.437,1003,2.437,1004,2.437,1005,2.092,1006,2.437,1007,2.437,1008,2.437,1009,2.437,1010,2.437,1011,3.728,1012,2.092,1013,2.437,1014,2.437,1015,2.092,1016,3.199,1017,2.092,1018,2.092,1019,2.437,1020,2.092,1021,2.437,1022,2.437,1023,3.728,1024,3.728,1025,2.092,1026,2.437,1027,2.437,1028,2.437,1029,2.437]],["title/dependencies.html",[240,2.703,1030,3.201]],["body/dependencies.html",[18,1.371,26,0.019,52,0.016,53,0.016,59,2.417,89,1.241,153,3.361,240,3.118,311,3.277,865,4.512,1031,7.502,1032,5.258,1033,5.258,1034,5.258,1035,6.322,1036,5.258,1037,5.258,1038,5.258,1039,5.258,1040,5.258,1041,5.258,1042,5.258]],["title/miscellaneous/enumerations.html",[1043,1.659,1044,3.913]],["body/miscellaneous/enumerations.html",[5,0.855,7,1.4,12,1.542,14,1.4,19,0.582,26,0.018,35,1.624,51,2.555,52,0.016,53,0.016,88,3.221,131,3.551,520,3.436,523,3.683,557,3.971,559,4.751,613,4.751,897,4.318,914,5.331,927,3.907,1043,2.649,1044,4.384,1045,6.212,1046,6.212,1047,6.212,1048,5.109,1049,5.109,1050,5.109,1051,5.109,1052,4.384,1053,5.109,1054,4.384]],["title/miscellaneous/functions.html",[24,1.379,1043,1.659]],["body/miscellaneous/functions.html",[5,0.759,10,0.507,12,1.369,19,0.628,24,1.968,25,0.854,26,0.018,35,1.754,52,0.016,53,0.016,82,1.511,83,0.954,84,1.369,196,4.219,318,2.397,523,3.27,618,4.422,869,3.834,870,4.219,893,4.734,1020,5.582,1043,2.86,1055,4.734]],["title/index.html",[19,0.364,116,1.77,1056,2.747]],["body/index.html",[12,1.168,15,1.565,16,1.449,17,1.497,18,1.765,24,1.424,26,0.015,31,1.574,36,3.01,52,0.015,53,0.015,95,3.01,116,2.604,138,2.604,143,1.836,159,2.604,178,3.6,230,2.441,256,4.04,274,3.6,305,3.6,306,4.04,318,2.045,321,4.013,438,4.04,520,2.604,556,4.105,709,3.272,913,5.808,991,4.517,1057,4.708,1058,4.708,1059,5.906,1060,4.708,1061,4.708,1062,4.04,1063,6.454,1064,4.708,1065,4.04,1066,4.04,1067,4.04,1068,4.04,1069,4.708,1070,4.04,1071,5.906,1072,5.906,1073,4.708,1074,4.708,1075,4.708,1076,5.906,1077,4.708,1078,5.906,1079,4.708,1080,4.708,1081,4.708,1082,5.906,1083,4.708,1084,4.04,1085,4.708]],["title/license.html",[116,1.77,1056,2.747,1086,2.747]],["body/license.html",[4,0.389,14,1.59,17,1.455,26,0.015,52,0.015,53,0.015,123,3.18,166,4.437,251,2.925,339,3.18,358,3.927,528,3.927,657,4.872,927,3.5,991,3.5,1062,3.927,1066,3.927,1086,3.927,1087,4.576,1088,6.37,1089,3.927,1090,4.576,1091,4.576,1092,5.802,1093,4.576,1094,4.576,1095,3.927,1096,4.576,1097,5.802,1098,4.576,1099,6.699,1100,7.328,1101,4.576,1102,5.802,1103,4.576,1104,5.467,1105,4.576,1106,4.576,1107,4.576,1108,4.576,1109,4.576,1110,4.576,1111,4.576,1112,4.576,1113,4.576,1114,3.927,1115,3.927,1116,5.802,1117,5.802,1118,4.576,1119,4.576,1120,5.802,1121,4.576,1122,4.576,1123,4.576,1124,4.576,1125,3.927,1126,4.576,1127,4.576,1128,4.576,1129,4.576,1130,4.576,1131,4.576,1132,4.576,1133,4.576,1134,4.576,1135,4.576,1136,4.576,1137,4.576,1138,4.576]],["title/modules.html",[238,2.004]],["body/modules.html",[26,0.017,52,0.017,53,0.017,238,2.212,239,3.942,311,3.628,312,3.217,630,3.942,856,3.942,1139,6.998,1140,6.998]],["title/overview.html",[1141,4.41]],["body/overview.html",[0,0.189,16,0.911,17,1.291,26,0.019,34,0.593,44,0.345,52,0.014,53,0.014,70,1.059,71,3.119,158,3.119,175,3.859,238,2.094,239,5.029,240,2.407,241,2.821,242,2.821,243,2.821,244,3.484,245,3.484,246,3.484,247,3.484,248,3.859,249,3.731,250,2.821,251,2.595,437,3.616,445,3.119,539,3.567,541,3.567,543,3.567,544,4.136,630,5.231,631,3.484,632,3.484,633,3.484,634,3.484,676,4.136,686,3.328,856,4.848,857,3.484,858,3.484,859,3.484,860,3.484,1070,3.484,1141,3.484,1142,4.06,1143,4.06,1144,4.06,1145,4.06]],["title/miscellaneous/typealiases.html",[1043,1.659,1146,4.56]],["body/miscellaneous/typealiases.html",[5,0.877,19,0.521,20,3.08,24,1.384,25,1.15,26,0.015,52,0.015,53,0.015,88,2.521,101,1.59,108,1.927,114,5.401,152,2.713,185,2.372,303,4.419,318,2.521,673,4.427,674,3.5,682,3.18,699,4.427,731,4.872,738,4.979,769,3.5,772,3.5,1043,2.372,1065,4.979,1089,4.979,1147,4.576,1148,4.576,1149,5.802,1150,4.576,1151,5.802,1152,6.37,1153,4.576,1154,6.699,1155,4.576,1156,5.802,1157,6.37,1158,4.576,1159,4.576,1160,4.576,1161,4.576,1162,5.802,1163,4.576,1164,4.576,1165,4.576]],["title/miscellaneous/variables.html",[996,3.169,1043,1.659]],["body/miscellaneous/variables.html",[5,0.902,6,2.139,7,1.72,8,2.139,11,2.005,12,1.738,13,2.688,14,1.06,15,1.409,19,0.44,25,0.804,26,0.019,30,1.778,34,0.565,35,1.23,51,1.591,52,0.013,53,0.013,56,1.167,57,3.975,65,2.448,67,1.591,70,1.356,87,2.931,88,2.931,90,4.081,104,1.681,115,2.875,134,1.591,156,2.005,229,2.293,230,3.044,231,2.473,232,1.591,270,4.801,278,3.753,455,2.005,495,1.681,508,2.005,513,2.139,523,2.293,526,4.312,618,3.323,623,2.958,627,2.958,642,4.081,663,1.681,708,2.293,845,4.081,869,2.688,870,2.958,894,3.319,895,3.319,896,3.319,995,4.461,996,2.688,1005,4.461,1012,4.461,1015,3.319,1016,5.039,1017,3.319,1018,4.461,1025,4.461,1043,3.044,1055,3.319,1166,3.868,1167,3.868,1168,3.868,1169,5.198,1170,3.868,1171,3.868,1172,3.868,1173,3.868,1174,3.868,1175,3.868,1176,3.868,1177,3.868,1178,3.868]],["title/additional-documentation/content-conductor.html",[143,1.078,230,1.432,1179,1.638,1180,1.638]],["body/additional-documentation/content-conductor.html",[14,1.457,15,1.194,16,1.429,17,1.899,19,0.546,21,1.305,22,1.711,24,1.21,26,0.019,28,1.587,31,1.778,32,2.074,34,0.584,39,0.489,44,0.34,49,0.924,52,0.012,53,0.01,56,0.898,65,1.044,70,0.698,75,1.639,77,1.587,78,0.664,82,0.733,83,0.984,84,0.664,88,1.739,102,1.163,115,1.481,116,1.481,138,3.599,139,3.442,140,1.587,143,2.685,147,3.331,150,3.06,151,2.214,154,3.06,155,2.775,158,2.484,161,1.711,162,4.16,163,3.331,164,1.587,165,3.06,171,3.665,174,2.214,175,3.149,178,3.665,181,1.305,184,1.481,185,1.388,187,2.558,192,2.617,194,2.841,204,3.06,205,4.069,206,3.434,211,4.113,230,3.373,236,3.818,238,1.044,248,3.521,255,1.86,258,1.587,261,2.781,273,2.558,291,2.781,296,2.651,298,3.434,320,2.372,321,2.841,322,1.951,324,3.434,333,3.06,363,2.214,379,2.297,380,2.297,516,1.86,530,1.711,531,1.86,678,2.297,702,2.781,708,1.587,880,2.297,908,1.86,996,2.781,1067,2.297,1084,2.297,1095,2.297,1181,4.002,1182,2.677,1183,2.677,1184,2.677,1185,2.677,1186,2.677,1187,2.677,1188,2.677,1189,2.677,1190,4.002,1191,2.677,1192,2.677,1193,2.677,1194,3.434,1195,2.677,1196,2.677,1197,2.677,1198,2.677,1199,2.677,1200,2.677,1201,2.677,1202,2.677,1203,2.677,1204,4.002,1205,4.002,1206,4.113,1207,2.677,1208,4.002,1209,4.002,1210,2.677,1211,2.677,1212,2.677,1213,2.677,1214,2.677,1215,2.047,1216,4.792,1217,2.677,1218,4.002,1219,5.318,1220,5.318,1221,4.002,1222,4.002,1223,4.002,1224,2.677,1225,2.677,1226,2.677,1227,2.677,1228,2.677,1229,2.677,1230,2.677,1231,2.677,1232,2.677,1233,2.677,1234,2.677,1235,2.677,1236,2.677,1237,2.677,1238,2.677,1239,2.677]],["title/additional-documentation/content-conductor/example.html",[289,1.471,1179,1.898,1180,1.898]],["body/additional-documentation/content-conductor/example.html",[26,0.017,52,0.017,53,0.017,311,3.066,312,2.719,313,3.507]],["title/additional-documentation/dynamic-animations.html",[12,0.686,18,0.721,1179,1.638,1180,1.638]],["body/additional-documentation/dynamic-animations.html",[1,1.37,7,1.972,12,1.867,14,1.592,15,1.365,16,1.412,17,0.894,18,1.684,22,1.797,23,2.149,24,0.85,26,0.017,28,2.924,35,2.162,36,3.153,37,2.824,39,1.11,49,0.642,51,2.029,52,0.011,53,0.015,58,2.149,59,1.292,66,2.39,67,1.707,88,2.524,93,1.666,112,2.884,115,1.555,131,2.884,139,2.023,146,1.953,159,1.555,160,2.149,161,3.714,166,2.149,174,2.295,181,1.37,192,1.908,194,1.666,195,1.457,215,3.153,232,1.707,238,1.096,253,3.173,264,2.149,271,1.953,285,3.445,291,1.953,312,2.795,318,1.803,319,1.457,322,2.023,437,2.557,516,3.428,518,3.785,519,3.173,520,3.363,522,1.797,523,3.828,525,2.412,526,3.482,527,2.412,530,3.153,531,3.785,567,2.149,569,2.412,570,4.674,571,2.412,572,3.561,573,2.412,574,2.412,575,2.412,577,2.412,578,2.412,580,2.412,581,2.412,583,2.149,613,3.173,617,2.149,618,3.153,623,3.772,639,1.797,651,2.412,682,3.785,683,2.149,702,2.884,704,2.412,709,1.953,878,2.412,879,2.149,908,1.953,962,2.149,980,2.412,1052,2.412,1054,2.412,1104,3.561,1114,2.412,1115,2.412,1194,2.412,1215,2.149,1240,2.81,1241,4.149,1242,2.81,1243,2.81,1244,2.81,1245,2.81,1246,2.81,1247,2.81,1248,5.81,1249,4.149,1250,2.81,1251,2.81,1252,4.149,1253,4.149,1254,2.81,1255,2.81,1256,2.81,1257,2.81,1258,4.149,1259,4.149,1260,2.81,1261,2.81,1262,2.81,1263,2.81,1264,2.81,1265,2.81,1266,2.81,1267,2.81,1268,2.81,1269,2.81,1270,2.81,1271,2.81,1272,2.81,1273,2.81,1274,2.81,1275,2.81,1276,2.81,1277,2.81,1278,2.81,1279,2.81,1280,2.81,1281,2.81,1282,2.81,1283,2.81,1284,2.81,1285,2.81,1286,2.81,1287,2.81,1288,2.412]],["title/additional-documentation/dynamic-animations/example.html",[289,1.471,1179,1.898,1180,1.898]],["body/additional-documentation/dynamic-animations/example.html",[26,0.017,52,0.017,53,0.017,311,3.066,312,2.719,313,3.507]],["title/additional-documentation/dynamic-components.html",[15,0.62,18,0.721,1179,1.638,1180,1.638]],["body/additional-documentation/dynamic-components.html",[0,0.195,14,1.73,15,1.64,16,1.23,17,1.742,18,1.593,24,1.267,25,0.44,26,0.019,30,1.308,31,2.042,32,2.576,34,0.853,38,2.749,39,0.764,49,0.945,52,0.013,53,0.011,56,0.639,65,1.938,70,0.742,74,1.819,75,1.43,83,1.121,88,2.537,108,1.267,121,1.687,151,2.317,152,1.687,159,1.574,161,1.819,164,1.687,184,3.031,192,2.284,194,3.463,236,1.819,238,1.11,257,3.203,265,2.442,269,4.245,273,1.819,289,1.308,296,1.574,307,1.819,318,1.237,322,2.978,333,3.203,339,1.978,355,2.176,363,2.317,494,2.042,495,2.744,516,1.978,518,1.978,522,3.176,530,2.677,531,1.978,536,2.442,639,3.176,662,3.176,666,4.703,668,3.453,670,4.703,673,2.911,676,3.463,679,2.442,680,4.389,681,2.442,682,2.911,683,2.176,684,2.442,685,2.442,686,2.317,688,2.442,691,3.733,692,5.242,693,3.594,694,2.442,695,2.442,696,2.442,697,2.442,698,4.703,699,1.978,700,2.442,701,2.442,702,1.978,707,2.442,708,3.463,734,2.442,739,4.671,766,2.176,771,3.453,824,2.442,838,3.594,843,1.819,879,2.176,908,1.978,962,3.203,1068,2.442,1125,2.442,1206,2.442,1215,2.176,1288,2.442,1289,4.969,1290,2.846,1291,2.846,1292,2.846,1293,2.846,1294,2.846,1295,2.846,1296,2.846,1297,2.846,1298,4.188,1299,2.846,1300,2.846,1301,4.188,1302,2.846,1303,2.846,1304,2.846,1305,5.48,1306,2.846,1307,2.846,1308,4.188,1309,2.846,1310,4.188,1311,2.846,1312,4.188,1313,2.846,1314,2.846,1315,2.846,1316,2.846,1317,2.846,1318,2.846,1319,2.846,1320,2.846,1321,2.846]],["title/additional-documentation/dynamic-components/example.html",[289,1.471,1179,1.898,1180,1.898]],["body/additional-documentation/dynamic-components/example.html",[26,0.017,52,0.017,53,0.017,311,3.066,312,2.719,313,3.507]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["0",{"_index":399,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["0m",{"_index":896,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":1192,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["1/1",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["10/16",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1193,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["2.5.4",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["2.8",{"_index":1074,"title":{},"body":{"index.html":{}}}],["2/3",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1145,"title":{},"body":{"overview.html":{}}}],["2018",{"_index":1090,"title":{},"body":{"license.html":{}}}],["25",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1070,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3/4",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1144,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1142,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["500m",{"_index":878,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["57",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["6.1.1",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":1085,"title":{},"body":{"index.html":{}}}],["6.2.2",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1143,"title":{},"body":{"overview.html":{}}}],["75",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["abil",{"_index":908,"title":{},"body":{"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["abov",{"_index":1115,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["abstract",{"_index":263,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["accessor",{"_index":328,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["act",{"_index":57,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":1134,"title":{},"body":{"license.html":{}}}],["actual",{"_index":271,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["ad",{"_index":212,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/StateCssMapperService.html":{}}}],["add",{"_index":215,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["addcontenttoalternatingcontain",{"_index":1188,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["addit",{"_index":1179,"title":{"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}},"body":{}}],["addtoon",{"_index":1210,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["addtotwo",{"_index":1212,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["afterviewinit",{"_index":338,"title":{},"body":{"directives/ContentDirective.html":{}}}],["alias",{"_index":1147,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alllow",{"_index":862,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["allow",{"_index":159,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["amount",{"_index":873,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["analog",{"_index":517,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["and/or",{"_index":1109,"title":{},"body":{"license.html":{}}}],["angular",{"_index":520,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["angular'",{"_index":262,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["angular/anim",{"_index":59,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"dependencies.html":{},"additional-documentation/dynamic-animations.html":{}}}],["angular/common",{"_index":865,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":89,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":12,"title":{"additional-documentation/dynamic-animations.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animation'",{"_index":883,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animation.t",{"_index":1018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animation/leav",{"_index":1017,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationbuild",{"_index":58,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animationbuilder):animationstatemachin",{"_index":69,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{}}}],["animationmetadata",{"_index":111,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["animations(anim",{"_index":595,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.direct",{"_index":646,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animations.directive.t",{"_index":514,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"coverage.html":{}}}],["animations.directive.ts:114",{"_index":548,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:136",{"_index":546,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:167",{"_index":545,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:181",{"_index":550,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:194",{"_index":549,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.foreach(anim",{"_index":596,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.module.t",{"_index":635,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animations.servic",{"_index":555,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["animations.service.t",{"_index":649,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["animations.service.ts:30",{"_index":654,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["animations.service.ts:55",{"_index":656,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["animations/anim",{"_index":6,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/default",{"_index":433,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"coverage.html":{}}}],["animations/dynam",{"_index":513,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/leav",{"_index":1015,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/leave/leave.directive.t",{"_index":869,"title":{},"body":{"directives/LeaveDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["animations/leave/leave.directive.ts:22",{"_index":887,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animations/leave/leave.directive.ts:24",{"_index":889,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animations/ng",{"_index":897,"title":{},"body":{"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["animations/st",{"_index":960,"title":{},"body":{"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["animations:[dvkleav",{"_index":564,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationshandl",{"_index":589,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationshandlerconstructor",{"_index":647,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["animationsstatemachin",{"_index":460,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["animationsstatemachineconstructor",{"_index":648,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animationstatemachin",{"_index":1,"title":{"interfaces/AnimationStateMachine.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animationstatemachineconstructor",{"_index":54,"title":{"interfaces/AnimationStateMachineConstructor.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["animationstatemachineconstructortoken",{"_index":90,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationstatemetadata",{"_index":554,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgStateService.html":{}}}],["animationstatemetadata).styl",{"_index":604,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationstatesbuild",{"_index":446,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["animationstatesservic",{"_index":71,"title":{"injectables/AnimationStatesService.html":{}},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"overview.html":{}}}],["animationstatesservice#createanimationstatemachin",{"_index":100,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["animationstatesservice):dynamicanimationshandl",{"_index":629,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{}}}],["animationstylemetadata",{"_index":109,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["animationstylesmap",{"_index":62,"title":{"interfaces/AnimationStylesMap.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"coverage.html":{}}}],["animationtransitionmetadata",{"_index":553,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["animationtransitionmetadata).anim",{"_index":602,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationtransitionsmap",{"_index":61,"title":{"interfaces/AnimationTransitionsMap.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["anoth",{"_index":206,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["anyonm",{"_index":1196,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["appli",{"_index":38,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-components.html":{}}}],["applic",{"_index":1078,"title":{},"body":{"index.html":{}}}],["aris",{"_index":1137,"title":{},"body":{"license.html":{}}}],["around",{"_index":146,"title":{},"body":{"interfaces/Content.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"additional-documentation/dynamic-animations.html":{}}}],["array",{"_index":181,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["arrays.reduce((flattened,array",{"_index":410,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["arrow",{"_index":1312,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["assign",{"_index":259,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["associ",{"_index":1101,"title":{},"body":{"license.html":{}}}],["async",{"_index":684,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["attach",{"_index":174,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["attachinputstream",{"_index":718,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachinputstreams(stream",{"_index":730,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachoutputcallback",{"_index":719,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachoutputcallbacks(callback",{"_index":736,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachview",{"_index":167,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachview(contain",{"_index":170,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachview(container:str",{"_index":227,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["attachviews(contain",{"_index":179,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachviews(container:str",{"_index":228,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["attempt",{"_index":1200,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["author",{"_index":1062,"title":{},"body":{"index.html":{},"license.html":{}}}],["automat",{"_index":651,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["avail",{"_index":1067,"title":{},"body":{"index.html":{},"additional-documentation/content-conductor.html":{}}}],["back",{"_index":1164,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["background",{"_index":577,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["bare",{"_index":1198,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["base",{"_index":258,"title":{},"body":{"modules/ContentConductorModule.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["bbdynamiccomponentdirective2}",{"_index":751,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["be",{"_index":118,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/StateCSSMap.html":{}}}],["befor",{"_index":962,"title":{},"body":{"interfaces/StateCSSMap.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["behaviorsubject",{"_index":340,"title":{},"body":{"directives/ContentDirective.html":{}}}],["below",{"_index":1261,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["between",{"_index":164,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["bind",{"_index":1194,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["bootstrap",{"_index":243,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["both",{"_index":525,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["bound",{"_index":531,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["brows",{"_index":1140,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":311,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["bug",{"_index":1269,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["build",{"_index":913,"title":{},"body":{"injectables/NgTransitionService.html":{},"index.html":{}}}],["buildanimationtransit",{"_index":909,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["buildanimationtransitions(transit",{"_index":911,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["builder",{"_index":68,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{}}}],["c",{"_index":1089,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["call",{"_index":185,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/content-conductor.html":{}}}],["callback",{"_index":739,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["callbacks.model",{"_index":773,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{}}}],["callbacks.model.t",{"_index":1156,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["callbacks/output",{"_index":772,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["callbacks[cb](ev",{"_index":815,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["capabl",{"_index":438,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"index.html":{}}}],["card",{"_index":1256,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["case",{"_index":671,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["caus",{"_index":547,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["ccservic",{"_index":324,"title":{},"body":{"directives/ContentContainerDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["chanc",{"_index":1283,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["chang",{"_index":530,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["charg",{"_index":1096,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1130,"title":{},"body":{"license.html":{}}}],["class",{"_index":34,"title":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["clean",{"_index":183,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{}}}],["cli",{"_index":1082,"title":{},"body":{"index.html":{}}}],["click",{"_index":697,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["close",{"_index":567,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["closeallsubscript",{"_index":720,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["closeallsubscriptions(subscript",{"_index":740,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["closed';th",{"_index":1273,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["closur",{"_index":967,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["cluster_contentconductormodul",{"_index":244,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_declar",{"_index":245,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_export",{"_index":246,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_provid",{"_index":247,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodul",{"_index":631,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_declar",{"_index":632,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_export",{"_index":633,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_provid",{"_index":634,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodul",{"_index":857,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_declar",{"_index":858,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_export",{"_index":859,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_provid",{"_index":860,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["code",{"_index":877,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["collect",{"_index":621,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["color",{"_index":578,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["combin",{"_index":824,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["combinelatest",{"_index":356,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["command",{"_index":1076,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":864,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["compil",{"_index":95,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"index.html":{}}}],["complet",{"_index":963,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["complex",{"_index":1263,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["compmodel",{"_index":755,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["compon",{"_index":15,"title":{"additional-documentation/dynamic-components.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["component'",{"_index":255,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"additional-documentation/content-conductor.html":{}}}],["component.direct",{"_index":866,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["component.directive.t",{"_index":677,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"coverage.html":{}}}],["component.directive.ts:100",{"_index":729,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:107",{"_index":728,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:109",{"_index":727,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:115",{"_index":754,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:142",{"_index":750,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:155",{"_index":747,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:167",{"_index":758,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:186",{"_index":732,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:209",{"_index":737,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:226",{"_index":752,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:240",{"_index":741,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:250",{"_index":756,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:92",{"_index":761,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:93",{"_index":762,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:94",{"_index":763,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentconstructor",{"_index":127,"title":{"interfaces/ComponentConstructor.html":{}},"body":{"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["componentconstructor):str",{"_index":830,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["componentfactoryresolv",{"_index":726,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentmodel",{"_index":764,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentmodel(compmodel",{"_index":776,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentnam",{"_index":504,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["componentref",{"_index":760,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["components.module.t",{"_index":861,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["components/compon",{"_index":128,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"coverage.html":{}}}],["components/default",{"_index":491,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"coverage.html":{}}}],["components/dynam",{"_index":663,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/initi",{"_index":1159,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["components/input",{"_index":1160,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["components/output",{"_index":1163,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["compref",{"_index":715,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["concept",{"_index":1252,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["condent",{"_index":1181,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["condit",{"_index":1114,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["conductor",{"_index":230,"title":{"additional-documentation/content-conductor.html":{}},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["conductor.model",{"_index":233,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["conductor.model.t",{"_index":157,"title":{},"body":{"interfaces/ContentConductor.html":{},"coverage.html":{}}}],["conductor.model.ts:20",{"_index":199,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:26",{"_index":182,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:39",{"_index":203,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:54",{"_index":190,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:68",{"_index":214,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:79",{"_index":198,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:89",{"_index":173,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:99",{"_index":180,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.module.t",{"_index":252,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["conductor.servic",{"_index":277,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{}}}],["conductor.service.t",{"_index":290,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["conductor.service.ts:116",{"_index":351,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:127",{"_index":348,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:138",{"_index":347,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:14",{"_index":346,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:29",{"_index":300,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["conductor.service.ts:44",{"_index":302,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["conductor.service.ts:46",{"_index":352,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:57",{"_index":349,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:75",{"_index":353,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:89",{"_index":350,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:95",{"_index":354,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor/cont",{"_index":156,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conductor/contain",{"_index":135,"title":{},"body":{"interfaces/ContainersMap.html":{},"coverage.html":{}}}],["conductor/content/content.directive.t",{"_index":332,"title":{},"body":{"directives/ContentDirective.html":{},"coverage.html":{}}}],["conductor/content/content.directive.ts:16",{"_index":336,"title":{},"body":{"directives/ContentDirective.html":{}}}],["conductor/content/content.directive.ts:18",{"_index":335,"title":{},"body":{"directives/ContentDirective.html":{}}}],["conductor/content/content.model.t",{"_index":144,"title":{},"body":{"interfaces/Content.html":{},"coverage.html":{}}}],["conductor/default",{"_index":276,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["conductorconstructor",{"_index":288,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{}}}],["conductorservic",{"_index":297,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["configur",{"_index":882,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["conform",{"_index":275,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["connect",{"_index":1138,"title":{},"body":{"license.html":{}}}],["consist",{"_index":1303,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["console.error(`${compmodel.nam",{"_index":780,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["console.error(`${express",{"_index":956,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["console.log('dynam",{"_index":696,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["const",{"_index":363,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constant",{"_index":1286,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["constrain",{"_index":1162,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constraint",{"_index":1249,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["construct",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constructor(animationshandlerconstructor",{"_index":653,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["constructor(build",{"_index":79,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["constructor(conductorconstructor",{"_index":299,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["constructor(containersquerylist",{"_index":345,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["constructor(el",{"_index":441,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["constructor(priv",{"_index":296,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constructor(protect",{"_index":778,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["constructor(rendererfactori",{"_index":972,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["constructor(serializerconstructor",{"_index":839,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["constructor(serializermap",{"_index":499,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["constructor(templateref",{"_index":334,"title":{},"body":{"directives/ContentDirective.html":{}}}],["constructor(vcref",{"_index":323,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["constructor.model",{"_index":284,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{}}}],["constructor.model.t",{"_index":130,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductorConstructor.html":{},"coverage.html":{}}}],["constructor.token",{"_index":279,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{}}}],["constructor.token.t",{"_index":995,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor/compon",{"_index":129,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["constructor/cont",{"_index":231,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consum",{"_index":1244,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["contain",{"_index":139,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["container.direct",{"_index":283,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["container.directive.t",{"_index":317,"title":{},"body":{"directives/ContentContainerDirective.html":{},"coverage.html":{}}}],["container.directive.ts:24",{"_index":327,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["container.directive.ts:29",{"_index":325,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["container.model",{"_index":218,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{}}}],["container.model.t",{"_index":314,"title":{},"body":{"interfaces/ContentContainer.html":{},"coverage.html":{}}}],["container.viewcontain",{"_index":404,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["container/cont",{"_index":217,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["container:str",{"_index":224,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["containernam",{"_index":315,"title":{},"body":{"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{}}}],["containers.map>(c",{"_index":414,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["containers.reduce((map,contain",{"_index":402,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["containersmap",{"_index":133,"title":{"interfaces/ContainersMap.html":{}},"body":{"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["containersquerylist",{"_index":235,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["containerssub",{"_index":361,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["content",{"_index":143,"title":{"interfaces/Content.html":{},"additional-documentation/content-conductor.html":{}},"body":{"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["content.model",{"_index":341,"title":{},"body":{"directives/ContentDirective.html":{}}}],["content/content.direct",{"_index":282,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["content/content.model",{"_index":234,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["content=\"'on",{"_index":1197,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["content=\"containernam",{"_index":1195,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["content=\"on",{"_index":1199,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["contentchildren(contentdirect",{"_index":1218,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["contentchildren(onecontentdirect",{"_index":1226,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["contentchildren(twocontentdirect",{"_index":1227,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["contentconductor",{"_index":155,"title":{"interfaces/ContentConductor.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"additional-documentation/content-conductor.html":{}}}],["contentconductorconstructor",{"_index":229,"title":{"interfaces/ContentConductorConstructor.html":{}},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentconductorconstructortoken",{"_index":278,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentconductormodul",{"_index":239,"title":{"modules/ContentConductorModule.html":{}},"body":{"modules/ContentConductorModule.html":{},"modules.html":{},"overview.html":{}}}],["contentconductorservic",{"_index":158,"title":{"injectables/ContentConductorService.html":{}},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentcontain",{"_index":216,"title":{"interfaces/ContentContainer.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["contentcontainerdirect",{"_index":175,"title":{"directives/ContentContainerDirective.html":{}},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentcontainerdirective'",{"_index":208,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["contentdirect",{"_index":248,"title":{"directives/ContentDirective.html":{}},"body":{"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contents.map>(c",{"_index":422,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["contentsquerylist",{"_index":237,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["contentssub",{"_index":362,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["context",{"_index":1310,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["contract",{"_index":1135,"title":{},"body":{"license.html":{}}}],["control",{"_index":1201,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["convert",{"_index":899,"title":{},"body":{"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{}}}],["copi",{"_index":1099,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1088,"title":{},"body":{"license.html":{}}}],["core",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["correctli",{"_index":308,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["coverag",{"_index":990,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":31,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"injectables/StateCssMapperService.html":{},"index.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["create(injector",{"_index":797,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createanimationshandl",{"_index":652,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["createanimationshandler(el",{"_index":655,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["createanimationstatemachin",{"_index":76,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createanimationstatemachine(el",{"_index":85,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["createanimationstatemachine]{@link",{"_index":99,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["createcompon",{"_index":721,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createcomponent(constructor",{"_index":744,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createcontentconductor",{"_index":298,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["createcontentconductor(containersquerylist",{"_index":301,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["createcontentconductor(this.contain",{"_index":1224,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["createcssmapper(map",{"_index":483,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createembeddedview(content.templ",{"_index":431,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["createinjector",{"_index":722,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createinjector(provid",{"_index":749,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createseri",{"_index":838,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-components.html":{}}}],["createserializer(map",{"_index":842,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["createstatecssmapp",{"_index":970,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["createstatecssmapper(el",{"_index":976,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["createstatecssmapper(this.element,this.cssmap",{"_index":488,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createstatemachin",{"_index":477,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["css",{"_index":33,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["cssmap",{"_index":442,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["cssmapper",{"_index":461,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["cssmapperservic",{"_index":444,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["current",{"_index":36,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"directives/LeaveDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["currentst",{"_index":1272,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["custom",{"_index":273,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["da",{"_index":535,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["damag",{"_index":1131,"title":{},"body":{"license.html":{}}}],["daservic",{"_index":538,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["data",{"_index":666,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-components.html":{}}}],["data.model",{"_index":826,"title":{},"body":{"interfaces/DynamicComponentModel.html":{}}}],["data.model.t",{"_index":665,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"coverage.html":{}}}],["data/dynam",{"_index":664,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["dc",{"_index":713,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["dcontainernam",{"_index":1187,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["dcsservic",{"_index":1296,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["deal",{"_index":1102,"title":{},"body":{"license.html":{}}}],["dec",{"_index":1053,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declar",{"_index":242,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["decor",{"_index":1242,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["decrement",{"_index":1054,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["default",{"_index":87,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["defaultanimationsstatemachin",{"_index":637,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["defaultcontentconductorservic",{"_index":272,"title":{"classes/DefaultContentConductorService.html":{}},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["defaultdynamicanimationshandlerservic",{"_index":432,"title":{"classes/DefaultDynamicAnimationsHandlerService.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["defaultdynamiccomponentseri",{"_index":490,"title":{"classes/DefaultDynamicComponentSerializer.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["defin",{"_index":39,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["definin",{"_index":1274,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["definit",{"_index":131,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["demo",{"_index":1080,"title":{},"body":{"index.html":{}}}],["depend",{"_index":240,"title":{"dependencies.html":{}},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deriv",{"_index":1214,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["descend",{"_index":1219,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["describ",{"_index":616,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{}}}],["descript",{"_index":10,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{}}}],["deseri",{"_index":782,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["deserializemap",{"_index":835,"title":{},"body":{"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["deserializemap.get(componentnam",{"_index":511,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["design",{"_index":1300,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["desir",{"_index":639,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["destin",{"_index":210,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["destroy",{"_index":21,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["destroy():void",{"_index":220,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["destroycomp",{"_index":723,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["detach",{"_index":191,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["detachedview",{"_index":396,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["detachview",{"_index":168,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detachview(contain",{"_index":189,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detachviews(contain",{"_index":197,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detail",{"_index":293,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["detect",{"_index":681,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["develop",{"_index":709,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["differ",{"_index":344,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["direct",{"_index":16,"title":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["directive'",{"_index":186,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["display",{"_index":188,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{}}}],["dispos",{"_index":1317,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["distinct",{"_index":1319,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["distinctuntilchang",{"_index":733,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["distribut",{"_index":1107,"title":{},"body":{"license.html":{}}}],["docs/examples/index.html#/contentconductor",{"_index":295,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["docs/examples/index.html#/dynamicanim",{"_index":587,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["docs/examples/index.html#/dynamiccompon",{"_index":712,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["document",{"_index":991,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":267,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["dsservic",{"_index":687,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["due",{"_index":1281,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["dure",{"_index":1215,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["dvk",{"_index":321,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["dvkemo",{"_index":1077,"title":{},"body":{"index.html":{}}}],["dvkleav",{"_index":526,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["dvkleavetim",{"_index":1020,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dvkleavetiming(tim",{"_index":893,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{}}}],["dynam",{"_index":18,"title":{"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamicanimationsdirect",{"_index":437,"title":{"directives/DynamicAnimationsDirective.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-animations.html":{}}}],["dynamicanimationshandl",{"_index":436,"title":{"interfaces/DynamicAnimationsHandler.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["dynamicanimationshandlerconstructor",{"_index":625,"title":{"interfaces/DynamicAnimationsHandlerConstructor.html":{}},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["dynamicanimationshandlerconstructortoken",{"_index":642,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamicanimationsmodul",{"_index":630,"title":{"modules/DynamicAnimationsModule.html":{}},"body":{"modules/DynamicAnimationsModule.html":{},"modules.html":{},"overview.html":{}}}],["dynamicanimationsservic",{"_index":539,"title":{"injectables/DynamicAnimationsService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicanimationsservice#createanimationshandl",{"_index":659,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["dynamiccomponentdata",{"_index":662,"title":{"interfaces/DynamicComponentData.html":{}},"body":{"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentdirect",{"_index":676,"title":{"directives/DynamicComponentDirective.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentmodel",{"_index":691,"title":{"interfaces/DynamicComponentModel.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentseri",{"_index":494,"title":{"interfaces/DynamicComponentSerializer.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentserializerconstructor",{"_index":831,"title":{"interfaces/DynamicComponentSerializerConstructor.html":{}},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["dynamiccomponentserializerconstructortoken",{"_index":845,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamiccomponentserializermap",{"_index":496,"title":{"interfaces/DynamicComponentSerializerMap.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"coverage.html":{}}}],["dynamiccomponentserializermap):dynamiccomponentseri",{"_index":834,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["dynamiccomponentserializerservic",{"_index":686,"title":{"injectables/DynamicComponentSerializerService.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentsmap",{"_index":843,"title":{"interfaces/DynamicComponentsMap.html":{}},"body":{"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentsmodul",{"_index":856,"title":{"modules/DynamicComponentsModule.html":{}},"body":{"modules/DynamicComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["dynamiccont",{"_index":1186,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["e",{"_index":694,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["each",{"_index":119,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{}}}],["element",{"_index":66,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["elementref",{"_index":537,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["emit",{"_index":1318,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["emitt",{"_index":1290,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["empti",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":178,"title":{},"body":{"interfaces/ContentConductor.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["enough",{"_index":1285,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["enter",{"_index":613,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["entir",{"_index":1306,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["entri",{"_index":929,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["enumer",{"_index":1044,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1079,"title":{},"body":{"index.html":{}}}],["even",{"_index":96,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["event",{"_index":1127,"title":{},"body":{"license.html":{}}}],["eventemitt",{"_index":766,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["eventemitter}",{"_index":738,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{}}}],["eventu",{"_index":881,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["exampl",{"_index":289,"title":{"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}},"body":{"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["except",{"_index":1246,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["execut",{"_index":807,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["exportas:'dynamiccomp2",{"_index":775,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["expos",{"_index":1243,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["express",{"_index":927,"title":{},"body":{"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["expression.length",{"_index":959,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expression.split(ngtransitionsymbols.eith",{"_index":935,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expression.split(ngtransitionsymbols.to",{"_index":945,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expressions.split(',').foreach(express",{"_index":933,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["extend",{"_index":236,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["fact",{"_index":1282,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["fail",{"_index":658,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["featur",{"_index":1063,"title":{},"body":{"index.html":{}}}],["feed",{"_index":711,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["few",{"_index":1245,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["field",{"_index":1305,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"license.html":{}}}],["find",{"_index":1265,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["finish",{"_index":521,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["fire",{"_index":808,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["first",{"_index":1288,"title":{},"body":{"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["fit",{"_index":1124,"title":{},"body":{"license.html":{}}}],["flatten",{"_index":412,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["flattenarrays(array",{"_index":409,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["flattened.push(...array",{"_index":411,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["follow",{"_index":1113,"title":{},"body":{"license.html":{}}}],["fomrindex",{"_index":221,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["for(let",{"_index":393,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["form",{"_index":160,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["format",{"_index":1240,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["forroot",{"_index":268,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["forroot(conductorconstructor",{"_index":286,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["found",{"_index":781,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["free",{"_index":1095,"title":{},"body":{"license.html":{},"additional-documentation/content-conductor.html":{}}}],["fromindex",{"_index":202,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["fromresolvedprovid",{"_index":792,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["fromstat",{"_index":120,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"injectables/NgTransitionService.html":{}}}],["fulli",{"_index":1253,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["function",{"_index":24,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["furnish",{"_index":1112,"title":{},"body":{"license.html":{}}}],["futur",{"_index":1287,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["garbag",{"_index":620,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["gener",{"_index":1084,"title":{},"body":{"index.html":{},"additional-documentation/content-conductor.html":{}}}],["get",{"_index":1056,"title":{"index.html":{},"license.html":{}},"body":{}}],["getcompon",{"_index":497,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getcomponent(componentnam",{"_index":502,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getcssclass",{"_index":971,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getcssclass(st",{"_index":978,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getcssclass(state:str",{"_index":981,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getnam",{"_index":498,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getname(componentconstructor",{"_index":505,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["gettempl",{"_index":337,"title":{},"body":{"directives/ContentDirective.html":{}}}],["getviewcontain",{"_index":329,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["given",{"_index":77,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["goal",{"_index":1060,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1094,"title":{},"body":{"license.html":{}}}],["green",{"_index":579,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["handl",{"_index":260,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/StateCssMapperService.html":{}}}],["handler",{"_index":627,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"miscellaneous/variables.html":{}}}],["handler.constructor",{"_index":640,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.constructor.t",{"_index":626,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"coverage.html":{}}}],["handler.model",{"_index":456,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.model.t",{"_index":615,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"coverage.html":{}}}],["handler.servic",{"_index":641,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["handler.service.t",{"_index":435,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:24",{"_index":447,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:39",{"_index":454,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:43",{"_index":450,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:55",{"_index":452,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:59",{"_index":448,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.token",{"_index":643,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.token.t",{"_index":1012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler/default",{"_index":434,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["handler/dynam",{"_index":455,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hard",{"_index":876,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["held",{"_index":29,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["here",{"_index":1068,"title":{},"body":{"index.html":{},"additional-documentation/dynamic-components.html":{}}}],["herebi",{"_index":1093,"title":{},"body":{"license.html":{}}}],["higher",{"_index":1075,"title":{},"body":{"index.html":{}}}],["holder",{"_index":1128,"title":{},"body":{"license.html":{}}}],["hook",{"_index":1289,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["hostbind",{"_index":886,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["hostbinding(\"@dvkleav",{"_index":890,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["html",{"_index":774,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["i=0",{"_index":394,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["identifi",{"_index":148,"title":{},"body":{"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentContainer.html":{},"coverage.html":{}}}],["if(!(oldcontents.indexof(cont",{"_index":428,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(!array.isarray(ql",{"_index":407,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(!sub.clos",{"_index":821,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(callback",{"_index":809,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(content.initialcontainernam",{"_index":429,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(expression.includes(ngtransitionsymbols.dec",{"_index":957,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.eith",{"_index":934,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.ent",{"_index":948,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.inc",{"_index":955,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.leav",{"_index":951,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.to",{"_index":944,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(stream",{"_index":802,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(subscript",{"_index":819,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(this.animationshandl",{"_index":593,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.animationsstatemachin",{"_index":469,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.containerssub",{"_index":370,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(this.contentssub",{"_index":373,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(this.cssmap",{"_index":484,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.cssmapp",{"_index":485,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.isstring(express",{"_index":932,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(this.istransition(anim",{"_index":597,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.myst",{"_index":585,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.st",{"_index":467,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.transit",{"_index":478,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["ifram",{"_index":313,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["ignor",{"_index":360,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["implement",{"_index":232,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["impli",{"_index":1122,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}}}],["inc",{"_index":1051,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["includ",{"_index":1104,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["increment",{"_index":1052,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["individu",{"_index":926,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["init",{"_index":22,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["init():void",{"_index":219,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["initi",{"_index":32,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["initialcontainernam",{"_index":150,"title":{},"body":{"interfaces/Content.html":{},"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["initializecompon",{"_index":724,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initializecomponent(compmodel",{"_index":753,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initializedvalu",{"_index":1304,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["initialst",{"_index":628,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["initialvalu",{"_index":673,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["initvalu",{"_index":759,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initvalues[input",{"_index":800,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["inject",{"_index":70,"title":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["inject(animationstatemachineconstructortoken",{"_index":103,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["inject(contentconductorconstructortoken",{"_index":309,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["inject(dynamicanimationshandlerconstructortoken",{"_index":660,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["inject(dynamiccomponentserializerconstructortoken",{"_index":848,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["injectiontoken('animationstatemachineconstructortoken",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('containersconductorconstructortoken",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dynamicanimationshandlerconstructortoken",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dynamiccomponentserializerconstructortoken",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":745,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["inner",{"_index":117,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["input",{"_index":322,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["input('dvk",{"_index":330,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["inputstream",{"_index":731,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["inputsubscript",{"_index":716,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["insert",{"_index":211,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["insertindex",{"_index":385,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["insid",{"_index":194,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["instal",{"_index":1071,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":708,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["instanti",{"_index":269,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["instead",{"_index":264,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"additional-documentation/dynamic-animations.html":{}}}],["intention",{"_index":703,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/ContentContainer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"interfaces/ContentContainer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["intern",{"_index":705,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["isn't",{"_index":98,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["isstate(metadata",{"_index":603,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["isstring(express",{"_index":958,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["istransition(metadata",{"_index":601,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["it'",{"_index":193,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["item",{"_index":1239,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["itself",{"_index":1271,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["js",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":1284,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["key",{"_index":114,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"miscellaneous/typealiases.html":{}}}],["keys.model.t",{"_index":1154,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["kind",{"_index":1121,"title":{},"body":{"license.html":{}}}],["kit",{"_index":1058,"title":{},"body":{"index.html":{}}}],["last",{"_index":196,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{}}}],["later",{"_index":1295,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["leav",{"_index":523,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["leave/leave.direct",{"_index":561,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["leavedirect",{"_index":544,"title":{"directives/LeaveDirective.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"overview.html":{}}}],["leavetim",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":241,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["length",{"_index":391,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["level",{"_index":113,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["liabil",{"_index":1132,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1129,"title":{},"body":{"license.html":{}}}],["librari",{"_index":1059,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1086,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycl",{"_index":678,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["limit",{"_index":166,"title":{},"body":{"interfaces/ContentConductor.html":{},"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["link",{"_index":101,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/typealiases.html":{}}}],["list",{"_index":1267,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["listen",{"_index":1217,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["listentocontainerschanges(contain",{"_index":413,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["listentocontentschanges(cont",{"_index":421,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["liter",{"_index":125,"title":{},"body":{"interfaces/AnimationTransitionsMap.html":{}}}],["locat",{"_index":209,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["long",{"_index":879,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["look",{"_index":980,"title":{},"body":{"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["machin",{"_index":13,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"miscellaneous/variables.html":{}}}],["machine.constructor",{"_index":92,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{}}}],["machine.constructor.t",{"_index":55,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"coverage.html":{}}}],["machine.model",{"_index":60,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["machine.model.t",{"_index":9,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"coverage.html":{}}}],["machine.servic",{"_index":645,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["machine.service.t",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["machine.token",{"_index":91,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{}}}],["machine.token.t",{"_index":1005,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["machine/anim",{"_index":8,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["machine/default",{"_index":644,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["made",{"_index":704,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["main",{"_index":515,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["manag",{"_index":1321,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["manual",{"_index":265,"title":{},"body":{"modules/ContentConductorModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["map",{"_index":108,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"injectables/NgStateService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["map((ql:querylist)=>ql.toarray",{"_index":423,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["map(cb",{"_index":812,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["map.model",{"_index":357,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/StateCssMapperService.html":{}}}],["map.model.t",{"_index":137,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{}}}],["map.model.ts:18",{"_index":964,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["map.model.ts:6",{"_index":141,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/DynamicComponentsMap.html":{}}}],["map/contain",{"_index":136,"title":{},"body":{"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["map/dynam",{"_index":507,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["map/stat",{"_index":457,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["map[container.containernam",{"_index":403,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["map[entri",{"_index":988,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["map[nam",{"_index":852,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["map[stat",{"_index":982,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["map[state.nam",{"_index":905,"title":{},"body":{"injectables/NgStateService.html":{}}}],["mapcontain",{"_index":401,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["mapper",{"_index":46,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["mapper.model",{"_index":43,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/StateCssMapperService.html":{}}}],["mapper.model.t",{"_index":965,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"coverage.html":{}}}],["mapper.servic",{"_index":459,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["mapper.service.t",{"_index":969,"title":{},"body":{"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["mapper.service.ts:11",{"_index":974,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper.service.ts:22",{"_index":979,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper.service.ts:32",{"_index":977,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper/st",{"_index":42,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["mark",{"_index":735,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["match",{"_index":53,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["matter",{"_index":672,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/LeaveDirective.html":{}}}],["member",{"_index":516,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["merchant",{"_index":1123,"title":{},"body":{"license.html":{}}}],["merg",{"_index":358,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"license.html":{}}}],["merge(c.changes.pip",{"_index":416,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["metadata",{"_index":319,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["method",{"_index":75,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["miscellan",{"_index":1043,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1087,"title":{},"body":{"license.html":{}}}],["model",{"_index":668,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["model.model",{"_index":768,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["model.model.t",{"_index":823,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["model/dynam",{"_index":767,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["modifi",{"_index":1066,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":238,"title":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"modules.html":{}},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["modulewithprovid",{"_index":281,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["moment",{"_index":1258,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["more",{"_index":1262,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["mouseev",{"_index":695,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["move",{"_index":163,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["moveview",{"_index":169,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["moveview(previouscontain",{"_index":200,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["moveviews(previouscontain",{"_index":213,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["multipl",{"_index":165,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["myaniamt",{"_index":568,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mycompon",{"_index":565,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mycssmap",{"_index":582,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mystat",{"_index":566,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["name",{"_index":83,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["name:str",{"_index":142,"title":{},"body":{"interfaces/ContainersMap.html":{}}}],["necessari",{"_index":93,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicComponentData.html":{},"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["need",{"_index":874,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["new",{"_index":65,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["new(...args):ani",{"_index":132,"title":{},"body":{"interfaces/ComponentConstructor.html":{}}}],["new(serializermap",{"_index":833,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["newtransit",{"_index":917,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["newtransitions[fromstate][tost",{"_index":923,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["next",{"_index":23,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/DynamicAnimationsHandler.html":{},"additional-documentation/dynamic-animations.html":{}}}],["nextcontain",{"_index":201,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["nextcontainer:str",{"_index":222,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["nextstat",{"_index":48,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["nextstate(tost",{"_index":449,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["nextstate(tostate:str",{"_index":466,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["ng",{"_index":556,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1216,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["ngfor",{"_index":1185,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["ngif",{"_index":1184,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["ngmodul",{"_index":280,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["ngondestroy",{"_index":187,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["ngoninit",{"_index":536,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["ngrx",{"_index":1292,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["ngstateservic",{"_index":543,"title":{"injectables/NgStateService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgStateService.html":{},"coverage.html":{},"overview.html":{}}}],["ngtransitionservic",{"_index":541,"title":{"injectables/NgTransitionService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"overview.html":{}}}],["ngtransitionst",{"_index":559,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{}}}],["ngtransitionstates.void",{"_index":610,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.void]:transition.anim",{"_index":954,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.wildcard",{"_index":952,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.wildcard]:transition.anim",{"_index":950,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionsymbol",{"_index":914,"title":{},"body":{"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{}}}],["noninfring",{"_index":1126,"title":{},"body":{"license.html":{}}}],["normal",{"_index":519,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{}}}],["normalizedcont",{"_index":366,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["normalizedcontain",{"_index":364,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["normalizequerylists(ql",{"_index":405,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["note",{"_index":702,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["noth",{"_index":872,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["notic",{"_index":1116,"title":{},"body":{"license.html":{}}}],["nottypedkey",{"_index":1152,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["now",{"_index":1315,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["npm",{"_index":1072,"title":{},"body":{"index.html":{}}}],["null",{"_index":377,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}}}],["number",{"_index":121,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["number):viewref",{"_index":225,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["number):void",{"_index":223,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["numbercompon",{"_index":1298,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["numer",{"_index":1275,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["object",{"_index":30,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["object.keys(callback",{"_index":811,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["object.keys(initvalues).map",{"_index":798,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["object.keys(map).foreach(entry=>renderer.removeclass(el",{"_index":987,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["object.keys(map).foreach(nam",{"_index":849,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["object.keys(newtransitions).foreach(fromst",{"_index":919,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["object.keys(newtransitions[fromstate]).foreach(tost",{"_index":920,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["object.keys(streams).map(input",{"_index":804,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["observ",{"_index":152,"title":{},"body":{"interfaces/Content.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["observable}",{"_index":801,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["obtain",{"_index":1098,"title":{},"body":{"license.html":{}}}],["occur",{"_index":124,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["of(c.toarray()).pip",{"_index":415,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["offer",{"_index":1069,"title":{},"body":{"index.html":{}}}],["old",{"_index":961,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["oldcont",{"_index":425,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["ommit",{"_index":177,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["on",{"_index":205,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["onclick",{"_index":693,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["ondestroy",{"_index":534,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["onecont",{"_index":1208,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["onecontentdirect",{"_index":1203,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["oninit",{"_index":533,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["open",{"_index":583,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["open';th",{"_index":1279,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["oper",{"_index":734,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["option",{"_index":84,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{}}}],["order",{"_index":291,"title":{},"body":{"injectables/ContentConductorService.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["origin",{"_index":572,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["otherwis",{"_index":528,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"license.html":{}}}],["out",{"_index":251,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":771,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["outputcallback",{"_index":699,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["outputsubscript",{"_index":717,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["outsid",{"_index":1266,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["overriden",{"_index":343,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["overview",{"_index":1141,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1030,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1180,"title":{"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}},"body":{}}],["param",{"_index":104,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/variables.html":{}}}],["paramet",{"_index":82,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{}}}],["pars",{"_index":925,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["parsest",{"_index":900,"title":{},"body":{"injectables/NgStateService.html":{}}}],["parsestates(st",{"_index":902,"title":{},"body":{"injectables/NgStateService.html":{}}}],["parsetransitionexpression(transit",{"_index":930,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["part",{"_index":253,"title":{},"body":{"modules/ContentConductorModule.html":{},"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-animations.html":{}}}],["partial",{"_index":1280,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["particular",{"_index":123,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"injectables/DynamicAnimationsService.html":{},"license.html":{}}}],["pass",{"_index":522,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["permiss",{"_index":1092,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1111,"title":{},"body":{"license.html":{}}}],["person",{"_index":1097,"title":{},"body":{"license.html":{}}}],["piec",{"_index":1314,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["pipe",{"_index":685,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["plan",{"_index":1276,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["play",{"_index":37,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"additional-documentation/dynamic-animations.html":{}}}],["pleas",{"_index":1259,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["point",{"_index":710,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["portion",{"_index":1119,"title":{},"body":{"license.html":{}}}],["potenti",{"_index":743,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["predefin",{"_index":1048,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":1183,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["preserv",{"_index":1313,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["preset",{"_index":1202,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["previouscontain",{"_index":207,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["privat",{"_index":102,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{}}}],["project",{"_index":1083,"title":{},"body":{"index.html":{}}}],["projects/.../anim",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../cont",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dynam",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../initi",{"_index":1148,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../input",{"_index":1150,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../leav",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../leave.directive.t",{"_index":1055,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../ng",{"_index":1045,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../not",{"_index":1153,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../output",{"_index":1155,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../typ",{"_index":1158,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/common/not",{"_index":1161,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/common/typ",{"_index":1165,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/cont",{"_index":134,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/dvk/src/lib/dynam",{"_index":5,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":94,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["properli",{"_index":1316,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["properti",{"_index":20,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/Content.html":{},"interfaces/ContentContainer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/typealiases.html":{}}}],["protect",{"_index":714,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["provid",{"_index":17,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"injectables/NgTransitionService.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["pseudo",{"_index":1016,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":884,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["publish",{"_index":1106,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1125,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-components.html":{}}}],["put",{"_index":149,"title":{},"body":{"interfaces/Content.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/DynamicComponentData.html":{}}}],["ql",{"_index":408,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["ql:querylist)=>ql.toarray",{"_index":417,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["queri",{"_index":1251,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["querylist",{"_index":162,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["querylist|querylist",{"_index":406,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["readonli",{"_index":154,"title":{},"body":{"interfaces/Content.html":{},"interfaces/ContentContainer.html":{},"additional-documentation/content-conductor.html":{}}}],["recogn",{"_index":1247,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["red",{"_index":581,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["refer",{"_index":28,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"directives/ContentContainerDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMapper.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["referenc",{"_index":1182,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["reflectiveinjector",{"_index":746,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["reflectiveinjector.resolve(provid",{"_index":793,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["releas",{"_index":27,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMapper.html":{}}}],["remov",{"_index":195,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["removeal",{"_index":966,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["render",{"_index":983,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.addclass(element,this.getcssclass(state,map",{"_index":986,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.destroy",{"_index":989,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.removeclass(element,this.getcssclass(state,map",{"_index":985,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["rendererfactori",{"_index":975,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["rendererfactory2",{"_index":973,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["report",{"_index":1270,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["repres",{"_index":115,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicComponentData.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["request",{"_index":748,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["requir",{"_index":305,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"index.html":{}}}],["reset",{"_index":250,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["resolv",{"_index":307,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-components.html":{}}}],["resolvecomponentfactory(constructor",{"_index":796,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["resourc",{"_index":1237,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["respect",{"_index":638,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["restrict",{"_index":1103,"title":{},"body":{"license.html":{}}}],["result",{"_index":52,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["return",{"_index":78,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["reus",{"_index":707,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["rich",{"_index":1064,"title":{},"body":{"index.html":{}}}],["right",{"_index":1105,"title":{},"body":{"license.html":{}}}],["run",{"_index":617,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["runtim",{"_index":636,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["rxj",{"_index":153,"title":{},"body":{"interfaces/Content.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":359,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{}}}],["safe",{"_index":1307,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["same",{"_index":682,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["scaley(0.0",{"_index":574,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["scaley(1.0",{"_index":571,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["section",{"_index":1260,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["see",{"_index":292,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{}}}],["selector",{"_index":320,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["sell",{"_index":1110,"title":{},"body":{"license.html":{}}}],["separ",{"_index":669,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["seri",{"_index":619,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["serial",{"_index":495,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["serializ",{"_index":1301,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["serializednam",{"_index":854,"title":{},"body":{"interfaces/DynamicComponentsMap.html":{}}}],["serializedname:str",{"_index":855,"title":{},"body":{"interfaces/DynamicComponentsMap.html":{}}}],["serializemap",{"_index":836,"title":{},"body":{"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializemap.get(componentconstructor",{"_index":512,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.constructor",{"_index":847,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{}}}],["serializer.constructor.t",{"_index":832,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{},"coverage.html":{}}}],["serializer.model",{"_index":509,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.model.t",{"_index":827,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{},"coverage.html":{}}}],["serializer.model.ts:7",{"_index":828,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["serializer.model.ts:8",{"_index":829,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["serializer.servic",{"_index":867,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["serializer.service.t",{"_index":837,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"coverage.html":{}}}],["serializer.service.ts:20",{"_index":840,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.service.ts:27",{"_index":844,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.t",{"_index":493,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"coverage.html":{}}}],["serializer.token",{"_index":846,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{}}}],["serializer.token.t",{"_index":1025,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializer.ts:10",{"_index":500,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.ts:14",{"_index":503,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.ts:19",{"_index":506,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer/default",{"_index":492,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["serializer/dynam",{"_index":508,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializerconstructor",{"_index":841,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializerconstrutor",{"_index":868,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["serializermap",{"_index":501,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializermap.deserializemap.set(nam",{"_index":851,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializermap.serializemap.set(map[nam",{"_index":850,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serialz",{"_index":706,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["serveangular",{"_index":1081,"title":{},"body":{"index.html":{}}}],["server",{"_index":1294,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["servic",{"_index":74,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-components.html":{}}}],["set",{"_index":318,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["setanim",{"_index":439,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["setanimations(anim",{"_index":552,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["setanimations(transit",{"_index":451,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["setcomponentmodel(compmodel",{"_index":765,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setcssmap",{"_index":440,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["setcssmap(map",{"_index":453,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["setinitialvalu",{"_index":725,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setinitialvalues(initvalu",{"_index":757,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setleavetim",{"_index":885,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["setleavetiming(tim",{"_index":888,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["setstate(st",{"_index":551,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["shall",{"_index":1117,"title":{},"body":{"license.html":{}}}],["shape",{"_index":11,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":863,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["simpl",{"_index":1254,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["simpli",{"_index":1277,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["singl",{"_index":204,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["skip",{"_index":529,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["softwar",{"_index":1100,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["specif",{"_index":623,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["specifi",{"_index":192,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["specii",{"_index":524,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["standard",{"_index":1241,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["start",{"_index":116,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["state",{"_index":7,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state('closed',styl",{"_index":573,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state('open',styl",{"_index":569,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state(state:str",{"_index":591,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["state.servic",{"_index":563,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["state.service.t",{"_index":898,"title":{},"body":{"injectables/NgStateService.html":{},"coverage.html":{}}}],["state.service.ts:10",{"_index":901,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state.service.ts:17",{"_index":903,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state.styl",{"_index":906,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state/ng",{"_index":562,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgStateService.html":{},"coverage.html":{}}}],["state1",{"_index":936,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state1]:transition.anim",{"_index":943,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state2",{"_index":938,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state2]:transition.anim",{"_index":941,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state:str",{"_index":45,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["state:string)=>void",{"_index":968,"title":{},"body":{"interfaces/StateCSSMapper.html":{}}}],["statecssmap",{"_index":443,"title":{"interfaces/StateCSSMap.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["statecssmapp",{"_index":41,"title":{"interfaces/StateCSSMapper.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["statecssmapper)=>str",{"_index":50,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["statecssmapper)=>void",{"_index":47,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["statecssmapperservic",{"_index":445,"title":{"injectables/StateCssMapperService.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{}}}],["stateless",{"_index":1299,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["statemachineconstructor",{"_index":80,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["statement",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["statemod",{"_index":588,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["states.reduce((map,st",{"_index":904,"title":{},"body":{"injectables/NgStateService.html":{}}}],["states.servic",{"_index":458,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["states.service.t",{"_index":73,"title":{},"body":{"injectables/AnimationStatesService.html":{},"coverage.html":{}}}],["states.service.ts:24",{"_index":81,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["states.service.ts:38",{"_index":86,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["states/anim",{"_index":72,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["states[0].trim",{"_index":937,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["states[1].trim",{"_index":939,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["statesservic",{"_index":542,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["static",{"_index":285,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["step",{"_index":527,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["still",{"_index":742,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["store",{"_index":670,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-components.html":{}}}],["stream",{"_index":680,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["streams.model",{"_index":770,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{}}}],["streams.model.t",{"_index":1151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["streams/input",{"_index":769,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["streams[input",{"_index":805,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["string",{"_index":49,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["string):viewref",{"_index":226,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["strstate",{"_index":590,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["structur",{"_index":333,"title":{},"body":{"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["stub",{"_index":870,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":67,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["sub.unsubscrib",{"_index":822,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subject",{"_index":339,"title":{},"body":{"directives/ContentDirective.html":{},"directives/DynamicComponentDirective.html":{},"license.html":{},"additional-documentation/dynamic-components.html":{}}}],["sublicens",{"_index":1108,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1268,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["subscribe(cont",{"_index":424,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["subscribe(contain",{"_index":418,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["subscribe(ev",{"_index":814,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subscribe(valu",{"_index":806,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subscript",{"_index":355,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["subscriptions.foreach(sub",{"_index":820,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["substanti",{"_index":1118,"title":{},"body":{"license.html":{}}}],["such",{"_index":1250,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["suitabl",{"_index":667,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["super(tref",{"_index":1205,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["suppli",{"_index":161,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["support",{"_index":312,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"injectables/NgTransitionService.html":{},"modules.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["svg",{"_index":1139,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1050,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":303,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{},"miscellaneous/typealiases.html":{}}}],["tabl",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":880,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["templat",{"_index":151,"title":{},"body":{"interfaces/Content.html":{},"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["templateref",{"_index":147,"title":{},"body":{"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["test",{"_index":1264,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["text",{"_index":692,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["textclick",{"_index":1308,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["textcompon",{"_index":698,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["textcomponent':textcompon",{"_index":690,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.animationshandl",{"_index":607,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandler.nextstate(ngtransitionstates.void",{"_index":614,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandler.nextstate(this.strst",{"_index":594,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandlerconstructor",{"_index":661,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["this.animationsstatemachin",{"_index":479,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.destroy",{"_index":473,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.init",{"_index":482,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.next",{"_index":470,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationstatesbuild",{"_index":480,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["this.attachinputstreams(compmodel.input",{"_index":788,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.attachoutputcallbacks(compmodel.outputcallback",{"_index":789,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.build",{"_index":106,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["this.ccservic",{"_index":1223,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.closeallsubscriptions(this.inputsubscript",{"_index":817,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.closeallsubscriptions(this.outputsubscript",{"_index":816,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref",{"_index":784,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.changedetectorref.markforcheck",{"_index":791,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.destroy",{"_index":818,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.instance[cb",{"_index":813,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.instance[input",{"_index":799,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.conductor",{"_index":1222,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.attachview('two',vref);detach",{"_index":1234,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.attachviews('two',views);fin",{"_index":1236,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.destroy",{"_index":1238,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.detachview('one',2);attach",{"_index":1233,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.detachviews('one');and",{"_index":1235,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.init",{"_index":1229,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.init('on",{"_index":1225,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.moveview('one','two',3);detach",{"_index":1231,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.moveviews('one','two');th",{"_index":1230,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductorconstructor",{"_index":310,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["this.cont",{"_index":380,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["this.contain",{"_index":379,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["this.containersmap",{"_index":381,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].detach(index",{"_index":390,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].insert(view",{"_index":400,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].length",{"_index":397,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[content.initialcontainernam",{"_index":430,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].insert",{"_index":395,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].insert(view",{"_index":389,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].length",{"_index":387,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[previouscontainer].detach(fromindex",{"_index":388,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[previouscontainer].length",{"_index":384,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersquerylist",{"_index":376,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub",{"_index":382,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub.clos",{"_index":371,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub.unsubscrib",{"_index":372,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contents,this.onecontents,this.twocont",{"_index":1228,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.contents.foreach(cont",{"_index":427,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentsquerylist",{"_index":378,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub",{"_index":383,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub.clos",{"_index":374,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub.unsubscrib",{"_index":375,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.createcompon",{"_index":785,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.createcssmapper(cssmap",{"_index":462,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createcssmapper(map",{"_index":465,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createinjector(compmodel.provid",{"_index":786,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.createstatemachine(this.transit",{"_index":463,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createstatemachine(transit",{"_index":472,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmap",{"_index":475,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.cssmapp",{"_index":471,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.add(this.st",{"_index":489,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.destroy",{"_index":474,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.removeal",{"_index":486,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapperservic",{"_index":487,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["this.currentst",{"_index":1278,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["this.daservice.createanimationshandl",{"_index":608,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.data",{"_index":1309,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["this.dcontainernam",{"_index":1190,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.dcsservice.createseri",{"_index":1297,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["this.destroycomp",{"_index":783,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.dsservice.createseri",{"_index":689,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.dvkleav",{"_index":605,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.dvkleave.setleavetiming(\"500m",{"_index":606,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.dynamiccontents.push(0",{"_index":1189,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.el",{"_index":481,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.element.nativeel",{"_index":609,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.flattenarrays(cont",{"_index":426,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.flattenarrays(contain",{"_index":419,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.initializecomponent(compmodel",{"_index":777,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.inputsubscript",{"_index":803,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.isst",{"_index":599,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.listentocontainerschanges(normalizedcontain",{"_index":368,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.listentocontentschanges(normalizedcont",{"_index":369,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.mapcontainers(this.contain",{"_index":420,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.myst",{"_index":586,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.normalizequerylists(this.containersquerylist",{"_index":365,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.normalizequerylists(this.contentsquerylist",{"_index":367,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.onclick",{"_index":700,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.onecontents.push(0",{"_index":1211,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.outputsubscript",{"_index":810,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.parsetransitionexpression(transit",{"_index":918,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["this.rendererfactory.createrenderer(element,nul",{"_index":984,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["this.resolv",{"_index":795,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.seri",{"_index":688,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.serializer.getcomponent(compmodel.nam",{"_index":779,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.serializerconstructor(serializermap",{"_index":853,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["this.serializermap",{"_index":510,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["this.setinitialvalues(compmodel.initialvalu",{"_index":787,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.stat",{"_index":468,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.statemachineconstructor",{"_index":105,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["this.states.push(anim",{"_index":600,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.statesservice.parsestates(this.st",{"_index":612,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.strstat",{"_index":592,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.styl",{"_index":464,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.templateref",{"_index":342,"title":{},"body":{"directives/ContentDirective.html":{}}}],["this.text$.asobserv",{"_index":701,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.timingparam",{"_index":892,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["this.transervice.buildanimationtransitions(this.transit",{"_index":611,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.transit",{"_index":476,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.transitions.push(anim",{"_index":598,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.twocontents.push(0",{"_index":1213,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.vcref",{"_index":331,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["this.vcref.insert(this.compref.hostview",{"_index":790,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.vcref.parentinjector",{"_index":794,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["those",{"_index":257,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["though",{"_index":97,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["through",{"_index":261,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["tie",{"_index":825,"title":{},"body":{"interfaces/DynamicComponentModel.html":{}}}],["time",{"_index":618,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["timingparam",{"_index":891,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["tme321",{"_index":1091,"title":{},"body":{"license.html":{}}}],["togglest",{"_index":584,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["toindex",{"_index":172,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["token",{"_index":270,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":1061,"title":{},"body":{"index.html":{}}}],["top",{"_index":112,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["tort",{"_index":1136,"title":{},"body":{"license.html":{}}}],["tostat",{"_index":122,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/NgTransitionService.html":{}}}],["tostate:str",{"_index":624,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["tostate]:transition.anim",{"_index":947,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["track",{"_index":679,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["transervic",{"_index":540,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["transfer",{"_index":1302,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["transform",{"_index":570,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transit",{"_index":35,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition(\":leav",{"_index":895,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["transition(':enter',animate('200m",{"_index":576,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["transition(':leave',animate('200m",{"_index":580,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition('en",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('openclosed',animate('200m",{"_index":575,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition.expr",{"_index":931,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.servic",{"_index":558,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["transition.service.t",{"_index":907,"title":{},"body":{"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["transition.service.ts:12",{"_index":910,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.service.ts:22",{"_index":912,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.st",{"_index":560,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["transition.states.t",{"_index":1046,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transition.symbol",{"_index":915,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.symbols.t",{"_index":1047,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transition/ng",{"_index":557,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["transitions.model",{"_index":64,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{}}}],["transitions.model.t",{"_index":107,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"coverage.html":{}}}],["transitions.model.ts:12",{"_index":126,"title":{},"body":{"interfaces/AnimationTransitionsMap.html":{}}}],["transitions.model.ts:22",{"_index":110,"title":{},"body":{"interfaces/AnimationStylesMap.html":{}}}],["transitions.reduce((transmap",{"_index":916,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions/anim",{"_index":63,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["transitions[fromst",{"_index":946,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[ngtransitionstates.void",{"_index":949,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[ngtransitionstates.wildcard",{"_index":953,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[state1",{"_index":940,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[state2",{"_index":942,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["translat",{"_index":1291,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["transmap",{"_index":924,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmap[fromst",{"_index":921,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmap[fromstate][tost",{"_index":922,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmit",{"_index":1293,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["tref",{"_index":1204,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["trigger",{"_index":518,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["trigger(\"dvkleav",{"_index":894,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["trigger('dvkleav",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":1220,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["ts",{"_index":532,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{}}}],["twiddl",{"_index":266,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["two",{"_index":1206,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["two':'on",{"_index":1191,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["twocont",{"_index":1209,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["twocontentdirect",{"_index":1207,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["type",{"_index":25,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/Content.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["typealias",{"_index":1146,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedkey",{"_index":1157,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":306,"title":{},"body":{"injectables/ContentConductorService.html":{},"index.html":{}}}],["u",{"_index":304,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["uat/dvkimport",{"_index":1073,"title":{},"body":{"index.html":{}}}],["uat/dynamicviewkit",{"_index":1057,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":386,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"injectables/NgTransitionService.html":{}}}],["under",{"_index":875,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["unless",{"_index":1311,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["until",{"_index":1320,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["up",{"_index":184,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["us",{"_index":14,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["usag",{"_index":294,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{}}}],["user",{"_index":256,"title":{},"body":{"modules/ContentConductorModule.html":{},"index.html":{}}}],["usevalu",{"_index":287,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["usual",{"_index":622,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["valid",{"_index":928,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["valu",{"_index":88,"title":{},"body":{"injectables/AnimationStatesService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["values.model",{"_index":675,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{}}}],["values.model.t",{"_index":1149,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values/initi",{"_index":674,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{}}}],["variabl",{"_index":996,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["vcref",{"_index":326,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["version",{"_index":274,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"index.html":{}}}],["view",{"_index":138,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["viewchildren(contentcontainerdirect",{"_index":1221,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["viewcontain",{"_index":316,"title":{},"body":{"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{}}}],["viewcontainerref",{"_index":140,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["viewref",{"_index":171,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["viewscach",{"_index":392,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["void",{"_index":51,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["vref",{"_index":1232,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["wait",{"_index":871,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["warranti",{"_index":1120,"title":{},"body":{"license.html":{}}}],["way",{"_index":683,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["well",{"_index":1257,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["whether",{"_index":1133,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1065,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["wild",{"_index":1255,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["wildcard",{"_index":1049,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wire",{"_index":650,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"modules/DynamicComponentsModule.html":{}}}],["within",{"_index":254,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["without",{"_index":657,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"license.html":{}}}],["work",{"_index":1248,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["wrapper",{"_index":145,"title":{},"body":{"interfaces/Content.html":{},"interfaces/ContentContainer.html":{}}}],["x",{"_index":398,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["ye",{"_index":176,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["zone.j",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":249,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AnimationStateMachine.html":{"url":"interfaces/AnimationStateMachine.html","title":"interface - AnimationStateMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStateMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an animation state machine to be used by a component or\ndirective that wants to provide dynamic animations.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destroy\n                                \n                                \n                                        init\n                                \n                                \n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references held by the object created for \nthe state machine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                    \n                                \n                                \n                                    \n                                        init:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Initialize the state and css class of the state machine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transition the state from the current state to the next state, \nplaying any animations and applying any css classes as defined.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateCSSMapper } from \"../state-css-mapper/state-css-mapper.model\";\n\n/**\n * The shape of an animation state machine to be used by a component or\n * directive that wants to provide dynamic animations.\n * \n */\nexport interface AnimationStateMachine {\n\n  /**\n   * Initialize the state and css class of the state machine.\n   */\n  init: (state:string, mapper?: StateCSSMapper)=>void;\n\n  /**\n   * Transition the state from the current state to the next state, \n   * playing any animations and applying any css classes as defined.\n   */\n  next: (nextState: string, mapper?: StateCSSMapper)=>string;\n\n  /**\n   * Release the references held by the object created for \n   * the state machine.\n   */\n  destroy: ()=>void;\n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationStateMachineConstructor.html":{"url":"interfaces/AnimationStateMachineConstructor.html","title":"interface - AnimationStateMachineConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStateMachineConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.constructor.ts\n        \n\n            \n                Description\n            \n            \n                The shape of a class constructor that can act as the animation state machine.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { AnimationBuilder } from '@angular/animations';\nimport { AnimationStateMachine } from './animation-state-machine.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\n\n/**\n * The shape of a class constructor that can act as the animation state machine.\n */\nexport interface AnimationStateMachineConstructor {\n    new( \n        element: any, \n        transitions: AnimationTransitionsMap,\n        styles: AnimationStylesMap,\n        builder: AnimationBuilder):AnimationStateMachine;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationStatesService.html":{"url":"injectables/AnimationStatesService.html","title":"injectable - AnimationStatesService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AnimationStatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts\n        \n\n            \n                Description\n            \n            \n                This service creates an animation transition \nstate machine with the method \ncreateAnimationStateMachine \nfrom given AnimationTransitionsMap\nand AnimationStylesMap objects.\nThe returned state machine is in the shape of \nAnimationStateMachine.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimationStateMachine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: AnimationBuilder, stateMachineConstructor: AnimationStateMachineConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    AnimationBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateMachineConstructor\n                                                  \n                                                        \n                                                                    AnimationStateMachineConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createAnimationStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateAnimationStateMachine(element: any, transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Create an AnimationStateMachine to apply to an\nelement when the state is transitioned.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to apply the animations to.\n\n                                                        \n                                                \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The AnimationTransitionsMap to play. \n\n                                                        \n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationStylesMap to apply.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { AnimationBuilder } from '@angular/animations';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { AnimationStateMachineConstructorToken } from '../animation-state-machine/animation-state-machine.token';\nimport { AnimationStateMachineConstructor } from '../animation-state-machine/animation-state-machine.constructor';\n\n/*\n * This import is necessary for proper compilation even though\n * the type isn't used in this file.\n */\nimport { AnimationStateMachine } from '../animation-state-machine/animation-state-machine.model';\n\n/**\n * This service creates an animation transition \n * state machine with the method \n * [createAnimationStateMachine]{@link AnimationStatesService#createAnimationStateMachine} \n * from given {@link AnimationTransitionsMap}\n * and {@link AnimationStylesMap} objects.\n * \n * The returned state machine is in the shape of \n * {@link AnimationStateMachine}.\n */\n@Injectable()\nexport class AnimationStatesService {\n\n  constructor(\n    private builder: AnimationBuilder,\n    @Inject(AnimationStateMachineConstructorToken)\n    private stateMachineConstructor: AnimationStateMachineConstructor) {}\n\n  /**\n   * Create an {@link AnimationStateMachine} to apply to an\n   * element when the state is transitioned.\n   * @param element The element to apply the animations to.\n   * @param transitions The AnimationTransitionsMap to play. \n   * @param styles The AnimationStylesMap to apply.\n   */\n  createAnimationStateMachine(\n    element: any, \n    transitions: AnimationTransitionsMap = {},\n    styles: AnimationStylesMap) {\n\n    return new this.stateMachineConstructor(\n      element,\n      transitions,\n      styles,\n      this.builder\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationStylesMap.html":{"url":"interfaces/AnimationStylesMap.html","title":"interface - AnimationStylesMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStylesMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n        \n\n            \n                Description\n            \n            \n                A mapping of state strings to AnimationStyleMetadata\ncreated with the style function. \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [state: string]:    AnimationStyleMetadata\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts:22\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AnimationMetadata, AnimationStyleMetadata } from \"@angular/animations\";\n\n/**\n * A map of states and AnimationMetadata. \n * The top level keys are the strings representing the states\n * a transition starts from.  The inner keys are the strings \n * representing the state being transitioned to.  Each fromState \n * can have an animation defined for any number of toStates \n * to play when that particular transition occurs.\n * \n */\nexport interface AnimationTransitionsMap {\n  [fromState: string]: {\n    [toState: string]: AnimationMetadata | AnimationMetadata[];\n  }\n} \n\n/**\n * A mapping of state strings to AnimationStyleMetadata\n * created with the style function. \n */\nexport interface AnimationStylesMap {\n  [state: string]: AnimationStyleMetadata; \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationTransitionsMap.html":{"url":"interfaces/AnimationTransitionsMap.html","title":"interface - AnimationTransitionsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationTransitionsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of states and AnimationMetadata. \nThe top level keys are the strings representing the states\na transition starts from.  The inner keys are the strings \nrepresenting the state being transitioned to.  Each fromState \ncan have an animation defined for any number of toStates \nto play when that particular transition occurs.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [fromState: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts:12\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AnimationMetadata, AnimationStyleMetadata } from \"@angular/animations\";\n\n/**\n * A map of states and AnimationMetadata. \n * The top level keys are the strings representing the states\n * a transition starts from.  The inner keys are the strings \n * representing the state being transitioned to.  Each fromState \n * can have an animation defined for any number of toStates \n * to play when that particular transition occurs.\n * \n */\nexport interface AnimationTransitionsMap {\n  [fromState: string]: {\n    [toState: string]: AnimationMetadata | AnimationMetadata[];\n  }\n} \n\n/**\n * A mapping of state strings to AnimationStyleMetadata\n * created with the style function. \n */\nexport interface AnimationStylesMap {\n  [state: string]: AnimationStyleMetadata; \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentConstructor.html":{"url":"interfaces/ComponentConstructor.html","title":"interface - ComponentConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/component-constructor/component-constructor.model.ts\n        \n\n            \n                Description\n            \n            \n                Component constructor definition.\n\n            \n\n\n\n\n\n    \n\n\n    \n        export interface ComponentConstructor {\n    new(...args):any;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainersMap.html":{"url":"interfaces/ContainersMap.html","title":"interface - ContainersMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainersMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of string names to view containers.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    ViewContainerRef\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\n\n/**\n * A map of string names to view containers.\n */\nexport interface ContainersMap { \n    [name:string]: ViewContainerRef \n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Content.html":{"url":"interfaces/Content.html","title":"interface - Content","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Content\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content/content.model.ts\n        \n\n            \n                Description\n            \n            \n                A wrapper around a TemplateRef\nand a string name identifier\nfor the initial container to put\nthe content in.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        initialContainerName\n                                \n                                \n                                        template\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initialContainerName\n                                    \n                                \n                                \n                                    \n                                        initialContainerName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:     TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * A wrapper around a TemplateRef\n * and a string name identifier\n * for the initial container to put\n * the content in.\n */\nexport interface Content {\n    readonly template: TemplateRef;\n    initialContainerName: string;\n\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentConductor.html":{"url":"interfaces/ContentConductor.html","title":"interface - ContentConductor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentConductor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.model.ts\n        \n\n            \n                Description\n            \n            \n                This is the shape of the object returned by the injectable\nContentConductorService that allows content in the\nform of TemplateRefs supplied by a QueryList to\nbe moved between multiple containers. \nThe number of containers and the number of views to move between\nthem is not limited.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    attachView\n                                \n                                \n                                    attachViews\n                                \n                                \n                                    destroy\n                                \n                                \n                                    detachView\n                                \n                                \n                                    detachViews\n                                \n                                \n                                    init\n                                \n                                \n                                    moveView\n                                \n                                \n                                    moveViews\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachView\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachView(container: string, view: ViewRef, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:89\n                            \n                        \n\n\n                \n                    \n                            Attach a ViewRef to a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto attach the ViewRef to.\n\n                                                        \n                                                \n                                                \n                                                        view\n                                                        \n                                                                    ViewRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ViewRef to attach.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index in the container to attach the view.\nIf ommitted the view is attached to the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachViews(container: string, views?: ViewRef[], toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:99\n                            \n                        \n\n\n                \n                    \n                            Attach an array of ViewRefs to a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto attach the ViewRefs array to.\n\n                                                        \n                                                \n                                                \n                                                        views\n                                                        \n                                                                    ViewRef[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The ViewRefs array to attach.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index in the container to attach the views.\nIf ommitted the views are attached to the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:26\n                            \n                        \n\n\n                \n                    \n                            Clean up, should be called by the component or directive's\nngOnDestroy method that is displaying the content. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachView\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachView(container: string, index?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:54\n                            \n                        \n\n\n                \n                    \n                            Detach a ViewRef from a ContentContainerDirective\nspecified by it's index inside the ViewContainerRef\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string name of the ContentContainerDirective\nto remove the ViewRef from.\n\n                                                        \n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the ViewRef to remove. If ommitted the\nlast ViewRef is removed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ViewRef\n\n                            \n                                \n                                    The detached ViewRef.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachViews(container: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:79\n                            \n                        \n\n\n                \n                    \n                            Remove all ViewRefs from a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The name of the ContentContainerDirective \nto remove the ViewRefs from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ViewRef[]\n\n                            \n                                \n                                    An array of the ViewRefs removed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:20\n                            \n                        \n\n\n                \n                    \n                            Initialize the contents into the containers specified\nby the directives.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveView\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveView(previousContainer: string, nextContainer: string, fromIndex: number, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:39\n                            \n                        \n\n\n                \n                    \n                            Move a single ViewRef identified by it's index \nfrom one ContentContainerDirective to the another.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The source ContentContainerDirective's name\nwhere the ViewRef is currently located.\n\n                                                        \n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The destination ContentContainerDirective's name\nwhere the ViewRef will be moved to.\n\n                                                        \n                                                \n                                                \n                                                        fromIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index inside the nextContainer to insert the ViewRef.\nIf not specified the ViewRef is added to the end of the container.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveViews(previousContainer: string, nextContainer: string, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:68\n                            \n                        \n\n\n                \n                    \n                            Move all of the ViewRefs from one ContentContainerDirective\nto another.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto remove the ViewRef from.\n\n                                                        \n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto add the ViewRef to.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index inside nextContainer to insert\nthe views, if ommitted the views are inserted at the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ViewRef } from '@angular/core';\nimport { ContentContainer } from './content-container/content-container.model';\n\n/**\n * This is the shape of the object returned by the injectable\n * {@link ContentConductorService} that allows content in the\n * form of TemplateRefs supplied by a QueryList to\n * be moved between multiple containers. \n * \n * The number of containers and the number of views to move between\n * them is not limited.\n * \n */\nexport interface ContentConductor {\n\n    /**\n     * Initialize the contents into the containers specified\n     * by the directives.\n     */\n    init():void;\n\n    /**\n     *  Clean up, should be called by the component or directive's\n     *  ngOnDestroy method that is displaying the content. \n     */\n    destroy():void;\n\n    /**\n     * Move a single ViewRef identified by it's index \n     * from one {@link ContentContainerDirective} to the another.\n     * @param previousContainer The source ContentContainerDirective's name\n     * where the ViewRef is currently located.\n     * @param nextContainer The destination ContentContainerDirective's name\n     * where the ViewRef will be moved to.\n     * @param fomrIndex The index of the ViewRef to move from previousContainer.\n     * @param toIndex The index inside the nextContainer to insert the ViewRef.\n     * If not specified the ViewRef is added to the end of the container.\n     */\n    moveView( \n        previousContainer: string,\n        nextContainer:string, \n        fromIndex: number,\n        toIndex?: number):void;\n\n    /**\n     * Detach a ViewRef from a {@link ContentContainerDirective}\n     * specified by it's index inside the ViewContainerRef\n     * @param container The string name of the ContentContainerDirective\n     * to remove the ViewRef from.\n     * @param index The index of the ViewRef to remove. If ommitted the\n     * last ViewRef is removed.\n     * @returns The detached ViewRef.\n     */\n    detachView(\n        container:string,\n        index?: number):ViewRef;\n\n    /**\n     * Move all of the ViewRefs from one {@link ContentContainerDirective}\n     * to another.\n     * @param previousContainer The ContentContainerDirective \n     * to remove the ViewRef from.\n     * @param nextContainer The ContentContainerDirective \n     * to add the ViewRef to.\n     * @param toIndex The index inside nextContainer to insert\n     * the views, if ommitted the views are inserted at the end.\n     */\n    moveViews(\n        previousContainer: string, \n        nextContainer: string,\n        toIndex?: number):void;\n\n    /**\n     * Remove all ViewRefs from a {@link ContentContainerDirective}.\n     * @param container The name of the ContentContainerDirective \n     * to remove the ViewRefs from.\n     * @returns An array of the ViewRefs removed.\n     */\n    detachViews(container: string):ViewRef[];\n\n    /**\n     * Attach a ViewRef to a {@link ContentContainerDirective}.\n     * @param container The ContentContainerDirective \n     * to attach the ViewRef to.\n     * @param view The ViewRef to attach.\n     * @param toIndex The index in the container to attach the view.\n     * If ommitted the view is attached to the end.\n     */\n    attachView(container:string, view: ViewRef, toIndex?: number):void;\n\n    /**\n     * Attach an array of ViewRefs to a {@link ContentContainerDirective}.\n     * @param container The ContentContainerDirective \n     * to attach the ViewRefs array to.\n     * @param views The ViewRefs array to attach.\n     * @param toIndex The index in the container to attach the views.\n     * If ommitted the views are attached to the end.\n     */\n    attachViews(container:string, views?: ViewRef[], toIndex?: number):void;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentConductorConstructor.html":{"url":"interfaces/ContentConductorConstructor.html","title":"interface - ContentConductorConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentConductorConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.model.ts\n        \n\n            \n                Description\n            \n            \n                A constructor that returns an implementation \nof ContentConductor.  \n\n            \n\n\n\n\n\n    \n\n\n    \n        import { QueryList } from '@angular/core';\nimport { ContentConductor } from \"../content-conductor.model\";\nimport { ContentContainer } from '../content-container/content-container.model';\nimport { Content } from '../content/content.model';\n\n/**\n * A constructor that returns an implementation \n * of {@link ContentConductor}.  \n * \n * @param containersQueryList A QueryList or an array of  \n * QueryLists of ContentContainer directives or directives \n * that extend ContentContainer the view will be put in.  \n * \n * @param contentsQueryList A QueryList or an array of  \n * QueryLists of Content directives or directives that\n * extends Content\n */\nexport interface ContentConductorConstructor {\n  new(\n    containersQueryLists: QueryList | QueryList[],\n    contentsQueryLists : QueryList | QueryList[]\n  ):ContentConductor;\n}\n  \n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentConductorModule.html":{"url":"modules/ContentConductorModule.html","title":"module - ContentConductorModule","body":"\n                   \n\n\n\n\n  Modules\n  ContentConductorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentConductorModule\n\n\n\ncluster_ContentConductorModule_declarations\n\n\n\ncluster_ContentConductorModule_exports\n\n\n\ncluster_ContentConductorModule_providers\n\n\n\n\nContentContainerDirective\n\nContentContainerDirective\n\n\n\nContentConductorModule\n\nContentConductorModule\n\nContentConductorModule -->\n\nContentContainerDirective->ContentConductorModule\n\n\n\n\n\nContentDirective\n\nContentDirective\n\nContentConductorModule -->\n\nContentDirective->ContentConductorModule\n\n\n\n\n\nContentContainerDirective \n\nContentContainerDirective \n\nContentContainerDirective  -->\n\nContentConductorModule->ContentContainerDirective \n\n\n\n\n\nContentDirective \n\nContentDirective \n\nContentDirective  -->\n\nContentConductorModule->ContentDirective \n\n\n\n\n\nContentConductorService\n\nContentConductorService\n\nContentConductorModule -->\n\nContentConductorService->ContentConductorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Content Conductor Module contains the parts necessary to define \ncontainers within a component's view, allow users to provide content\nfor those containers, and move the content between those containers \nbased on string names assigned to each container.\nThis functionality is handled through Angular's own abstractions \ninstead of manually twiddling DOM elements.\nThe forRoot function instantiates the module with a token \nfor the ContentConductorService to actually create the \nContentConductor that provides the functionality and must \nbe called for the provided functionality.  The optional parameter \nis the class that actually provides the functionality for moving\ncontent.  By default the DefaultContentConductorService is\nused but a custom version can be supplied that conforms to the\nContentConductor interface.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContentContainerDirective\n                            \n                            \n                                ContentDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ContentConductorService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ContentContainerDirective\n                            \n                            \n                                    ContentDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { DefaultContentConductorService } from './default-content-conductor/default-content-conductor.service';\nimport { ContentConductorConstructorToken } from './content-conductor-constructor/content-conductor-constructor.token';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ContentConductorService } from './content-conductor.service';\nimport { ContentDirective } from './content/content.directive';\nimport { ContentContainerDirective } from './content-container/content-container.directive';\nimport { ContentConductorConstructor } from './content-conductor-constructor/content-conductor-constructor.model';\n\n/**\n * The Content Conductor Module contains the parts necessary to define \n * containers within a component's view, allow users to provide content\n * for those containers, and move the content between those containers \n * based on string names assigned to each container.\n * \n * This functionality is handled through Angular's own abstractions \n * instead of manually twiddling DOM elements.\n * \n * The forRoot function instantiates the module with a token \n * for the {@link ContentConductorService} to actually create the \n * {@link ContentConductor} that provides the functionality and must \n * be called for the provided functionality.  The optional parameter \n * is the class that actually provides the functionality for moving\n * content.  By default the {@link DefaultContentConductorService} is\n * used but a custom version can be supplied that conforms to the\n * {@link ContentConductor} interface.\n */\n@NgModule({\n  declarations: [\n    ContentDirective, \n    ContentContainerDirective \n  ],\n  exports: [\n    ContentDirective, \n    ContentContainerDirective\n  ],\n  providers: [\n    ContentConductorService\n  ]\n})\nexport class ContentConductorModule {\n  static forRoot(conductorConstructor: ContentConductorConstructor = DefaultContentConductorService): ModuleWithProviders {\n    return {\n      ngModule: ContentConductorModule,\n      providers: [\n        { \n          provide: ContentConductorConstructorToken, \n          useValue: conductorConstructor  \n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentConductorService.html":{"url":"injectables/ContentConductorService.html","title":"injectable - ContentConductorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ContentConductorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.service.ts\n        \n\n            \n                Description\n            \n            \n                This service can be injected into a component in order to\ncreate a ContentConductor.\nSee ContentConductor for the details.\nExample of usage:\n../../docs/examples/index.html#/ContentConductor\n\n            \n\n            \n                Example\n            \n            \n                        \n                            constructor(private conductorService: ContentConductorService) {}\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createContentConductor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(conductorConstructor: ContentConductorConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content-conductor.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conductorConstructor\n                                                  \n                                                        \n                                                                    ContentConductorConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createContentConductor\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateContentConductor(containersQueryList: QueryList | QueryList[], contentsQueryList: QueryList | QueryList[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.service.ts:44\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                        U\n                                \n                            \n                        \n\n                \n                    \n                            Create a ContentConductor\nfor moving content around a component's template.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        containersQueryList\n                                                        \n                                                                    QueryList | QueryList[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A QueryList or array of QueryLists of \nContentContainers or directives extending ContentContainer.\n\n                                                        \n                                                \n                                                \n                                                        contentsQueryList\n                                                        \n                                                                    QueryList | QueryList[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A QueryList or array of QueryLists of Content \ndirectives or directives extending Content.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The ContentConductor\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, QueryList, Inject } from '@angular/core';\nimport { ContentContainer } from './content-container/content-container.model';\nimport { ContentConductorConstructorToken } from './content-conductor-constructor/content-conductor-constructor.token';\nimport { ContentConductorConstructor } from './content-conductor-constructor/content-conductor-constructor.model';\nimport { Content } from './content/content.model';\n\n/*\n * Even though this import is not used it is required for typescript\n * to resolve the return type of the createContentConductor method.\n * If it is removed this service will not compile correctly.\n */\nimport { ContentConductor } from './content-conductor.model';\n\n/**\n * This service can be injected into a component in order to\n * create a {@link ContentConductor}.\n * \n * See {@link ContentConductor} for the details.\n * \n *  \n * Example of usage:\n * ../../docs/examples/index.html#/ContentConductor\n *\n * \n * @example\n * constructor(private conductorService: ContentConductorService) {}\n */\n@Injectable()\nexport class ContentConductorService {\n \n  constructor(\n    @Inject(ContentConductorConstructorToken) \n    private conductorConstructor: ContentConductorConstructor) { }\n\n  /**\n   * Create a {@link ContentConductor}\n   * for moving content around a component's template.\n   * @param containersQueryList A QueryList or array of QueryLists of \n   * ContentContainers or directives extending ContentContainer.\n   * @param contentsQueryList A QueryList or array of QueryLists of Content \n   * directives or directives extending Content.\n   * @return The ContentConductor\n   */\n  createContentConductor(\n    containersQueryList: QueryList | QueryList[],\n    contentsQueryList : QueryList | QueryList[]) {\n    \n    return  new this.conductorConstructor(\n      containersQueryList,\n      contentsQueryList\n    );\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainer.html":{"url":"interfaces/ContentContainer.html","title":"interface - ContentContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-container/content-container.model.ts\n        \n\n            \n                Description\n            \n            \n                A wrapper around a ViewContainerRef\nand a string name identifier.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        containerName\n                                \n                                \n                                        viewContainer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        containerName\n                                    \n                                \n                                \n                                    \n                                        containerName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewContainer\n                                    \n                                \n                                \n                                    \n                                        viewContainer:     ViewContainerRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ViewContainerRef\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\n\n/**\n * A wrapper around a ViewContainerRef\n * and a string name identifier.\n */\nexport interface ContentContainer {\n    readonly viewContainer: ViewContainerRef;\n    readonly containerName: string;\n  }\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentContainerDirective.html":{"url":"directives/ContentContainerDirective.html","title":"directive - ContentContainerDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContentContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive that can be attached to create a container \nwhere content with an attached ContentDirective\ncan be displayed.\nThe string set to the directive name is used to refer to\nthis container by the ContentConductor.\n\n            \n\n            \n                Implements\n            \n            \n                        ContentContainer\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-content-container]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-content-container\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vcRef: ViewContainerRef, ccService: ContentConductorService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vcRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ccService\n                                                  \n                                                        \n                                                                    ContentConductorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-content-container\n                    \n                    \n                        The string used to refer to this container.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewContainer\n                    \n                \n\n                \n                    \n                        getviewContainer()\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:29\n                                \n                            \n                    \n                        \n                                The ViewContainerRef of this directive.\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, Input } from '@angular/core';\nimport { ContentConductorService } from '../content-conductor.service';\nimport { ContentContainer } from './content-container.model';\n\n/**\n * A directive that can be attached to create a container \n * where content with an attached {@link ContentDirective}\n * can be displayed.\n * \n * The string set to the directive name is used to refer to\n * this container by the {@link ContentConductor}.\n * \n * @example\n * \n */\n@Directive({\n  selector: '[dvk-content-container]'\n})\nexport class ContentContainerDirective implements ContentContainer {\n\n  /**\n   * The string used to refer to this container.\n   */\n  @Input('dvk-content-container') containerName: string;\n\n  /**\n   * The ViewContainerRef of this directive.\n   */\n  get viewContainer() { return this.vcRef; }\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private ccService: ContentConductorService) {}\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentDirective.html":{"url":"directives/ContentDirective.html","title":"directive - ContentDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content/content.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive that must be used as a structural \ndirective so that the TemplateRef is injected.\n\n            \n\n            \n                Implements\n            \n            \n                        Content\n            \n\n            \n                Example\n            \n            \n                        \n                            Some Content To Display In A Container\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-content]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-content\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content/content.directive.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-content\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content/content.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        template\n                    \n                \n\n                \n                    \n                        gettemplate()\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/content-conductor/content/content.directive.ts:18\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, TemplateRef, Input, AfterViewInit } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { Content } from './content.model';\n\n/**\n * A directive that must be used as a structural \n * directive so that the TemplateRef is injected.\n * \n * @example\n * Some Content To Display In A Container\n */\n@Directive({\n  selector: '[dvk-content]'\n})\nexport class ContentDirective implements Content {\n  @Input('dvk-content') initialContainerName: string;\n\n  get template() { return this.templateRef; }\n\n  constructor(private templateRef: TemplateRef) {\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultContentConductorService.html":{"url":"classes/DefaultContentConductorService.html","title":"class - DefaultContentConductorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultContentConductorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of a ContentConductor.\nThis version can be overriden by providing a different class\nfor the ContentConductorConstructorToken token.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ContentConductor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachView\n                            \n                            \n                                attachViews\n                            \n                            \n                                destroy\n                            \n                            \n                                detachView\n                            \n                            \n                                detachViews\n                            \n                            \n                                init\n                            \n                            \n                                moveView\n                            \n                            \n                                moveViews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(containersQueryLists: QueryList | QueryList[], contentsQueryLists: QueryList | QueryList[])\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containersQueryLists\n                                                  \n                                                        \n                                                                    QueryList | QueryList[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentsQueryLists\n                                                  \n                                                        \n                                                                    QueryList | QueryList[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachView\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachView(container: string, view: ViewRef, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        view\n                                                        \n                                                                    ViewRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachViews(container: string, views: ViewRef[], toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        views\n                                                        \n                                                                    ViewRef[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachView\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachView(container: string, index?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachViews(container: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveView\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveView(previousContainer: string, nextContainer: string, fromIndex: number, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveViews(previousContainer: string, nextContainer: string, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryList, ViewRef } from '@angular/core';\nimport { Subscription, Observable, of, combineLatest } from 'rxjs';\nimport { ContentConductor } from '../content-conductor.model';\nimport { ContentContainer } from '../content-container/content-container.model';\nimport { ContainersMap } from '../containers-map/containers-map.model';\nimport { Content } from '../content/content.model';\nimport { merge, map } from 'rxjs/operators';\n\n/**\n * The default implementation of a {@link ContentConductor}.\n * This version can be overriden by providing a different class\n * for the {@link ContentConductorConstructorToken} token.\n */\nexport class DefaultContentConductorService implements ContentConductor {\n\n  constructor(\n    private containersQueryLists: QueryList | QueryList[],\n    private contentsQueryLists : QueryList | QueryList[]\n  ) {}\n    \n  /**\n   * @ignore\n   */\n  private containers: T[] = [];\n\n  /**\n   * @ignore\n   */\n  private contents: U[] = [];\n\n  /**\n   * @ignore\n   */\n  private containersMap: ContainersMap = {};\n\n  /**\n   * @ignore\n   */\n  private containersSub: Subscription;\n\n  /**\n   * @ignore\n   */\n  private contentsSub: Subscription;\n\n  init() {\n    const normalizedContainers = \n      this.normalizeQueryLists(this.containersQueryLists)\n\n    const normalizedContents = \n      this.normalizeQueryLists(this.contentsQueryLists);\n\n    this.listenToContainersChanges(normalizedContainers);\n    this.listenToContentsChanges(normalizedContents);\n  }\n\n  destroy() {\n    if(this.containersSub && !this.containersSub.closed) { \n      this.containersSub.unsubscribe(); \n    }\n\n    if(this.contentsSub && !this.contentsSub.closed) {\n      this.contentsSub.unsubscribe();\n    }\n\n    this.containersQueryLists = null;\n    this.contentsQueryLists = null;\n    this.containers = null;\n    this.contents = null;\n    this.containersMap = null;\n    this.containersSub = null;\n    this.contentsSub = null;\n  }\n\n  moveView( \n    previousContainer: string,\n    nextContainer:string, \n    fromIndex: number,\n    toIndex?: number) {\n      fromIndex = fromIndex || this.containersMap[previousContainer].length;\n      const insertIndex = toIndex === null || toIndex === undefined? \n        this.containersMap[nextContainer].length : \n        toIndex;\n\n      const view = this.containersMap[previousContainer].detach(fromIndex);\n      this.containersMap[nextContainer].insert(view, insertIndex);\n  }\n\n  detachView(\n    container:string,\n    index?: number) {\n      return this.containersMap[container].detach(index);\n  }\n\n  moveViews(previousContainer: string, nextContainer: string, toIndex?: number) {\n    const length = this.containersMap[previousContainer].length;\n    const viewsCache: ViewRef[] = [];\n\n    for(let i=0; i{\n      this.containersMap[nextContainer].insert(\n        view,\n        insertIndex);\n      insertIndex++\n    });\n  }\n\n  detachViews(container: string) {\n    const detachedViews = [];\n    const length = this.containersMap[container].length;\n\n    for(let x = 0; x {\n      this.containersMap[container].insert(view, insertIndex);\n      insertIndex++;\n    });\n  }\n\n  attachView(container: string, view: ViewRef, toIndex?: number) {\n    const insertIndex = toIndex === null || toIndex === undefined? \n      this.containersMap[container].length : \n      toIndex;\n\n    this.containersMap[container].insert(view, insertIndex);\n  }\n\n  /**\n   * @ignore\n   */\n  private mapContainers(\n    containers: T[]) {\n      return containers.reduce((map,container)=>{\n        map[container.containerName] = container.viewContainer;\n        return map;\n      },{});\n  }\n\n  /**\n   * @ignore\n   */\n  private normalizeQueryLists(ql: QueryList|QueryList[]) {\n    if(!Array.isArray(ql)) {\n      return [ql];\n    }\n    return ql;\n  }\n\n  /**\n   * @ignore\n   */\n  private flattenArrays(arrays: T[][]) {\n    return arrays.reduce((flattened,array)=>{\n      flattened.push(...array);\n      return flattened;\n    },[])\n  }\n\n  /**\n   * @ignore\n   */\n  private listenToContainersChanges(containers: QueryList[]) {\n    this.containersSub =\n      combineLatest(\n        containers.map>(c=>\n          of(c.toArray()).pipe(\n            merge(c.changes.pipe(\n              map(\n                (ql:QueryList)=>ql.toArray()\n              ))))))\n      .subscribe(containers=>{\n        this.containers = this.flattenArrays(containers);\n        this.containersMap = this.mapContainers(this.containers);\n      });\n  }\n\n  /**\n   * @ignore\n   */\n  private listenToContentsChanges(contents: QueryList[]) {\n    this.contentsSub = \n      combineLatest(\n        contents.map>(c=>\n        of(c.toArray()).pipe(\n          merge(c.changes.pipe(\n            map((ql:QueryList)=>ql.toArray())\n          )))))\n      .subscribe(contents=>{\n          const oldContents = this.contents;\n          this.contents = this.flattenArrays(contents);\n          this.contents.forEach(content=>{\n            if(!(oldContents.indexOf(content) >= 0)) {\n              if(content.initialContainerName) {\n                this.containersMap[content.initialContainerName]\n                  .createEmbeddedView(content.template);\n              }\n            }\n          })\n        });\n  }\n    \n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultDynamicAnimationsHandlerService.html":{"url":"classes/DefaultDynamicAnimationsHandlerService.html","title":"class - DefaultDynamicAnimationsHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultDynamicAnimationsHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of DynamicAnimationsHandler\nthat provides the DynamicAnimationsDirective with \nanimations capabllities.  \n\n            \n\n\n            \n                Implements\n            \n            \n                        DynamicAnimationsHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                nextState\n                            \n                            \n                                setAnimations\n                            \n                            \n                                setCSSMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: any, state: string, transitions: AnimationTransitionsMap, styles: AnimationStylesMap, cssMap: StateCSSMap, cssMapperService: StateCssMapperService, animationStatesBuilder: AnimationStatesService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        transitions\n                                                  \n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMap\n                                                  \n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMapperService\n                                                  \n                                                        \n                                                                    StateCssMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStatesBuilder\n                                                  \n                                                        \n                                                                    AnimationStatesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextState\n                            \n                            \n                        \n                    \n                \n                \n                    \nnextState(toState: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toState\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setAnimations\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetAnimations(transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCSSMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCSSMap(map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicAnimationsHandler } from '../dynamic-animations-handler/dynamic-animations-handler.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\nimport { StateCSSMapper } from '../state-css-mapper/state-css-mapper.model';\nimport { AnimationStateMachine } from '../animation-state-machine/animation-state-machine.model';\nimport { AnimationStatesService } from '../animation-states/animation-states.service';\nimport { StateCssMapperService } from '../state-css-mapper/state-css-mapper.service';\n\n/**\n * The default implementation of {@link DynamicAnimationsHandler}\n * that provides the {@link DynamicAnimationsDirective} with \n * animations capabllities.  \n */\nexport class DefaultDynamicAnimationsHandlerService implements DynamicAnimationsHandler {\n\n  /**\n   * @ignore\n   */\n  private animationsStateMachine: AnimationStateMachine;\n\n  /**\n   * @ignore\n   */\n  private cssMapper: StateCSSMapper;\n\n  constructor(\n    private element: any,\n    private state: string,\n    private transitions: AnimationTransitionsMap,\n    private styles: AnimationStylesMap, \n    private cssMap: StateCSSMap,\n    private cssMapperService: StateCssMapperService,\n    private animationStatesBuilder: AnimationStatesService\n  ) {\n    this.createCSSMapper(cssMap);\n    this.createStateMachine(this.transitions, this.styles);\n  }\n  \n  setCSSMap(map: StateCSSMap) {\n    this.createCSSMapper(map);\n  }\n\n  nextState(toState:string) {\n    if(this.state !== toState) {\n      this.state = toState;\n\n      if(this.animationsStateMachine) {\n        this.animationsStateMachine.next(\n          this.state, \n          this.cssMapper);\n      }\n    }\n  }\n\n  setAnimations(transitions: AnimationTransitionsMap, styles: AnimationStylesMap) {\n    this.createStateMachine(transitions, styles);\n  }\n\n  destroy() {\n    this.animationsStateMachine.destroy();\n    this.cssMapper.destroy();\n    this.state = null;\n    this.cssMap = null;\n    this.transitions = null;\n  }\n\n  /**\n   * @ignore\n   */\n  private createStateMachine(\n    transitions: AnimationTransitionsMap, \n    styles: AnimationStylesMap) {\n    if(this.animationsStateMachine) {\n      this.animationsStateMachine.destroy();\n    }\n\n    if(this.transitions !== transitions || !this.animationsStateMachine) {\n      this.transitions = transitions;\n\n      this.animationsStateMachine = \n        this.animationStatesBuilder\n          .createAnimationStateMachine(\n            this.element,\n            this.transitions,\n            styles);\n\n      this.animationsStateMachine.init(\n        this.state,\n        this.cssMapper);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  private createCSSMapper(map: StateCSSMap = {}) {\n    if(this.cssMap !== map || !this.cssMapper) {\n      this.cssMap = map;\n\n      if(this.cssMapper) {\n        this.cssMapper.removeAll();\n        this.cssMapper.destroy();\n      }\n\n      this.cssMapper = this.cssMapperService\n        .createStateCSSMapper(this.element,this.cssMap);\n\n      this.cssMapper.add(this.state);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultDynamicComponentSerializer.html":{"url":"classes/DefaultDynamicComponentSerializer.html","title":"class - DefaultDynamicComponentSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultDynamicComponentSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of DynamicComponentSerializer that\nprovides the serialization methods for the specified \nDynamicComponentSerializerMap. \n\n            \n\n\n            \n                Implements\n            \n            \n                        DynamicComponentSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializerMap: DynamicComponentSerializerMap)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializerMap\n                                                  \n                                                        \n                                                                    DynamicComponentSerializerMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(componentName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:14\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName(componentConstructor: ComponentConstructor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicComponentSerializerMap } from '../dynamic-component-serializer-map/dynamic-component-serializer-map.model';\nimport { DynamicComponentSerializer } from '../dynamic-component-serializer/dynamic-component-serializer.model';\nimport { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * The default implementation of {@link DynamicComponentSerializer} that\n * provides the serialization methods for the specified \n * {@link DynamicComponentSerializerMap}. \n */\nexport class DefaultDynamicComponentSerializer implements DynamicComponentSerializer {\n\n    constructor(private serializerMap: DynamicComponentSerializerMap) {}\n\n    getComponent(componentName: string) {\n        return this.serializerMap\n            .deserializeMap.get(componentName);\n    }\n\n    getName(componentConstructor: ComponentConstructor) {\n        return this.serializerMap\n            .serializeMap.get(componentConstructor);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicAnimationsDirective.html":{"url":"directives/DynamicAnimationsDirective.html","title":"directive - DynamicAnimationsDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicAnimationsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is the main interface to dynamic animations.\nIt should be attached to the element that is to be animated.\nDirections\nIn a component define a string member to represent the state\nof the Animations.  This is analogous to a trigger in normal\nAngular animations.\nThen define the animations as an array of state and transition\nfunction calls from the Angular animations module.\nOptionally specify a map of state names to css class names that\nwill be added and removed from the element as the animations \nstart and finish.\nThen pass those values into this directives state and animations\nInputs.\nIf a :leave animation, or *=>void, is speciied you must also both\nadd the @dvkLeave directive to the element and add dvkLeave to \nthe component as a static animation.  This step is only necessary\nfor a :leave animation. Otherwise it can be skipped.\nThe animations can then be played by changing the string bound to\nthe state Input.\nExample\n`ts\n\\@Component({\n              template: `\n                  \n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-da]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animations\n                            \n                            \n                                cssMap\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, daService: DynamicAnimationsService, tranService: NgTransitionService, statesService: NgStateService, dvkLeave: LeaveDirective)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:167\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        daService\n                                                  \n                                                        \n                                                                    DynamicAnimationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        tranService\n                                                  \n                                                        \n                                                                    NgTransitionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        statesService\n                                                  \n                                                        \n                                                                    NgStateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dvkLeave\n                                                  \n                                                        \n                                                                    LeaveDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        animations\n                    \n                    \n                        The description of the animations to play as an array \nof state and transition Angular animation functions.\n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:136\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cssMap\n                    \n                    \n                        The map of state name to css class names to apply\nas the state changes.\n\n                            \n                            Type:    StateCSSMap\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:167\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                    \n                        Changing the value of state will cause a transition \nand play an animation if one is defined for that state\nchange.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:114\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:194\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n\n                \n                    \n                        setstate(state: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:114\n                                \n                            \n                    \n                        \n                                Changing the value of state will cause a transition \nand play an animation if one is defined for that state\nchange.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            state\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        animations\n                    \n                \n\n\n                \n                    \n                        setanimations(animations: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:136\n                                \n                            \n                    \n                        \n                                The description of the animations to play as an array \nof state and transition Angular animation functions.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            animations\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, OnInit, OnDestroy, ElementRef, Optional } from '@angular/core';\nimport { AnimationTransitionMetadata, AnimationStateMetadata, AnimationMetadata } from '@angular/animations';\nimport { StateCSSMap } from './state-css-map/state-css-map.model';\nimport { DynamicAnimationsService } from './dynamic-animations.service';\nimport { NgTransitionService } from './ng-transition/ng-transition.service';\nimport { DynamicAnimationsHandler } from './dynamic-animations-handler/dynamic-animations-handler.model';\nimport { NgTransitionStates } from './ng-transition/ng-transition.states';\nimport { LeaveDirective } from './leave/leave.directive';\nimport { NgStateService } from './ng-state/ng-state.service';\n\n/**\n * This directive is the main interface to dynamic animations.\n * It should be attached to the element that is to be animated.\n * \n * ## Directions\n *\n * In a component define a string member to represent the state\n * of the Animations.  This is analogous to a trigger in normal\n * Angular animations.\n * \n * Then define the animations as an array of state and transition\n * function calls from the Angular animations module.\n * \n * Optionally specify a map of state names to css class names that\n * will be added and removed from the element as the animations \n * start and finish.\n * \n * Then pass those values into this directives state and animations\n * Inputs.\n *\n * If a :leave animation, or *=>void, is speciied you must also both\n * add the @dvkLeave directive to the element and add dvkLeave to \n * the component as a static animation.  This step is only necessary\n * for a :leave animation. Otherwise it can be skipped.\n * \n * The animations can then be played by changing the string bound to\n * the state Input.\n * \n * ## Example\n * \n * ```ts\n * \\@Component({\n *              template: `\n *                  \n *              `\n *              animations:[dvkLeave]\n * })\n * ```\n * class MyComponent {\n *              myState: string = 'closed';\n *              myAniamtions = [\n *                  state('open',style({\n *                      'transform': `scaleY(1.0)`,\n *                      'transform-origin': 'top'\n *                  })),\n *                  state('closed',style({\n *                      'transform': `scaleY(0.0)`,\n *                      'transform-origin': 'top'\n *                  })),\n *                  transition('openclosed',animate('200ms')),\n *                  transition(':enter',animate('200ms',\n *                      style({ 'background-color': 'green' })),\n *                  transition(':leave',animate('200ms',\n *                      style({ 'background-color': 'red' }))\n *              ]\n *              myCssMap = {\n *                  'open': 'is-open',\n *                  'closed': 'is-closed'\n *              }\n * \n *              toggleState() {\n *                  if(this.myState === 'closed') { \n *                      this.myState = 'open'; \n *                   }\n *                   else { \n *                       this.myState = 'closed'; \n *                   }\n *              }\n * }\n * ```\n * \n * ../../docs/examples/index.html#/DynamicAnimations\n */\n@Directive({\n  selector: '[dvk-da]'\n})\nexport class DynamicAnimationsDirective implements OnInit, OnDestroy {\n\n  /**\n   * @ignore\n   */\n  private stateMode: 'string' | 'number' = 'string';\n\n  /**\n   * @ignore\n   */\n  private animationsHandler: DynamicAnimationsHandler;\n\n  /**\n   * @ignore\n   */\n  private strState: string;\n\n  /**\n   * Changing the value of state will cause a transition \n   * and play an animation if one is defined for that state\n   * change.\n   */\n  @Input() set state(state:string) { // | number)\n    this.strState = state;\n\n    if(this.animationsHandler) {\n      this.animationsHandler.nextState(this.strState);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  private transitions: AnimationTransitionMetadata[];\n\n  /**\n   * @ignore\n   */\n  private states: AnimationStateMetadata[];\n\n  /**\n   * The description of the animations to play as an array \n   * of state and transition Angular animation functions.\n   */\n  @Input() set animations(animations: (AnimationTransitionMetadata | AnimationStateMetadata)[]) {\n    this.transitions = [];\n    this.states = [];\n\n    animations.forEach(animation=>{\n      if(this.isTransition(animation)) {\n        this.transitions.push(animation);\n      } else if (this.isState) {\n        this.states.push(animation);\n      }\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  private isTransition(metaData: AnimationMetadata): metaData is AnimationTransitionMetadata {\n    return !!(metaData as AnimationTransitionMetadata).animation;\n  }\n\n  /**\n   * @ignore\n   */\n  private isState(metaData: AnimationMetadata): metaData is AnimationStateMetadata {\n    return !!(metaData as AnimationStateMetadata).styles;\n  }\n\n  /**\n   * The map of state name to css class names to apply\n   * as the state changes.\n   */\n  @Input() cssMap: StateCSSMap;\n\n  constructor(\n    private element: ElementRef,\n    private daService: DynamicAnimationsService,\n    private tranService: NgTransitionService,\n    private statesService: NgStateService,\n    @Optional() \n    private dvkLeave: LeaveDirective) {\n      if (this.dvkLeave) {\n        this.dvkLeave.setLeaveTiming(\"500ms\");\n      }\n     }\n\n  ngOnInit() {\n\n    this.animationsHandler = this.daService.createAnimationsHandler(\n      this.element.nativeElement,\n      NgTransitionStates.Void,\n      this.tranService.buildAnimationTransitions(this.transitions),\n      this.statesService.parseStates(this.states),\n      this.cssMap);\n      \n    // enter\n    this.animationsHandler.nextState(this.strState);\n  }\n\n  ngOnDestroy() {\n\n    // leave\n    this.animationsHandler.nextState(NgTransitionStates.Void)\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicAnimationsHandler.html":{"url":"interfaces/DynamicAnimationsHandler.html","title":"interface - DynamicAnimationsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicAnimationsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.model.ts\n        \n\n            \n                Description\n            \n            \n                Describe the interface for providing a component \nor directive with run time specified animations \nbased on a series of string transitions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destroy\n                                \n                                \n                                        nextState\n                                \n                                \n                                        setAnimations\n                                \n                                \n                                        setCSSMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references for garbage collection.  Should \nusually be called in ngOnDestroy.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextState\n                                    \n                                \n                                \n                                    \n                                        nextState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transition to the next state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setAnimations\n                                    \n                                \n                                \n                                    \n                                        setAnimations:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set the animations and states to use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCSSMap\n                                    \n                                \n                                \n                                    \n                                        setCSSMap:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set the map of css classes to apply at specific states.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * Describe the interface for providing a component \n * or directive with run time specified animations \n * based on a series of string transitions.\n * \n */\nexport interface DynamicAnimationsHandler {\n\n    /**\n     * Set the map of css classes to apply at specific states.\n     */\n    setCSSMap: (map: StateCSSMap) =>void;\n\n    /**\n     * Transition to the next state.\n     */\n    nextState: (toState:string) => void;\n\n    /**\n     * Set the animations and states to use.\n     */\n    setAnimations: (transitions: AnimationTransitionsMap, styles: AnimationStylesMap) => void;\n\n    /**\n     * Release the references for garbage collection.  Should \n     * usually be called in ngOnDestroy.\n     */\n    destroy: () => void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicAnimationsHandlerConstructor.html":{"url":"interfaces/DynamicAnimationsHandlerConstructor.html","title":"interface - DynamicAnimationsHandlerConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicAnimationsHandlerConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.constructor.ts\n        \n\n            \n                Description\n            \n            \n                The shape of a constructor for an object that can act as the Animations Handler.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { DynamicAnimationsHandler } from './dynamic-animations-handler.model';\nimport { AnimationStatesService } from '../animation-states/animation-states.service';\nimport { StateCssMapperService } from '../state-css-mapper/state-css-mapper.service';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * The shape of a constructor for an object that can act as the Animations Handler.\n */\nexport interface DynamicAnimationsHandlerConstructor {\n    new( \n        element: any,\n        initialState: string,\n        transitions: AnimationTransitionsMap,\n        styles: AnimationStylesMap,\n        cssMap: StateCSSMap,\n        cssMapperService: StateCssMapperService,\n        animationStatesBuilder: AnimationStatesService):DynamicAnimationsHandler;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicAnimationsModule.html":{"url":"modules/DynamicAnimationsModule.html","title":"module - DynamicAnimationsModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicAnimationsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicAnimationsModule\n\n\n\ncluster_DynamicAnimationsModule_declarations\n\n\n\ncluster_DynamicAnimationsModule_exports\n\n\n\ncluster_DynamicAnimationsModule_providers\n\n\n\n\nDynamicAnimationsDirective\n\nDynamicAnimationsDirective\n\n\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsDirective->DynamicAnimationsModule\n\n\n\n\n\nLeaveDirective\n\nLeaveDirective\n\nDynamicAnimationsModule -->\n\nLeaveDirective->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective  -->\n\nDynamicAnimationsModule->DynamicAnimationsDirective \n\n\n\n\n\nLeaveDirective \n\nLeaveDirective \n\nLeaveDirective  -->\n\nDynamicAnimationsModule->LeaveDirective \n\n\n\n\n\nAnimationStatesService\n\nAnimationStatesService\n\nDynamicAnimationsModule -->\n\nAnimationStatesService->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsService\n\nDynamicAnimationsService\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsService->DynamicAnimationsModule\n\n\n\n\n\nNgStateService\n\nNgStateService\n\nDynamicAnimationsModule -->\n\nNgStateService->DynamicAnimationsModule\n\n\n\n\n\nNgTransitionService\n\nNgTransitionService\n\nDynamicAnimationsModule -->\n\nNgTransitionService->DynamicAnimationsModule\n\n\n\n\n\nStateCssMapperService\n\nStateCssMapperService\n\nDynamicAnimationsModule -->\n\nStateCssMapperService->DynamicAnimationsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Dynamic Animations Module provides support for allowing Angular\nAnimations to be passed in at runtime dynamically instead of \ndescribed statically in the Component's metadata.\nThis functionality is handled through the exported \nDynamicAnimationsDirective.\nThe forRoot method must be called to provide the DynamicAnimationsHandler\nand the AnimationStateMachine that are used by the directive.\nThe implementations are handled by default by the DefaultDynamicAnimationsHandlerService\nand the DefaultAnimationsStateMachine respectively but can be \noverriden with custom implementations if desired.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicAnimationsDirective\n                            \n                            \n                                LeaveDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AnimationStatesService\n                            \n                            \n                                     DynamicAnimationsService\n                            \n                            \n                                     NgStateService\n                            \n                            \n                                     NgTransitionService\n                            \n                            \n                                     StateCssMapperService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicAnimationsDirective\n                            \n                            \n                                    LeaveDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DynamicAnimationsService } from './dynamic-animations.service';\nimport { StateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { AnimationStatesService } from './animation-states/animation-states.service';\nimport { DynamicAnimationsHandlerConstructor } from './dynamic-animations-handler/dynamic-animations-handler.constructor';\nimport { DefaultDynamicAnimationsHandlerService } from './default-dynamic-animations-handler/default-dynamic-animations-handler.service';\nimport { DynamicAnimationsHandlerConstructorToken } from './dynamic-animations-handler/dynamic-animations-handler.token';\nimport { AnimationStateMachineConstructorToken } from './animation-state-machine/animation-state-machine.token';\nimport { DefaultAnimationsStateMachine } from './default-animations-state-machine/default-animations-state-machine.service';\nimport { AnimationStateMachineConstructor } from './animation-state-machine/animation-state-machine.constructor';\nimport { DynamicAnimationsDirective } from './dynamic-animations.directive';\nimport { LeaveDirective } from './leave/leave.directive';\nimport { NgTransitionService } from './ng-transition/ng-transition.service';\nimport { NgStateService } from './ng-state/ng-state.service';\n\n/**\n * The Dynamic Animations Module provides support for allowing Angular\n * Animations to be passed in at runtime dynamically instead of \n * described statically in the Component's metadata.\n * \n * This functionality is handled through the exported \n * {@link DynamicAnimationsDirective}.\n * \n * The forRoot method must be called to provide the {@link DynamicAnimationsHandler}\n * and the {@link AnimationStateMachine} that are used by the directive.\n * \n * The implementations are handled by default by the {@link DefaultDynamicAnimationsHandlerService}\n * and the {@link DefaultAnimationsStateMachine} respectively but can be \n * overriden with custom implementations if desired.\n */\n@NgModule({\n  providers: [\n    DynamicAnimationsService,\n    AnimationStatesService, \n    StateCssMapperService,\n    NgTransitionService,\n    NgStateService\n  ],\n  declarations: [DynamicAnimationsDirective, LeaveDirective],\n  exports: [DynamicAnimationsDirective, LeaveDirective]\n})\nexport class DynamicAnimationsModule {\n  static forRoot(\n    animationsHandlerConstructor: DynamicAnimationsHandlerConstructor = DefaultDynamicAnimationsHandlerService,\n    animationsStateMachineConstructor: AnimationStateMachineConstructor = DefaultAnimationsStateMachine \n  ): ModuleWithProviders {\n    return {\n      ngModule: DynamicAnimationsModule,\n      providers: [\n        { \n          provide: DynamicAnimationsHandlerConstructorToken, \n          useValue: animationsHandlerConstructor \n        },\n        {\n          provide: AnimationStateMachineConstructorToken,\n          useValue: animationsStateMachineConstructor\n        }\n      ]\n    };\n  }  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicAnimationsService.html":{"url":"injectables/DynamicAnimationsService.html","title":"injectable - DynamicAnimationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicAnimationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is used to create a DynamicAnimationsHandler \nwith the DynamicAnimationsService method.\nThe DynamicAnimationsHandler \ncan be used to handle animations based on state transitions\nfor the specified element.\nThe DynamicAnimationsHandler can be wired up to a \nparticular component or directive to automatically handle \nthe animations for the specified element.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimationsHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animationsHandlerConstructor: DynamicAnimationsHandlerConstructor, cssMapperService: StateCssMapperService, animationStatesBuilder: AnimationStatesService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animationsHandlerConstructor\n                                                  \n                                                        \n                                                                    DynamicAnimationsHandlerConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMapperService\n                                                  \n                                                        \n                                                                    StateCssMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStatesBuilder\n                                                  \n                                                        \n                                                                    AnimationStatesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createAnimationsHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateAnimationsHandler(element: any, initialState: string, transitions: AnimationTransitionsMap, styles: AnimationStylesMap, cssMap: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Create a DynamicAnimationsHandler for \nthe given element.\nSee DynamicAnimationsService for example\nusage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to attach the animations\nhandler to. \n\n                                                        \n                                                \n                                                \n                                                        initialState\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The initial state of the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationTransitionsMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationStylesMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        cssMap\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The StateCSSMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { StateCSSMap } from './state-css-map/state-css-map.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from './animation-transitions/animation-transitions.model';\nimport { Injectable, Inject } from '@angular/core';\nimport { DynamicAnimationsHandlerConstructor } from './dynamic-animations-handler/dynamic-animations-handler.constructor';\nimport { DynamicAnimationsHandlerConstructorToken } from './dynamic-animations-handler/dynamic-animations-handler.token';\nimport { StateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { AnimationStatesService } from './animation-states/animation-states.service';\n\n/**\n * This import is required for ts to resolve the return of \n * the createAnimationsHandler function.  Without it compilation\n * will fail.\n */\nimport { DynamicAnimationsHandler } from './dynamic-animations-handler/dynamic-animations-handler.model';\n\n/**\n * This service is used to create a {@link DynamicAnimationsHandler} \n * with the {@link DynamicAnimationsService#createAnimationsHandler} method.\n * \n * The {@link DynamicAnimationsHandler} \n * can be used to handle animations based on state transitions\n * for the specified element.\n * \n * The {@link DynamicAnimationsHandler} can be wired up to a \n * particular component or directive to automatically handle \n * the animations for the specified element.\n *\n */\n@Injectable()\nexport class DynamicAnimationsService {\n\n  constructor(\n    @Inject(DynamicAnimationsHandlerConstructorToken) \n    private animationsHandlerConstructor: DynamicAnimationsHandlerConstructor,\n    private cssMapperService: StateCssMapperService,\n    private animationStatesBuilder: AnimationStatesService,\n  ) { }\n\n  /**\n   * Create a {@link DynamicAnimationsHandler} for \n   * the given element.\n   * \n   * See {@link DynamicAnimationsService} for example\n   * usage.\n   * \n   * @param element The element to attach the animations\n   * handler to. \n   * \n   * @param initialState The initial state of the AnimationStateMachine\n   * @param transitions The AnimationTransitionsMap for the AnimationStateMachine\n   * @param styles The AnimationStylesMap for the AnimationStateMachine\n   * @param cssMap The StateCSSMap for the AnimationStateMachine\n   * \n   */\n  createAnimationsHandler(\n    element: any, \n    initialState: string, \n    transitions: AnimationTransitionsMap, \n    styles: AnimationStylesMap,\n    cssMap: StateCSSMap = {}) {\n\n      return new this.animationsHandlerConstructor(\n        element,\n        initialState,\n        transitions,\n        styles,\n        cssMap,\n        this.cssMapperService,\n        this.animationStatesBuilder);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentData.html":{"url":"interfaces/DynamicComponentData.html","title":"interface - DynamicComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-data/dynamic-component-data.model.ts\n        \n\n            \n                Description\n            \n            \n                Represent the data necessary for a dynamic \ncomponent that is suitable for serialization.\nThis part of the model is separate so that it\ncould be put inside a store or some other \nuse case where serialization matters.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        initialValues\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initialValues\n                                    \n                                \n                                \n                                    \n                                        initialValues:     InitialValues\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InitialValues\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InitialValues } from \"../initial-values/initial-values.model\";\n\n/**\n * Represent the data necessary for a dynamic \n * component that is suitable for serialization.\n * \n * This part of the model is separate so that it\n * could be put inside a store or some other \n * use case where serialization matters.\n */\nexport interface DynamicComponentData {\n    name: string;\n    initialValues?: InitialValues;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicComponentDirective.html":{"url":"directives/DynamicComponentDirective.html","title":"directive - DynamicComponentDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicComponentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts\n        \n\n            \n                Description\n            \n            \n                The Dynamic Component Directive is the interface to using\ndvk dynamic components.\nThe directive lifecycle will track any streams specified by\nthe model and handle change detection in the same way the \nasync pipe does.\nDirections\nProvide a DynamicComponentSerializerService \nfor the directive to use.\nconstructor(private dsService: DynamicComponentSerializerService) { \n     this.serializer = this.dsService.createSerializer({\n         'textComponent':TextComponent\n     });\n}And define a DynamicComponentModel for the DynamicComponentDirective\nto initialize with:\ntext$ = new Subject();\n\nonClick = (e: MouseEvent) => {\n     console.log('Dynamic component was clicked');\n}\n\nmodel: DynamicComponentModel = {\n     name: 'textComponent',\n     initialValues:{ \n         text: 'Initial Text',\n     },\n     outputCallbacks: {\n         onClicked: this.onClick\n     },\n     inputs$: {\n         text: this.text$.asObservable()\n     }\n};And in the template for the Component attach the dynamic \ncomponent directive to the desired element.\n  \n  Note\nThe DynamicComponentSerializer was intentionally made\nto be passed in rather than created internally so that the same\nserialzer could be reused for multiple instances of the \nDynamicComponentDirective.  This allows a developer to create \na single serializer at one point and feed it into all desired \ninstances of DynamicComponentDirectives.\n../../docs/examples/index.html#/DynamicComponents\n\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-dc]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                compRef\n                            \n                            \n                                    Private\n                                inputSubscriptions\n                            \n                            \n                                    Private\n                                outputSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                attachInputStreams\n                            \n                            \n                                    Protected\n                                attachOutputCallbacks\n                            \n                            \n                                    Protected\n                                closeAllSubscriptions\n                            \n                            \n                                    Protected\n                                createComponent\n                            \n                            \n                                    Protected\n                                createInjector\n                            \n                            \n                                    Protected\n                                destroyComp\n                            \n                            \n                                    Protected\n                                initializeComponent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                setInitialValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-dc\n                            \n                            \n                                serializer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vcRef: ViewContainerRef, resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:109\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vcRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-dc\n                    \n                    \n                        The model for this dynamic component to instantiate \nwith.\n\n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:107\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serializer\n                    \n                    \n                        The serialzer this instance of the directive should use\nto resolve Components.\n\n                            \n                            Type:    DynamicComponentSerializer\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:100\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            attachInputStreams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachInputStreams(streams: InputStreams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:186\n                            \n                        \n\n\n                \n                    \n                            Attach {@link Observable} input streams to the \nspecified property of the component.\nThe streams will attach a {@link distinctUntilChanged} operator\nto the {@link Observable} and mark the component for change detection\nwhen new values are passed through the stream. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        streams\n                                                        \n                                                                    InputStreams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of property names to {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            attachOutputCallbacks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachOutputCallbacks(callbacks: OutputCallbacks)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:209\n                            \n                        \n\n\n                \n                    \n                            Attach the {@link EventEmitter}s inside the component to\nthe specified callback.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callbacks\n                                                        \n                                                                    OutputCallbacks\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            closeAllSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeAllSubscriptions(subscriptions: Subscription[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:240\n                            \n                        \n\n\n                \n                    \n                            Close all the subscriptions that are still open.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        subscriptions\n                                                        \n                                                                    Subscription[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The array of subscriptions to \npotentially close.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createComponent(constructor: ComponentConstructor, injector: ReflectiveInjector)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Request a component from angular of the given type.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The component constructor \n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                        \n                                                                    ReflectiveInjector\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The injector to use when creating the component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createInjector(providers: Provider[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:142\n                            \n                        \n\n\n                \n                    \n                            Create an injector from the {@link BBDynamicComponentDirective2}s\n{@link ViewContainerRef}.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        providers\n                                                        \n                                                                    Provider[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                An array of providers for the injector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            destroyComp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyComp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:226\n                            \n                        \n\n\n                \n                    \n                            Clean up all subscriptions and destroy the dynamically\ninstantiated component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initializeComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initializeComponent(compModel: DynamicComponentModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        compModel\n                                                        \n                                                                    DynamicComponentModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:250\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setInitialValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setInitialValues(initValues: InitialValues)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:167\n                            \n                        \n\n\n                \n                    \n                            Set initial values into the component.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initValues\n                                                        \n                                                                    InitialValues\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of property names to values to set.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            compRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        compRef:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputSubscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            outputSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outputSubscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:94\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        componentModel\n                    \n                \n\n\n                \n                    \n                        setcomponentModel(compModel: )\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:107\n                                \n                            \n                    \n                        \n                                The model for this dynamic component to instantiate \nwith.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            compModel\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    Directive,  \n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ReflectiveInjector,\n    ViewContainerRef, \n    EventEmitter,\n    Provider,\n    OnDestroy} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { ComponentConstructor } from './component-constructor/component-constructor.model';\nimport { DynamicComponentModel } from './dynamic-component-model/dynamic-component-model.model';\nimport { DynamicComponentSerializer } from './dynamic-component-serializer/dynamic-component-serializer.model';\nimport { InitialValues } from './initial-values/initial-values.model';\nimport { InputStreams } from './input-streams/input-streams.model';\nimport { OutputCallbacks } from './output-callbacks/output-callbacks.model';\n\n/**\n * The Dynamic Component Directive is the interface to using\n * dvk dynamic components.\n * \n * The directive lifecycle will track any streams specified by\n * the model and handle change detection in the same way the \n * async pipe does.\n *  \n * ### **Directions**\n * \n * Provide a {@link DynamicComponentSerializerService} \n * for the directive to use.\n * \n * ```ts\n * constructor(private dsService: DynamicComponentSerializerService) { \n *     this.serializer = this.dsService.createSerializer({\n *         'textComponent':TextComponent\n *     });\n * }\n * ```\n * \n * And define a {@link DynamicComponentModel} for the DynamicComponentDirective\n * to initialize with:\n * \n * ```ts\n * text$ = new Subject();\n * \n * onClick = (e: MouseEvent) => {\n *     console.log('Dynamic component was clicked');\n * }\n * \n * model: DynamicComponentModel = {\n *     name: 'textComponent',\n *     initialValues:{ \n *         text: 'Initial Text',\n *     },\n *     outputCallbacks: {\n *         onClicked: this.onClick\n *     },\n *     inputs$: {\n *         text: this.text$.asObservable()\n *     }\n * };\n * ```\n * \n * And in the template for the Component attach the dynamic \n * component directive to the desired element.\n * \n * ```html\n *  \n *  \n * ``` \n * \n * ###### **Note**\n * \n * The {@link DynamicComponentSerializer} was intentionally made\n * to be passed in rather than created internally so that the same\n * serialzer could be reused for multiple instances of the \n * DynamicComponentDirective.  This allows a developer to create \n * a single serializer at one point and feed it into all desired \n * instances of DynamicComponentDirectives.\n * \n * ../../docs/examples/index.html#/DynamicComponents\n *\n */\n@Directive({\n  selector: '[dvk-dc]',\n  exportAs:'dynamicComp2',\n})\nexport class DynamicComponentDirective implements OnDestroy {\n    protected compRef: ComponentRef;\n    private inputSubscriptions: Subscription[] = [];\n    private outputSubscriptions: Subscription[] = [];\n\n    /**\n     * The serialzer this instance of the directive should use\n     * to resolve Components.\n     */\n    @Input() serializer: DynamicComponentSerializer;\n\n    /**\n     * The model for this dynamic component to instantiate \n     * with.\n     */\n    @Input('dvk-dc') \n    set componentModel(compModel: DynamicComponentModel) {\n      this.initializeComponent(compModel);\n    }\n\n    constructor(protected vcRef: ViewContainerRef,\n                protected resolver: ComponentFactoryResolver) {\n    }\n\n    protected initializeComponent(compModel: DynamicComponentModel) {\n        const componentConstructor = this.serializer.getComponent(compModel.name);\n\n        if (!componentConstructor) {\n            console.error(`${compModel.name} was not found for deserialization.`)\n          return;\n        }\n\n        this.destroyComp();\n\n        this.compRef = this.createComponent(\n            componentConstructor, \n            this.createInjector(compModel.providers));\n\n        this.setInitialValues(compModel.initialValues);\n        this.attachInputStreams(compModel.inputs$);\n        this.attachOutputCallbacks(compModel.outputCallbacks);\n\n        this.vcRef.insert(this.compRef.hostView);\n        this.compRef.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Create an injector from the {@link BBDynamicComponentDirective2}s\n     * {@link ViewContainerRef}.\n     * @param providers An array of providers for the injector.\n     */\n    protected createInjector(providers: Provider[]) {\n        providers = providers || [];\n        return ReflectiveInjector\n            .fromResolvedProviders(\n            ReflectiveInjector.resolve(providers),\n            this.vcRef.parentInjector);\n    }\n\n    /**\n     * Request a component from angular of the given type.  \n     * @param constructor The component constructor \n     * @param injector The injector to use when creating the component.\n     */\n    protected createComponent(\n        constructor: ComponentConstructor, \n        injector: ReflectiveInjector) {\n        return this.resolver\n            .resolveComponentFactory(constructor)\n            .create(injector);\n    }\n\n    /**\n     * Set initial values into the component.\n     * @param initValues The map of property names to values to set.\n     */\n    protected setInitialValues(initValues: InitialValues) {\n        if (initValues) {\n            Object.keys(initValues).map(\n                input => {\n                    this.compRef.instance[input] = initValues[input];\n                }\n            )\n        }\n    }\n\n    /**\n     * Attach {@link Observable} input streams to the \n     * specified property of the component.\n     * \n     * The streams will attach a {@link distinctUntilChanged} operator\n     * to the {@link Observable} and mark the component for change detection\n     * when new values are passed through the stream. \n     * @param streams The map of property names to {@link Observable}s to attach.\n     */\n    protected attachInputStreams(streams: InputStreams) {\n        if(streams) {\n            this.inputSubscriptions = \n                Object.keys(streams).map(input=>{\n                    return streams[input]\n                        .pipe(\n                            distinctUntilChanged()\n                        )\n                        .subscribe(value=>{\n                            this.compRef.instance[input] = value;\n                            this.compRef.changeDetectorRef.markForCheck();\n                        })\n                });\n        }\n    }\n\n\n    /**\n     * Attach the {@link EventEmitter}s inside the component to\n     * the specified callback.\n     * @param callbacks The map of {@link EventEmitter} property names to\n     * callbacks that will be executed when the {@link EventEmitter} fires.\n     */\n    protected attachOutputCallbacks(callbacks: OutputCallbacks) {\n        if(callbacks) {\n            this.outputSubscriptions = \n                Object.keys(callbacks)\n                    .map(cb=>{\n                        return (this.compRef.instance[cb] as EventEmitter)\n                            .subscribe(event=>{\n                                callbacks[cb](event);\n                            });\n                    });\n        }\n    }\n\n    /**\n     * Clean up all subscriptions and destroy the dynamically\n     * instantiated component.\n     */\n    protected destroyComp() {\n        this.closeAllSubscriptions(this.outputSubscriptions);\n        this.closeAllSubscriptions(this.inputSubscriptions);\n\n        if (this.compRef) {\n            this.compRef.destroy();\n        }\n    }\n\n    /**\n     * Close all the subscriptions that are still open.\n     * @param subscriptions The array of subscriptions to \n     * potentially close.\n     */\n    protected closeAllSubscriptions(subscriptions: Subscription[]) {\n        if(subscriptions){\n            subscriptions.forEach(sub=>{\n                if(!sub.closed) {\n                    sub.unsubscribe();\n                }\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyComp();\n    } \n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentModel.html":{"url":"interfaces/DynamicComponentModel.html","title":"interface - DynamicComponentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-model/dynamic-component-model.model.ts\n        \n\n            \n                Description\n            \n            \n                This model combines DynamicComponentData with \nan optional set of observable streams to tie to inputs\nand callbacks to tie to EventEmitters in the \ndynamically created component.\n\n            \n\n            \n                Extends\n            \n            \n                    DynamicComponentData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inputs$\n                                \n                                \n                                            Optional\n                                        outputCallbacks\n                                \n                                \n                                            Optional\n                                        providers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inputs$\n                                    \n                                \n                                \n                                    \n                                        inputs$:     InputStreams\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputStreams\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputCallbacks\n                                    \n                                \n                                \n                                    \n                                        outputCallbacks:     OutputCallbacks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputCallbacks\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                    \n                                \n                                \n                                    \n                                        providers:     Provider[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Provider[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Provider } from \"@angular/core\";\nimport { InputStreams } from \"../input-streams/input-streams.model\";\nimport { OutputCallbacks } from \"../output-callbacks/output-callbacks.model\";\nimport { DynamicComponentData } from '../dynamic-component-data/dynamic-component-data.model';\n\n/**\n * This model combines {@link DynamicComponentData} with \n * an optional set of observable streams to tie to inputs\n * and callbacks to tie to EventEmitters in the \n * dynamically created component.\n */\nexport interface DynamicComponentModel extends DynamicComponentData {\n    inputs$?: InputStreams;\n    outputCallbacks?: OutputCallbacks;\n    providers?: Provider[],\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializer.html":{"url":"interfaces/DynamicComponentSerializer.html","title":"interface - DynamicComponentSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts\n        \n\n            \n                Description\n            \n            \n                Handle serialization  between a string name and a component constructor.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getComponent\n                                \n                                \n                                    getName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(componentName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts:7\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentConstructor\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName(componentConstructor: ComponentConstructor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * Handle serialization  between a string name and a component constructor.\n */\nexport interface DynamicComponentSerializer {\n    getComponent(componentName: string): ComponentConstructor;\n    getName(componentConstructor: ComponentConstructor):string;\n}\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializerConstructor.html":{"url":"interfaces/DynamicComponentSerializerConstructor.html","title":"interface - DynamicComponentSerializerConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializerConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.constructor.ts\n        \n\n            \n                Description\n            \n            \n                Definition for a component serializer constructor.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { DynamicComponentSerializer } from \"./dynamic-component-serializer.model\";\nimport { DynamicComponentSerializerMap } from \"../dynamic-component-serializer-map/dynamic-component-serializer-map.model\";\n\n/**\n * Definition for a component serializer constructor.\n */\nexport interface DynamicComponentSerializerConstructor {\n    new(serializerMap: DynamicComponentSerializerMap):DynamicComponentSerializer;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializerMap.html":{"url":"interfaces/DynamicComponentSerializerMap.html","title":"interface - DynamicComponentSerializerMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializerMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer-map/dynamic-component-serializer-map.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an object that can handle\nserialization between a string name and a \nComponent class instance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deserializeMap\n                                \n                                \n                                        serializeMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deserializeMap\n                                    \n                                \n                                \n                                    \n                                        deserializeMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serializeMap\n                                    \n                                \n                                \n                                    \n                                        serializeMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * The shape of an object that can handle\n * serialization between a string name and a \n * Component class instance.\n */\nexport interface DynamicComponentSerializerMap {\n    serializeMap: Map;\n    deserializeMap: Map;\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicComponentSerializerService.html":{"url":"injectables/DynamicComponentSerializerService.html","title":"injectable - DynamicComponentSerializerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentSerializerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts\n        \n\n            \n                Description\n            \n            \n                Create a serializer for dynamic components to be resolved from \nstring names.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSerializer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializerConstructor: DynamicComponentSerializerConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializerConstructor\n                                                  \n                                                        \n                                                                    DynamicComponentSerializerConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateSerializer(map: DynamicComponentsMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    DynamicComponentsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { ComponentConstructor } from '../component-constructor/component-constructor.model';\nimport { DynamicComponentsMap } from '../dynamic-component-map/dynamic-component-map.model';\nimport { DynamicComponentSerializerMap } from '../dynamic-component-serializer-map/dynamic-component-serializer-map.model';\nimport { DynamicComponentSerializerConstructorToken } from './dynamic-component-serializer.token';\nimport { DynamicComponentSerializerConstructor } from './dynamic-component-serializer.constructor';\n\n/*\n * This import is necessary for proper compilation even though\n * the type isn't used in this file.\n */\n\nimport { DynamicComponentSerializer } from './dynamic-component-serializer.model';\n\n/**\n * Create a serializer for dynamic components to be resolved from \n * string names.\n */\n@Injectable()\nexport class DynamicComponentSerializerService {\n\n  constructor(\n    @Inject(DynamicComponentSerializerConstructorToken)\n    private serializerConstructor: DynamicComponentSerializerConstructor\n  ) { }\n\n  createSerializer(map: DynamicComponentsMap) {\n    const serializerMap: DynamicComponentSerializerMap = {\n      serializeMap: new Map(),\n      deserializeMap: new Map(),\n    };\n\n    Object.keys(map).forEach(name=>{\n      serializerMap.serializeMap.set(map[name], name);\n      serializerMap.deserializeMap.set(name, map[name]);\n    });\n\n    return new this.serializerConstructor(serializerMap);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentsMap.html":{"url":"interfaces/DynamicComponentsMap.html","title":"interface - DynamicComponentsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of string names to component constructors.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [serializedName: string]:    ComponentConstructor\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ComponentConstructor } from \"../component-constructor/component-constructor.model\";\n\n/**\n * A map of string names to component constructors.\n */\nexport interface DynamicComponentsMap {\n    [serializedName:string]: ComponentConstructor;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicComponentsModule.html":{"url":"modules/DynamicComponentsModule.html","title":"module - DynamicComponentsModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicComponentsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicComponentsModule\n\n\n\ncluster_DynamicComponentsModule_declarations\n\n\n\ncluster_DynamicComponentsModule_exports\n\n\n\ncluster_DynamicComponentsModule_providers\n\n\n\n\nDynamicComponentDirective\n\nDynamicComponentDirective\n\n\n\nDynamicComponentsModule\n\nDynamicComponentsModule\n\nDynamicComponentsModule -->\n\nDynamicComponentDirective->DynamicComponentsModule\n\n\n\n\n\nDynamicComponentDirective \n\nDynamicComponentDirective \n\nDynamicComponentDirective  -->\n\nDynamicComponentsModule->DynamicComponentDirective \n\n\n\n\n\nDynamicComponentSerializerService\n\nDynamicComponentSerializerService\n\nDynamicComponentsModule -->\n\nDynamicComponentSerializerService->DynamicComponentsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-components.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Dynamic Components Module exports the DynamicComponentDirective\nthat can be used to create dynamic components while alllowing them to\nbe wired up with input and output streams similar to components \ninstantiated normally.\nThe forRoot method must be called in order to provide the directive \nwith an implementation of the DynamicComponentSerializer which\nhandles the mapping of string names to actual Component class instances.\nThe default implementation DefaultDynamicComponentSerializer \nmay be overriden with a custom implementation if desired.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicComponentDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicComponentSerializerService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicComponentDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponentDirective } from './dynamic-component.directive';\nimport { DynamicComponentSerializerService } from './dynamic-component-serializer/dynamic-component-serializer.service';\nimport { DynamicComponentSerializerConstructorToken } from './dynamic-component-serializer/dynamic-component-serializer.token';\nimport { DefaultDynamicComponentSerializer } from './default-dynamic-component-serializer/default-dynamic-component-serializer';\nimport { DynamicComponentSerializerConstructor } from './dynamic-component-serializer/dynamic-component-serializer.constructor';\n\n/**\n * The Dynamic Components Module exports the {@link DynamicComponentDirective}\n * that can be used to create dynamic components while alllowing them to\n * be wired up with input and output streams similar to components \n * instantiated normally.\n * \n * The forRoot method must be called in order to provide the directive \n * with an implementation of the {@link DynamicComponentSerializer} which\n * handles the mapping of string names to actual Component class instances.\n * \n * The default implementation {@link DefaultDynamicComponentSerializer} \n * may be overriden with a custom implementation if desired.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DynamicComponentDirective \n  ],\n  exports: [\n    DynamicComponentDirective \n  ],\n  providers: [\n    DynamicComponentSerializerService\n  ]\n})\nexport class DynamicComponentsModule {\n  static forRoot(\n    serializerConstrutor: DynamicComponentSerializerConstructor = DefaultDynamicComponentSerializer\n  ): ModuleWithProviders {\n    return {\n      ngModule: DynamicComponentsModule,\n      providers: [\n        { \n          provide: DynamicComponentSerializerConstructorToken,\n          useValue: serializerConstrutor\n        }\n      ]\n    };\n  }  \n }\n\n \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LeaveDirective.html":{"url":"directives/LeaveDirective.html","title":"directive - LeaveDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  LeaveDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is a stub to handle :leave animations specified\ndynamically.  Angular will remove an element without waiting for \na dynamic animation to run but will wait for a static one.  So we\ndefine a stub :leave animation that does nothing but plays for the\namount of time needed for the specified dynamic :leave.\nCurrently this is under development and is hard coded to wait \nfor 500ms no matter how long the dynamic animation takes. \nEventually it will configure the wait time based on the actual\ndynamic animation's timing.\nSee DynamicAnimationsDirective for usage.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvkLeave]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setLeaveTiming\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @dvkLeave\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        @dvkLeave:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLeaveTiming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLeaveTiming(timing: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timing\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { trigger, transition, animate, style } from '@angular/animations';\nimport { Directive, HostBinding } from '@angular/core';\n\n/**\n * This directive is a stub to handle :leave animations specified\n * dynamically.  Angular will remove an element without waiting for \n * a dynamic animation to run but will wait for a static one.  So we\n * define a stub :leave animation that does nothing but plays for the\n * amount of time needed for the specified dynamic :leave.\n * \n * Currently this is under development and is hard coded to wait \n * for 500ms no matter how long the dynamic animation takes. \n * Eventually it will configure the wait time based on the actual\n * dynamic animation's timing.\n * \n * See {@link DynamicAnimationsDirective} for usage.\n */\n@Directive({\n  selector: '[dvkLeave]'\n})\nexport class LeaveDirective {\n  @HostBinding(\"@dvkLeave\") public timingParams: any = null;\n  \n  public setLeaveTiming(timing: string): void {\n    this.timingParams = dvkLeaveTiming(timing);\n  }\n}\n\n/**\n * Stub animation for the :leave transition\n */\nexport const dvkLeave =  [\n  trigger(\"dvkLeave\", [\n    transition(\":leave\", \n      animate(\"{{ timing }}\"), \n        { params: { timing: \"0ms\" }})\n  ])\n]\n\n/**\n * Stub function for setting the timing of a \n * :leave transition\n * @param timing The timing the animation should\n * last.\n */\nexport function dvkLeaveTiming(timing: any) {\n  return { value: null, params: { timing } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgStateService.html":{"url":"injectables/NgStateService.html","title":"injectable - NgStateService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts\n        \n\n            \n                Description\n            \n            \n                Converts an array of AnimationStateMetadata objects into \nan AnimationStylesMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseStates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseStates\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseStates(states: AnimationStateMetadata[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Convert metadata to AnimationStylesMap\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                        \n                                                                    AnimationStateMetadata[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The metadata to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationStylesMap\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimationStateMetadata } from '@angular/animations';\nimport { AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\n\n/**\n * Converts an array of AnimationStateMetadata objects into \n * an {@link AnimationStylesMap}.\n */\n@Injectable()\nexport class NgStateService {\n  constructor() { }\n\n  /**\n   * Convert metadata to {@link AnimationStylesMap}\n   * @param states The metadata to convert.\n   */\n  parseStates(states: AnimationStateMetadata[]): AnimationStylesMap {\n    return states.reduce((map,state)=>{\n      map[state.name] = state.styles;\n      return map;\n    },{});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgTransitionService.html":{"url":"injectables/NgTransitionService.html","title":"injectable - NgTransitionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgTransitionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the ability to convert an array of AnimationTransitionMetadata\ninto an AnimationTransitionsMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildAnimationTransitions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildAnimationTransitions\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildAnimationTransitions(transitions: AnimationTransitionMetadata[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Build an AnimationTransitionsMap from an array of \nAnimationTransitionMetadata objects.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionMetadata[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The AnimationTransitionMetadata[] to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimationTransitionMetadata } from '@angular/animations';\nimport { AnimationTransitionsMap } from '../animation-transitions/animation-transitions.model';\nimport { NgTransitionSymbols } from './ng-transition.symbols';\nimport { NgTransitionStates } from './ng-transition.states';\n\n/**\n * Provides the ability to convert an array of AnimationTransitionMetadata\n * into an {@link AnimationTransitionsMap}.\n */\n@Injectable()\nexport class NgTransitionService {\n  \n  constructor() { }\n\n  /**\n   * Build an {@link AnimationTransitionsMap} from an array of \n   * AnimationTransitionMetadata objects.\n   * \n   * @param transitions The AnimationTransitionMetadata[] to convert.\n   */\n  buildAnimationTransitions(transitions: AnimationTransitionMetadata[]) {\n    return transitions.reduce((transMap: AnimationTransitionsMap, transition)=>{\n      let newTransitions = this.parseTransitionExpression(transition);\n      Object.keys(newTransitions).forEach(fromState=>{\n        Object.keys(newTransitions[fromState]).forEach(toState=>{\n          transMap[fromState] = transMap[fromState] || {};\n          transMap[fromState][toState] = newTransitions[fromState][toState];\n        })\n      });\n      return transMap;\n    },{});\n  }\n\n  /**\n   * @ignore\n   * Parse an individual AnimationTransitionMetadata for the transition\n   * expression and convert that to a valid entry in an \n   * {@link AnimationTransitionsMap}.\n   * @param transition The AnimationTransitionMetadata to convert.\n   */\n  private parseTransitionExpression(transition: AnimationTransitionMetadata) {\n    const expressions = transition.expr;\n    let transitions: AnimationTransitionsMap = {};\n\n    if(this.isString(expressions)) {\n      expressions.split(',').forEach(expression=>{\n        if(expression.includes(NgTransitionSymbols.Either)) {\n          const states = expression.split(NgTransitionSymbols.Either);\n          const state1 = states[0].trim();\n          const state2 = states[1].trim();\n\n          transitions = {\n            [state1]: {\n              ...transitions[state1],\n              [state2]:transition.animation\n            },\n            [state2]: {\n              ...transitions[state2],\n              [state1]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.To)) {\n          const states = expression.split(NgTransitionSymbols.To);\n          const fromState = states[0].trim();\n          const toState = states[1].trim();\n\n          transitions = {\n            [fromState]: {\n              ...transitions[fromState],\n              [toState]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Enter)) {\n          transitions = {\n            [NgTransitionStates.Void]: {\n              ...transitions[NgTransitionStates.Void],\n              [NgTransitionStates.WildCard]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Leave)) {\n          transitions = {\n            [NgTransitionStates.WildCard]: {\n              ...transitions[NgTransitionStates.WildCard],\n              [NgTransitionStates.Void]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Inc)) {\n          console.error(`${expression} is not yet supported`);\n        }\n        else if(expression.includes(NgTransitionSymbols.Dec)) {\n          console.error(`${expression} is not yet supported`);\n        }\n      })\n    }\n    return transitions;\n  }\n  \n  /**\n   * @ignore\n   */\n  private isString(expression: any): expression is string {\n    return expression.length !== null && expression.length !== undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateCSSMap.html":{"url":"interfaces/StateCSSMap.html","title":"interface - StateCSSMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateCSSMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts\n        \n\n            \n                Description\n            \n            \n                Map a state to a css class that \nshould be applied to the element\nbeing animated.\nThe old class will be removed before\nany transition animation is played.\nThe new class will be applied after\nany transition animations complete.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [state: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts:18\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface StateCSSMap {\n    [state:string]: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateCSSMapper.html":{"url":"interfaces/StateCSSMapper.html","title":"interface - StateCSSMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateCSSMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an object that can map string state names \nto CSS classes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        add\n                                \n                                \n                                        destroy\n                                \n                                \n                                        remove\n                                \n                                \n                                        removeAll\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        add\n                                    \n                                \n                                \n                                    \n                                        add:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Add the css class defined by the StateCSSMap \nfor the given state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references used by the closure.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Remove the css class defined by the StateCSSMap \nfor the given state. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeAll\n                                    \n                                \n                                \n                                    \n                                        removeAll:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Remove all css classes defined by the StateCSSMap\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StateCSSMapper {\n\n  /**\n   * Remove the css class defined by the {@link StateCSSMap} \n   * for the given state. \n   */\n  remove: (state:string)=>void;\n\n  /**\n   * Remove all css classes defined by the {@link StateCSSMap}\n   */\n  removeAll: ()=>void;\n\n  /**\n   * Add the css class defined by the {@link StateCSSMap} \n   * for the given state.\n   */\n  add: (state:string)=> void;\n\n  /**\n   * Release the references used by the closure.\n   */\n  destroy: ()=> void;\n}\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateCssMapperService.html":{"url":"injectables/StateCssMapperService.html","title":"injectable - StateCssMapperService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StateCssMapperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts\n        \n\n            \n                Description\n            \n            \n                This service creates a closure that handles \nadding and removing css classes form a given element\nbased on the StateCSSMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStateCSSMapper\n                            \n                            \n                                getCSSClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                    RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStateCSSMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStateCSSMapper(element: any, map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Create the StateCSSMapper to apply to the given element.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The element to apply the css classes to.\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The StateCSSMap that defines the css classes and states.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCSSClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCSSClass(state: string, map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Get the css class for the given state.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The state.\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The StateCSSMap to look the state up in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, RendererFactory2 } from '@angular/core';\nimport { StateCSSMapper } from './state-css-mapper.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * This service creates a closure that handles \n * adding and removing css classes form a given element\n * based on the {@link StateCSSMap}.\n */\n@Injectable()\nexport class StateCssMapperService {\n\n  constructor(private rendererFactory: RendererFactory2) {\n  }\n\n  /**\n   * Get the css class for the given state.\n   * \n   * @param state The state.\n   * @param map The StateCSSMap to look the state up in.\n   */\n  getCSSClass(state:string, map: StateCSSMap) {\n    return map && map[state];\n  }\n\n  /**\n   * Create the {@link StateCSSMapper} to apply to the given element.\n   * \n   * @param element The element to apply the css classes to.\n   * @param map The StateCSSMap that defines the css classes and states.\n   */\n  createStateCSSMapper(element: any, map: StateCSSMap) {\n    let renderer = this.rendererFactory.createRenderer(element,null);\n\n    return {\n      remove: (state:string)=> {\n        renderer.removeClass(element,this.getCSSClass(state,map));\n      },\n      add: (state:string)=> {\n        renderer.addClass(element,this.getCSSClass(state,map));\n      },\n      removeAll: ()=> {\n        Object.keys(map).forEach(entry=>renderer.removeClass(element, map[entry]));\n      },\n      destroy: ()=> {\n        renderer.destroy();\n        renderer = null;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts\n            \n            \n                interface\n            \n            \n                ContainersMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.model.ts\n            \n            \n                interface\n            \n            \n                ContentConductorConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.token.ts\n            \n            \n                variable\n            \n            \n                ContentConductorConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor.model.ts\n            \n            \n                interface\n            \n            \n                ContentConductor\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor.service.ts\n            \n            \n                injectable\n            \n            \n                ContentConductorService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts\n            \n            \n                directive\n            \n            \n                ContentContainerDirective\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-container/content-container.model.ts\n            \n            \n                interface\n            \n            \n                ContentContainer\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content/content.directive.ts\n            \n            \n                directive\n            \n            \n                ContentDirective\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content/content.model.ts\n            \n            \n                interface\n            \n            \n                Content\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts\n            \n            \n                class\n            \n            \n                DefaultContentConductorService\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.constructor.ts\n            \n            \n                interface\n            \n            \n                AnimationStateMachineConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.model.ts\n            \n            \n                interface\n            \n            \n                AnimationStateMachine\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.token.ts\n            \n            \n                variable\n            \n            \n                AnimationStateMachineConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts\n            \n            \n                injectable\n            \n            \n                AnimationStatesService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n            \n            \n                interface\n            \n            \n                AnimationStylesMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n            \n            \n                interface\n            \n            \n                AnimationTransitionsMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/default-animations-state-machine/default-animations-state-machine.service.ts\n            \n            \n                class\n            \n            \n                DefaultAnimationsStateMachine\n            \n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts\n            \n            \n                class\n            \n            \n                DefaultDynamicAnimationsHandlerService\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.constructor.ts\n            \n            \n                interface\n            \n            \n                DynamicAnimationsHandlerConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.model.ts\n            \n            \n                interface\n            \n            \n                DynamicAnimationsHandler\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.token.ts\n            \n            \n                variable\n            \n            \n                DynamicAnimationsHandlerConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts\n            \n            \n                directive\n            \n            \n                DynamicAnimationsDirective\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicAnimationsService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave-pseudo-animation/leave-pseudo-animation.ts\n            \n            \n                variable\n            \n            \n                dvkLeave\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                directive\n            \n            \n                LeaveDirective\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                function\n            \n            \n                dvkLeaveTiming\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                variable\n            \n            \n                dvkLeave\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts\n            \n            \n                injectable\n            \n            \n                NgStateService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts\n            \n            \n                injectable\n            \n            \n                NgTransitionService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts\n            \n            \n                interface\n            \n            \n                StateCSSMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.model.ts\n            \n            \n                interface\n            \n            \n                StateCSSMapper\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts\n            \n            \n                injectable\n            \n            \n                StateCssMapperService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/component-constructor/component-constructor.model.ts\n            \n            \n                interface\n            \n            \n                ComponentConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts\n            \n            \n                class\n            \n            \n                DefaultDynamicComponentSerializer\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-data/dynamic-component-data.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentData\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentsMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-model/dynamic-component-model.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentModel\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer-map/dynamic-component-serializer-map.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializerMap\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.constructor.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializerConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializer\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicComponentSerializerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.token.ts\n            \n            \n                variable\n            \n            \n                DynamicComponentSerializerConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts\n            \n            \n                directive\n            \n            \n                DynamicComponentDirective\n            \n            \n                62 %\n                (10/16)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.1\n        \n            @angular/common : ^6.1.1\n        \n            @angular/core : ^6.1.1\n        \n            @angular/compiler : ^6.1.1\n        \n            @angular/forms : ^6.1.1\n        \n            @angular/http : ^6.1.1\n        \n            @angular/platform-browser : ^6.1.1\n        \n            @angular/platform-browser-dynamic : ^6.1.1\n        \n            @angular/router : ^6.1.1\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgTransitionStates   (projects/.../ng-transition.states.ts)\n                        \n                        \n                            NgTransitionSymbols   (projects/.../ng-transition.symbols.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.states.ts\n    \n        \n            \n                \n                    \n                        \n                        NgTransitionStates\n                    \n                \n                    \n                        \n                            States predefined by the Angular animations.\n\n                        \n                    \n                        \n                            \n                                 WildCard\n                            \n                        \n                        \n                            \n                                Value: *\n                            \n                        \n                        \n                            \n                                 Void\n                            \n                        \n                        \n                            \n                                Value: void\n                            \n                        \n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.symbols.ts\n    \n        \n            \n                \n                    \n                        \n                        NgTransitionSymbols\n                    \n                \n                    \n                        \n                            Symbols used by the angular animations transition\nexpression definitions.\n\n                        \n                    \n                        \n                            \n                                 To\n                            \n                        \n                        \n                            \n                                Value: =>\n                            \n                        \n                        \n                            \n                                 Either\n                            \n                        \n                        \n                            \n                                Value: \n                            \n                        \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                Value: :enter\n                            \n                        \n                        \n                            \n                                 Leave\n                            \n                        \n                        \n                            \n                                Value: :leave\n                            \n                        \n                        \n                            \n                                 Inc\n                            \n                        \n                        \n                            \n                                Value: :increment\n                            \n                        \n                        \n                            \n                                 Dec\n                            \n                        \n                        \n                            \n                                Value: :decrement\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dvkLeaveTiming   (projects/.../leave.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeaveTiming\n                            \n                            \n                        \n                    \n                \n                \n                    \ndvkLeaveTiming(timing: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Stub function for setting the timing of a \n:leave transition\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timing\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The timing the animation should\nlast.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@UAT/DynamicViewKit\nThe Dynamic View Kit is a library for building components\nand directives with dynamic capabilities.\nThe goal is to provide a set of tools that allow component and\ndirective authors to create feature rich components whose \nfunctionality can be modified by end users.\nDocumentation\nThe documentation is available here.\nFeatures\nCurrently the dvk offers 3 features for building components and \ndirectives.\n\nContent Conductor\nDynamic Animations\nDynamic Components\n\nInstallation\nThe dvk can be installed from npm.\nnpm i @uat/dvkImportant\nThe dvk requires typescript 2.8 or higher.\nBuilding\nThe dvk library can be compiled with the command:\nng build dvkemo Application\nThe development environment and demo application can then be \nstarted with the command:\nng serveAngular CLI\nThis project was generated with Angular CLI version 6.1.2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 tme321\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ContentConductorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicAnimationsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicComponentsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentConductorModule\n\n\n\ncluster_ContentConductorModule_declarations\n\n\n\ncluster_ContentConductorModule_exports\n\n\n\ncluster_ContentConductorModule_providers\n\n\n\ncluster_DynamicAnimationsModule\n\n\n\ncluster_DynamicAnimationsModule_declarations\n\n\n\ncluster_DynamicAnimationsModule_exports\n\n\n\ncluster_DynamicAnimationsModule_providers\n\n\n\ncluster_DynamicComponentsModule\n\n\n\ncluster_DynamicComponentsModule_declarations\n\n\n\ncluster_DynamicComponentsModule_exports\n\n\n\ncluster_DynamicComponentsModule_providers\n\n\n\n\nContentContainerDirective\n\nContentContainerDirective\n\n\n\nContentConductorModule\n\nContentConductorModule\n\nContentConductorModule -->\n\nContentContainerDirective->ContentConductorModule\n\n\n\n\n\nContentDirective\n\nContentDirective\n\nContentConductorModule -->\n\nContentDirective->ContentConductorModule\n\n\n\n\n\nContentContainerDirective \n\nContentContainerDirective \n\nContentContainerDirective  -->\n\nContentConductorModule->ContentContainerDirective \n\n\n\n\n\nContentDirective \n\nContentDirective \n\nContentDirective  -->\n\nContentConductorModule->ContentDirective \n\n\n\n\n\nContentConductorService\n\nContentConductorService\n\nContentConductorModule -->\n\nContentConductorService->ContentConductorModule\n\n\n\n\n\nDynamicAnimationsDirective\n\nDynamicAnimationsDirective\n\n\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsDirective->DynamicAnimationsModule\n\n\n\n\n\nLeaveDirective\n\nLeaveDirective\n\nDynamicAnimationsModule -->\n\nLeaveDirective->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective  -->\n\nDynamicAnimationsModule->DynamicAnimationsDirective \n\n\n\n\n\nLeaveDirective \n\nLeaveDirective \n\nLeaveDirective  -->\n\nDynamicAnimationsModule->LeaveDirective \n\n\n\n\n\nAnimationStatesService\n\nAnimationStatesService\n\nDynamicAnimationsModule -->\n\nAnimationStatesService->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsService\n\nDynamicAnimationsService\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsService->DynamicAnimationsModule\n\n\n\n\n\nNgStateService\n\nNgStateService\n\nDynamicAnimationsModule -->\n\nNgStateService->DynamicAnimationsModule\n\n\n\n\n\nNgTransitionService\n\nNgTransitionService\n\nDynamicAnimationsModule -->\n\nNgTransitionService->DynamicAnimationsModule\n\n\n\n\n\nStateCssMapperService\n\nStateCssMapperService\n\nDynamicAnimationsModule -->\n\nStateCssMapperService->DynamicAnimationsModule\n\n\n\n\n\nDynamicComponentDirective\n\nDynamicComponentDirective\n\n\n\nDynamicComponentsModule\n\nDynamicComponentsModule\n\nDynamicComponentsModule -->\n\nDynamicComponentDirective->DynamicComponentsModule\n\n\n\n\n\nDynamicComponentDirective \n\nDynamicComponentDirective \n\nDynamicComponentDirective  -->\n\nDynamicComponentsModule->DynamicComponentDirective \n\n\n\n\n\nDynamicComponentSerializerService\n\nDynamicComponentSerializerService\n\nDynamicComponentsModule -->\n\nDynamicComponentSerializerService->DynamicComponentsModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            3 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        20 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InitialValues   (projects/.../initial-values.model.ts)\n                        \n                        \n                            InputStreams   (projects/.../input-streams.model.ts)\n                        \n                        \n                            NotTypedKeys   (projects/.../not-typed-keys.model.ts)\n                        \n                        \n                            OutputCallbacks   (projects/.../output-callbacks.model.ts)\n                        \n                        \n                            TypedKeys   (projects/.../typed-keys.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-components/initial-values/initial-values.model.ts\n    \n        \n            \n                \n                    \n                        \n                        InitialValues\n                    \n                \n                    \n                        \n                            A map of keys to values where \nthe keys are properties of \ntype T and the values are \nthe same as the property type.\n\n                        \n                    \n                \n                    \n                        InitialValues:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/dynamic-components/input-streams/input-streams.model.ts\n    \n        \n            \n                \n                    \n                        \n                        InputStreams\n                    \n                \n                    \n                        \n                            A map of Observables whose keys are \nany properties of type T that are not \n{@link EventEmitter}s.\n\n                        \n                    \n                \n                    \n                        InputStreams:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/common/not-typed-keys.model.ts\n    \n        \n            \n                \n                    \n                        \n                        NotTypedKeys\n                    \n                \n                    \n                        \n                            Constrain a set of keys from type T \nthat are not of type C.\n\n                        \n                    \n                \n                    \n                        NotTypedKeys:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/dynamic-components/output-callbacks/output-callbacks.model.ts\n    \n        \n            \n                \n                    \n                        \n                        OutputCallbacks\n                    \n                \n                    \n                        \n                            A map of call back functions whose keys are \nproperties of type T that are {@link EventEmitter}s.\n\n                        \n                    \n                \n                    \n                        OutputCallbacks:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/common/typed-keys.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TypedKeys\n                    \n                \n                    \n                        \n                            Constrain a set of keys from type T\nthat are of type C.\n\n                        \n                    \n                \n                    \n                        TypedKeys:     \n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimationStateMachineConstructorToken   (projects/.../animation-state-machine.token.ts)\n                        \n                        \n                            ContentConductorConstructorToken   (projects/.../content-conductor-constructor.token.ts)\n                        \n                        \n                            dvkLeave   (projects/.../leave.directive.ts)\n                        \n                        \n                            dvkLeave   (projects/.../leave-pseudo-animation.ts)\n                        \n                        \n                            DynamicAnimationsHandlerConstructorToken   (projects/.../dynamic-animations-handler.token.ts)\n                        \n                        \n                            DynamicComponentSerializerConstructorToken   (projects/.../dynamic-component-serializer.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AnimationStateMachineConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AnimationStateMachineConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AnimationStateMachineConstructorToken')\n                        \n                    \n\n                \n                    \n                        Token for the class to be constructed to act as the animation state machine.\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ContentConductorConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ContentConductorConstructorToken:     miscellaneou\n\n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('ContainersConductorConstructorToken')\n                        \n                    \n\n                \n                    \n                        An injection token representing an implementation of a \nconstructor in the shape of ContentConductorConstructor.\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dvkLeave:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  trigger(\"dvkLeave\", [\n    transition(\":leave\", \n      animate(\"{{ timing }}\"), \n        { params: { timing: \"0ms\" }})\n  ])\n]\n                        \n                    \n\n                \n                    \n                        Stub animation for the :leave transition\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/leave-pseudo-animation/leave-pseudo-animation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dvkLeave:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('dvkLeave', [\n    transition('enabled => void', \n      animate('{{ leaveTiming }}', \n      style({ /* empty */ })))\n  ])\n                        \n                    \n\n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DynamicAnimationsHandlerConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DynamicAnimationsHandlerConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DynamicAnimationsHandlerConstructorToken')\n                        \n                    \n\n                \n                    \n                        Token for injecting the constructor for an object that can\nact as the Animations Handler\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DynamicComponentSerializerConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DynamicComponentSerializerConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DynamicComponentSerializerConstructorToken')\n                        \n                    \n\n                \n                    \n                        This token represents the specific instance used for the\ncomponent serializer.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/content-conductor.html":{"url":"additional-documentation/content-conductor.html","title":"additional-page - Content Conductor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCondent Conductor\nThe Condent Conductor module provides the functionality for moving \nTemplateRefs between multiple ViewContainerRefs referenced with\nstring name values.\nCreating Containers\nContainers can be defined inside a Component template with the \nContentContainerDirective\nor a custom directive that extends ContentContainerDirective.\n\nThe string names provided to the directive can be used to reference\nthat container through an instance of ContentConductor.\nCreating Content\nContent is supplied through either the ContentDirective or a custom directive that extends it.  This is a structural directive so when used it must be prefixed with a * like *ngIf or *ngFor.\nThe ContentDirective takes an input which represents the string name of the ContentContainerDirective to initially attach the view to.\n  dynamicContents = [];\n  dContainerName = 'one';\n\n  addContentToAlternatingContainer() {\n    this.dynamicContents.push(0);\n    this.dContainerName = this.dContainerName === 'one'? 'two':'one';\n  }\n  Conductor Content 1\n  Conductor Content 2\n  \n    New Content\n  \nNote\nStructural directive inputs are bindings.  So the value given to the directive must either be a bound variable, *dvk-content=\"containerName\", or an anyonmous string variable, *dvk-content=\"'one'\".  Providing a bare string, *dvk-content=\"one\" will result in the template attempting to bind to the component controller member one.\nExtending ContentDirective\nThe ContentDirective can also be extended in order to provide preset initial container names or other functionality.\n@Directive({\n  selector: '[one-content]'\n})\nexport class OneContentDirective extends ContentDirective {\n  readonly initialContainerName = 'one';\n\n  constructor(private tRef: TemplateRef) { super(tRef) }\n}@Directive({\n  selector: '[two-content]'\n})\nexport class TwoContentDirective extends ContentDirective {\n  readonly initialContainerName = 'two';\n\n  constructor(private tRef: TemplateRef) { super(tRef); }\n}  oneContents = [];\n  twoContents = [];\n\n  addToOne() {\n    this.oneContents.push(0);\n  }\n\n  addToTwo() {\n    this.twoContents.push(0);\n  }  \n  \n    One Content\n  \n  \n    Two Content\n  \nCreating a Conductor\nThe ContentConductor can be created by injecting the ContentConductorService into a component's constructor.\n  constructor(private ccService: ContentConductorService) { }And then calling the createContentConductor method with the QueryLists for the ContentContainerDirectives and the ContentDirectives or their derivatives.  Generally, these QueryLists should be available during a components' ngAfterViewInit lifecycle method.\nThe init method starts listening to the QueryLists for changes.\n  @ContentChildren(ContentDirective,{ descendants: true }) \n  contents: QueryList>;\n\n  @ViewChildren(ContentContainerDirective)\n  containers: QueryList;\n\n  conductor: ContentConductor;\n\n  ngAfterViewInit() {\n    this.conductor = this.ccService\n      .createContentConductor(this.containers, this.contents);\n\n    this.conductor.init('one');\n  }Or provide multiple ContentDirectives or ContentContainerDirectives.\n  @ContentChildren(ContentDirective,{ descendants: true }) \n  contents: QueryList;\n\n  @ContentChildren(OneContentDirective,{ descendants: true }) \n  oneContents: QueryList;\n\n  @ContentChildren(TwoContentDirective,{ descendants: true }) \n  twoContents: QueryList;\n\n\n  @ViewChildren(ContentContainerDirective)\n  containers: QueryList;\n\n  conductor: ContentConductor;\n\n  constructor(\n    private ccService: ContentConductorService) { }\n\n  ngAfterViewInit() {\n    this.conductor = this.ccService\n      .createContentConductor(\n        [this.containers], \n        [this.contents,this.oneContents,this.twoContents]);\n\n    this.conductor.init();\n  }Using the Conductor\nThen content can be moved from one container to another by specifying\nthe container string names.\nthis.conductor.moveViews('one','two');The ContentConductor also provides the ability to move single views from one container to another based on their index inside the container.\nthis.conductor.moveView('one','two',3);Detach a single view from any container returning the ViewRef.\nconst vRef: ViewRef = this.conductor.detachView('one',2);Attach a view to the end of a specified container.\nthis.conductor.attachView('two',vRef);Detach all views from a specified container.\nconst views: ViewRef[] = this.conductor.detachViews('one');And attach an array of views to a specified container.\nthis.conductor.attachViews('two',views);Finally the content conductor should be destroyed inside the components\nngOnDestroy method in order to free up the resources it uses.\nngOnDestroy() {\n  this.conductor.destroy();\n}Note\nAll of the methods that insert views into containers also have an optional index parameter at the end that is the index to insert at.\nIf it is not specified the items are inserted to the end of the containers views.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/content-conductor/example.html":{"url":"additional-documentation/content-conductor/example.html","title":"additional-page - Example","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Your browser does not support iframes.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-animations.html":{"url":"additional-documentation/dynamic-animations.html","title":"additional-page - Dynamic Animations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDynamic Animations\nThe Dynamic Animations module provides a directive that allow animations to be specified in the same format as standard Angular animations.  These animations are supplied at run time instead of statically in the Component decorator so a component developer can expose the animations specification and a consumer of the component can supply their own animations.\nDefining a set of Animations\nAnimations are defined using the same functions that normal Angular animations use with a few exceptions.  The animations are defined as an array containing state and transition definitions from @angular/animations.  A trigger definition is not recognized as the DynamicAnimationsDirective supplies an @Input member state that works in the same way as a trigger does.\nOther constraints are that no part of an animation can refer to a defined trigger, such as some forms of query, and no part can refer to a specific state.  The concept of states is implemented fully by the AnimationStateMachine as the Angular AnimationBuilder does not have the same concept of states as the standard static Angular animations.\nA simple animation looks like this.\nanimations = [\n    state('open',style({\n        'transform': `scaleY(1.0)`,\n        'transform-origin': 'top'\n    })),\n    state('closed',style({\n        'transform': `scaleY(0.0)`,\n        'transform-origin': 'top'\n    })),\n    transition('openclosed',animate('200ms'))\n];Currently supported abilities include the wild card for transitions like *=>open or closed=>* as well as :enter.  The :leave state has limited support at the moment.  Please refer to the section below.\nNote\nMore complex animations as defined normally by Angular are supported but have not all been fully tested at this time.  If you find any animations that work statically but do not work dynamically outside of the constraints listed above please submit a bug report with the animation that does not work included.\nAnimation States\nThe state itself can be represented by a string member that can be bound to the state @Input of the directive.  \ncurrentState = 'closed';The animation directive will automatically transition from the void state to the value of the bound state during initalization.  It will play any :enter or *=>void transitions that match the conditions as were definined in the animations.\nNote\nCurrently only string states are supported; numerical values will not work and neither will :increment or :decrement transition styles.  Support is planned but not yet implemented.\nUsing the DynamicAnimationsDirective\nThe dynamic animations directive can be attached to an element and passed the animations and the state binding.\n\nTransitioning the State\nThe state can be transitioned simply by changing the value of the bound member to the next desired state.\nthis.currentState = 'open';The transition that matches the change in state with the most specificity will be played when the value of the bound state is changed.\nLeave Transition\nThe leave transition is partially supported at the moment.\nIf a :leave animation, or *=>void, is specified you must also both\nadd the @dvkLeave directive to the element and add dvkLeave to \nthe component as a static animation.  This step is only necessary\nfor the leave animation. \nThis is due to the fact that Angular will remove an element before a dynamic animation has a chance to play.  A static leave animation must be used to keep the element around long enough for the dynamic animation to actually play.\nCurrently the dvkLeave directive is set to a constant time of 500ms.  In the future this value will be made dynamic to match the dynamic animation supplied.\nSo in order to use a leave animation first attach the animation to the component metadata.\n@Component({\n    animations: [dvkLeave]\n})Then add it as a trigger to the element containing the DynamicAnimationsDirective.\n\nAnd define a leave transition inside the animations supplied to the directive.\ntransition(':leave',animate('200ms',\n    style({ 'background-color': 'red' }))\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-animations/example.html":{"url":"additional-documentation/dynamic-animations/example.html","title":"additional-page - Example","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Your browser does not support iframes.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-components.html":{"url":"additional-documentation/dynamic-components.html","title":"additional-page - Dynamic Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDynamic Components\nThe Dynamic Components module provides a directive that will instantiate components dynamically with the ability to hook up their inputs to observable streams and provide callbacks for the instantiated components output emitters.\nCreating a Serializer\nA DynamicComponentSerializer is used to translate between a string name and a Component class instance.  This allows the string name to be stored inside an ngrx store, transmitted to a server, or any other use that might be desired and the data can be used later to instantiate the same dynamic component.  \nA serializer can be created with the createSerializer method of the DynamicComponentSerializerService.  \nFirst inject the service into a components constructor.\nconstructor(private dcsService :DynamicComponentSerializerService) {} And then pass the createSerializer method a DynamicComponentsMap of string names to component class instances.\nserializer: DynamicComponentSerializer;\n\nngOnInit() {\n    this.serializer = this.dcsService.createSerializer({\n        'textComponent': TextComponent,\n        'numberComponent': NumberComponent\n    });\n}This serializer is stateless other than the map and can be reused for any number of instances of DynamicComponentDirectives.\nCreating a DynamicComponentModel\nA DynamicComponentModel is the model that the DynamicComponentDirective uses to instantiate a component and hook up any streams specified.\nA DynamicComponentModel extends the DynamicComponentData interface.  The DynamicComponentData interface was designed to be serializable so it can be stored or transferred as desired.  It consists of a name string and an initialValues object.  The name is the serialized name of the component that should be instantiated.  The initializedValues should be a map of fields inside the component class type to the desired initial values for those fields.  As long as the field values are serializable this entire data structure can be safely stored and used for any purpose.\n@Component({\n    template: `\n        \n        {{text}}\n        \n    `\n})\nclass TextComponent {\n    @Input() text: string;\n    @Output() textClicked = new EventEmitter();\n}\n\nconst data: DynamicComponentData = {\n    name: 'textComponent',\n    initialValues: {\n        'text': 'The initial text for this component'\n    }\n}This data structure can be combined with the other fields of the DynamicComponentModel before it is applied to the directive.\ntext$ = new Subject();\n\nonClick = (e: MouseEvent) => {\n    console.log('Dynamic component was clicked');\n}\n\nconst model: DynamicComponentModel = {\n    ...this.data,\n    inputs$: {\n        text: this.text$.asObservable()\n    },\n    outputCallbacks: {\n        textClicked: this.onClick\n    },\n    providers: [\n    /* Any custom providers for the component can be supplied here */\n    ]\n}Note\nThe context of this inside callbacks will be the dynamic component and not the class where the callback is defined unless the callback method is defined as an arrow function or the value of this is bound before passing the result to the dynamic component.  This example uses an arrow function to preserve the context of this inside the onClick callback.\nCreating a DynamicComponentDirective\nWith the model set up and a serializer created those two pieces can now be passed off to an instance of the DynamicComponentDirectives inside the template of a component.\n\nThe DynamicComponentDirective will use the serializer to resolve the string name to a component and create an instance of it.  It will apply any specified initial values during instantiation.  Then it will hook up any specified input streams and output callbacks to the members of the component.\nThe directive will track and properly dispose of the subscriptions for the streams and will trigger change detection manually when new values are emited from the input streams.  The input streams also have a distinct until changed operator applied.  The directive should manage these streams in the same way that the async pipe does for other components.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-components/example.html":{"url":"additional-documentation/dynamic-components/example.html","title":"additional-page - Example","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Your browser does not support iframes.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
