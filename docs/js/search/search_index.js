var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/AnimationStateMachine.html",[0,0.204,1,1.836]],["body/interfaces/AnimationStateMachine.html",[0,0.287,1,2.575,2,0.407,3,0.407,4,0.349,5,0.533,6,2.205,7,2.016,8,2.205,9,3.432,10,0.378,11,2.74,12,1.658,13,4.706,14,1.435,15,1.171,16,1.365,17,1.67,18,1.365,19,0.5,20,2.168,21,3.077,22,4.045,23,5.182,24,2.029,25,0.95,26,0.02,27,4.054,28,3.137,29,5.31,30,2.427,31,1.67,32,2.925,33,2.929,34,0.954,35,1.67,36,3.385,37,2.74,38,2.925,39,0.947,40,0.5,41,2.365,42,2.065,43,3.056,44,0.378,45,2.776,46,5.31,47,4.003,48,3.056,49,0.675,50,4.003,51,1.635,52,0.014,53,0.014]],["title/interfaces/AnimationStateMachineConstructor.html",[0,0.204,54,2.414]],["body/interfaces/AnimationStateMachineConstructor.html",[0,0.328,1,2.393,2,0.502,3,0.502,4,0.431,5,0.657,6,2.719,7,1.903,8,2.719,10,0.466,11,3.132,12,1.676,13,4.209,26,0.02,34,0.913,35,1.552,40,0.822,44,0.466,52,0.016,53,0.016,54,3.869,55,4.231,56,1.339,57,4.635,58,3.768,59,2.255,60,3.768,61,2.62,62,2.62,63,2.13,64,2.546,65,2.015,66,1.909,67,2.015,68,4.231,69,4.935]],["title/injectables/AnimationStatesService.html",[70,0.973,71,1.954]],["body/injectables/AnimationStatesService.html",[1,2.996,2,0.337,3,0.337,4,0.407,5,0.719,6,2.974,7,1.911,8,2.974,10,0.44,11,2.406,12,1.643,13,4.064,14,0.895,19,0.414,25,0.861,26,0.02,30,2.131,31,1.843,34,0.498,35,2.149,37,2.406,38,3.53,39,0.832,40,0.823,44,0.313,52,0.012,53,0.012,54,3.736,56,1.029,58,4.475,59,1.513,60,2.528,61,2.902,62,2.902,63,1.429,64,1.709,65,1.352,66,2.601,67,2.523,68,3.999,70,1.506,71,2.406,72,3.19,73,2.839,74,2.973,75,1.666,76,5.025,77,2.755,78,1.506,79,3.311,80,5.399,81,3.311,82,1.261,83,0.832,84,1.139,85,3.311,86,3.311,87,1.352,88,1.281,89,0.809,90,2.296,91,2.839,92,2.839,93,1.956,94,2.839,95,2.111,96,2.528,97,2.528,98,2.839,99,3.311,100,3.311,101,1.584,102,2.131,103,3.311,104,2.33,105,3.311,106,3.311]],["title/interfaces/AnimationStylesMap.html",[0,0.204,62,1.634]],["body/interfaces/AnimationStylesMap.html",[0,0.339,2,0.453,3,0.453,4,0.388,5,0.758,6,3.133,7,1.919,10,0.42,12,1.087,19,0.556,24,1.7,26,0.02,31,1.788,35,1.971,37,2.295,39,1.014,40,0.556,44,0.537,49,1.213,52,0.015,53,0.015,59,2.032,61,1.92,62,2.454,63,2.454,67,2.322,107,3.396,108,1.874,109,5.855,110,4.448,111,5.045,112,3.084,113,3.814,114,4.342,115,3.133,116,2.628,117,3.814,118,3.396,119,3.396,120,4.342,121,2.628,122,3.943,123,3.084,124,3.814]],["title/interfaces/AnimationTransitionsMap.html",[0,0.204,61,1.634]],["body/interfaces/AnimationTransitionsMap.html",[0,0.33,2,0.429,3,0.429,4,0.368,5,0.732,6,3.028,7,1.922,10,0.398,12,1.343,19,0.527,24,1.261,25,0.672,26,0.02,31,1.326,35,2.165,37,2.836,39,1.09,40,0.527,44,0.519,49,1.213,52,0.014,53,0.014,59,1.928,61,2.372,62,1.821,63,2.372,67,1.723,107,3.221,108,1.827,109,5.242,111,5.129,112,3.811,113,4.713,114,4.945,115,3.568,116,3.247,117,4.713,118,4.197,119,4.197,120,4.945,121,3.247,122,4.239,123,3.811,124,4.713,125,4.219,126,4.219]],["title/interfaces/ComponentConstructor.html",[0,0.204,127,1.836]],["body/interfaces/ComponentConstructor.html",[0,0.353,2,0.569,3,0.569,4,0.488,5,0.745,10,0.528,15,1.234,26,0.019,44,0.528,52,0.017,53,0.017,56,1.234,127,3.173,128,4.796,129,2.886,130,4.271,131,3.879,132,5.594]],["title/interfaces/ContainersMap.html",[0,0.204,133,2.626]],["body/interfaces/ContainersMap.html",[0,0.338,2,0.528,3,0.528,4,0.453,10,0.49,19,0.649,26,0.019,39,0.926,40,0.649,44,0.49,49,1.134,52,0.016,53,0.016,83,1.199,89,1.268,108,1.871,133,4.341,134,2.702,135,5.368,136,4.78,137,3.309,138,3.448,139,3.036,140,3.971,141,4.451,142,5.191]],["title/interfaces/ContentConductor.html",[0,0.204,143,1.836]],["body/interfaces/ContentConductor.html",[0,0.159,2,0.184,3,0.378,4,0.158,10,0.524,11,1.518,15,0.649,19,0.844,21,1.804,22,1.876,25,0.849,26,0.02,30,1.345,31,0.925,32,2.361,36,1.876,39,0.99,40,0.368,44,0.171,49,1.183,51,2.064,52,0.008,53,0.008,70,0.756,75,1.218,77,1.738,78,1.583,82,1.44,83,1.195,84,1.302,89,0.442,101,1.44,104,2.841,121,3.889,134,2.478,138,3.768,139,3.317,140,1.738,143,1.427,144,2.962,145,1.551,146,1.518,147,1.621,148,2.478,149,2.247,150,1.738,151,2.04,152,1.876,153,4.188,154,2.532,155,2.247,156,2.247,157,3.675,158,4.044,159,4.334,160,1.551,161,5.667,162,5.587,163,1.809,164,3.719,165,3.81,166,4.334,167,5.553,168,4.24,169,1.551,170,1.809,171,3.059,172,1.809,173,2.523,174,1.621,175,1.518,176,2.942,177,1.876,178,1.876,179,1.551,180,1.809,181,4.285,182,1.958,183,3.675,184,3.059,185,3.281,186,2.247,187,2.523,188,1.809,189,2.523,190,1.809,191,2.523,192,1.551,193,5.179,194,3.189,195,1.809,196,2.247,197,2.247,198,2.732,199,3.675,200,4.568,201,4.285,202,2.942,203,2.942,204,4.334,205,2.04,206,1.551,207,1.809,208,1.876,209,0.933,210,0.933,211,1.153,212,1.809,213,1.809,214,1.809,215,1.551,216,4.285,217,1.551,218,1.809,219,1.809,220,1.809,221,1.809]],["title/interfaces/ContentConductorConstructor.html",[0,0.204,222,2.237]],["body/interfaces/ContentConductorConstructor.html",[0,0.319,2,0.481,3,0.481,4,0.413,10,0.446,26,0.02,40,0.806,44,0.446,52,0.015,53,0.015,56,1.304,65,1.93,78,1.519,89,1.155,101,1.278,104,2.551,115,2.604,130,3.61,134,2.04,138,2.604,139,2.866,143,3.276,144,2.439,148,2.783,150,3.492,152,4.433,178,3.014,184,2.604,209,2.439,210,2.439,211,3.014,222,3.492,223,3.05,224,3.014,225,2.551,226,3.61,227,4.513,228,4.054,229,4.513]],["title/modules/ContentConductorModule.html",[230,1.465,231,2.626]],["body/modules/ContentConductorModule.html",[0,0.229,2,0.295,3,0.295,4,0.253,10,0.274,14,1.146,17,2.19,24,2.011,26,0.02,31,1.334,34,0.754,39,0.756,40,0.791,44,0.521,49,0.716,52,0.011,53,0.011,66,1.641,78,0.745,82,1.146,83,0.756,84,1.036,87,2.047,89,0.709,93,2.506,101,1.491,119,3.238,134,1.252,138,2.336,139,3.263,143,2.674,144,1.497,146,3.349,147,2.336,148,3.031,151,2.941,153,3.824,154,2.506,165,3.799,175,2.188,210,1.497,222,2.506,223,3.162,224,2.703,230,2.371,231,4.829,232,1.714,233,2.012,234,3.476,235,2.012,236,2.487,237,2.487,238,2.487,239,2.487,240,3.799,241,2.941,242,2.012,243,1.849,244,2.901,245,3.238,246,4.241,247,2.941,248,3.637,249,4.211,250,2.506,251,4.241,252,2.057,253,2.941,254,4.241,255,4.241,256,3.238,257,3.637,258,4.241,259,4.241,260,3.238,261,2.941,262,3.238,263,3.824,264,3.824,265,2.941,266,3.238,267,4.241,268,2.215,269,3.637,270,2.703,271,2.487,272,3.828,273,3.238,274,2.901,275,2.901,276,1.497,277,1.714,278,2.901,279,2.215,280,2.487]],["title/injectables/ContentConductorService.html",[70,0.973,146,1.954]],["body/injectables/ContentConductorService.html",[2,0.342,3,0.342,4,0.293,10,0.445,14,0.908,15,1.039,19,0.42,25,0.94,26,0.02,31,1.855,34,0.505,39,0.84,40,0.805,44,0.317,52,0.012,53,0.012,56,1.039,65,1.372,70,1.655,74,3.469,75,1.547,78,1.516,82,1.471,83,0.84,84,1.151,89,0.821,95,2.142,96,2.566,97,2.566,101,1.471,102,1.536,104,2.034,134,2.349,143,3.326,144,2.808,146,3.044,148,2.779,150,3.215,152,4.215,153,3.268,185,1.734,209,2.808,210,1.734,211,2.142,222,3.485,223,3.044,224,3.004,226,2.566,227,4.504,229,4.743,247,3.268,270,2.142,271,2.882,276,1.734,280,4.041,281,2.839,282,2.566,283,3.268,284,3.598,285,4.713,286,3.598,287,4.713,288,2.596,289,4.713,290,5.058,291,3.361,292,3.361,293,3.361,294,3.361,295,2.142,296,3.598,297,2.784,298,5.058,299,5.058,300,2.566,301,2.882,302,2.142,303,3.361,304,3.361,305,3.361,306,1.734,307,1.536,308,1.986]],["title/interfaces/ContentContainer.html",[0,0.204,209,1.954]],["body/interfaces/ContentContainer.html",[0,0.329,2,0.506,3,0.506,4,0.434,10,0.47,19,0.622,20,2.491,25,0.973,26,0.02,40,0.622,44,0.47,49,1.191,52,0.016,53,0.016,83,1.088,89,1.216,134,2.148,140,4.244,144,2.567,197,4.658,209,3.148,210,2.567,296,4.658,309,4.266,310,6.101,311,5.898,312,5.898,313,6.101]],["title/directives/ContentContainerDirective.html",[16,0.973,165,2.086]],["body/directives/ContentContainerDirective.html",[2,0.383,3,0.383,4,0.329,10,0.356,14,1.674,16,1.807,19,0.471,25,0.813,26,0.02,28,3.659,31,1.603,34,0.567,39,1.031,40,0.723,44,0.356,49,1.125,52,0.013,53,0.013,56,1.125,78,0.968,82,1.019,83,1.031,84,0.921,89,0.921,101,1.378,102,2.33,134,2.673,139,3.478,140,3.941,143,2.473,144,3.195,146,3.195,148,3.034,164,3.412,165,2.809,178,3.251,209,2.982,210,3.195,211,2.402,225,2.201,240,2.809,269,3.231,281,2.33,311,3.231,312,4.373,314,3.231,315,2.201,316,1.944,317,3.251,318,3.948,319,3.184,320,3.231,321,4.956,322,5.099,323,4.373,324,3.769,325,2.877,326,3.769,327,3.231,328,3.769]],["title/directives/ContentDirective.html",[16,0.973,240,2.086]],["body/directives/ContentDirective.html",[2,0.489,3,0.489,4,0.419,10,0.453,14,1.613,16,1.856,25,0.766,26,0.02,34,0.722,39,0.857,40,0.601,44,0.453,52,0.015,53,0.015,56,1.059,70,1.534,82,1.298,83,0.857,84,1.173,89,1.173,134,2.576,139,2.895,148,2.932,150,4.312,178,3.805,240,3.289,281,2.728,288,2.646,316,2.478,317,3.805,318,3.805,329,4.119,330,4.558,331,4.803,332,4.803]],["title/classes/DefaultContentConductorService.html",[34,0.57,264,2.626]],["body/classes/DefaultContentConductorService.html",[2,0.192,3,0.192,4,0.165,10,0.178,17,0.959,19,0.55,20,1.245,21,2.133,22,1.944,25,1.037,26,0.02,34,0.661,39,1.161,40,0.603,44,0.178,49,1.175,51,2.106,52,0.008,53,0.008,56,0.673,75,0.867,78,1.603,82,1.618,83,1.04,84,1.424,87,1.565,88,0.731,89,0.462,101,0.824,102,3.11,108,0.565,121,3.926,133,3.915,134,2.84,136,1.443,138,2.989,139,2.968,143,2.339,148,3.112,150,2.85,152,3.459,157,3.771,158,4.137,159,4.137,160,2.615,161,4.143,162,5.697,166,4.137,169,1.621,179,1.621,187,2.615,189,2.615,191,1.621,192,1.621,193,4.137,194,4.137,200,3.287,206,2.615,209,0.975,210,0.975,211,1.205,215,1.621,217,1.621,225,1.898,226,1.443,227,2.328,229,2.927,262,2.328,264,2.115,266,2.328,268,5.477,270,1.944,282,1.443,295,3.716,297,2.598,333,2.328,334,3.05,335,4.398,336,4.398,337,3.833,338,1.89,339,1.89,340,1.89,341,1.89,342,4.143,343,1.89,344,1.89,345,1.89,346,1.89,347,1.89,348,1.89,349,1.89,350,1.89,351,1.89,352,1.89,353,1.89,354,1.89,355,1.89,356,1.443,357,0.864,358,1.89,359,1.89,360,1.89,361,3.833,362,1.89,363,4.398,364,1.89,365,3.05,366,3.05,367,3.05,368,3.05,369,1.944,370,1.89,371,1.443,372,3.05,373,3.05,374,1.89,375,1.89,376,1.89,377,1.89,378,1.89,379,1.89,380,1.89,381,1.89,382,1.89,383,1.89,384,1.89,385,3.716,386,3.05,387,2.989,388,5.646,389,2.615,390,1.89,391,1.89,392,1.89,393,1.89,394,3.05,395,1.89,396,3.05,397,1.89,398,1.89,399,1.89,400,3.05,401,3.05,402,1.621,403,3.05]],["title/classes/DefaultDynamicAnimationsHandlerService.html",[34,0.57,404,2.626]],["body/classes/DefaultDynamicAnimationsHandlerService.html",[1,2.401,2,0.238,3,0.238,4,0.204,5,0.849,7,1.644,8,1.289,10,0.221,12,1.771,17,1.135,18,1.821,19,0.293,20,1.473,21,2.401,25,0.97,26,0.02,33,2.439,34,0.543,35,1.912,39,1.113,40,0.736,41,2.925,42,1.862,43,1.786,44,0.221,48,2.755,49,0.902,51,2.308,52,0.009,53,0.009,56,0.796,60,1.786,61,2.751,62,2.751,63,1.01,64,1.207,66,1.396,67,2.649,71,2.554,72,1.382,75,1.026,76,2.006,78,1.452,82,1.528,83,1.008,84,1.381,87,1.799,88,0.905,101,0.975,102,3.203,108,1.48,122,3.054,225,2.137,357,1.069,385,2.808,404,2.502,405,5.465,406,4.866,407,2.006,408,2.76,409,1.862,410,3.094,411,4.951,412,4.951,413,3.608,414,4.405,415,3.094,416,3.094,417,2.006,418,3.054,419,2.913,420,3.363,421,2.554,422,3.363,423,3.608,424,2.34,425,3.608,426,2.34,427,2.34,428,2.34,429,2.34,430,2.34,431,2.34,432,3.608,433,2.34,434,3.608,435,2.34,436,1.207,437,1.622,438,1.207,439,1.622,440,1.622,441,2.34,442,2.34,443,2.34,444,2.34,445,2.34,446,2.34,447,4.245,448,3.608,449,2.34,450,4.951,451,2.34,452,3.608,453,3.608,454,3.094,455,3.777,456,2.34,457,3.608,458,2.006,459,2.34,460,2.34,461,2.34,462,2.34,463,2.34,464,2.006,465,2.34,466,2.34]],["title/classes/DefaultDynamicComponentSerializer.html",[34,0.57,467,2.626]],["body/classes/DefaultDynamicComponentSerializer.html",[2,0.395,3,0.395,4,0.339,5,0.835,10,0.367,15,1.611,17,1.636,18,1.837,19,0.485,25,0.999,26,0.02,34,0.783,39,1.046,40,0.734,44,0.367,49,0.99,52,0.014,53,0.014,56,0.856,75,1.782,78,1.611,82,1.694,83,1.046,84,1.434,87,2.124,101,1.406,127,3.17,129,2.003,182,2.377,225,2.705,276,2.003,288,2.139,295,2.475,357,1.774,467,3.608,468,5.375,469,4.786,470,3.329,471,3.17,472,2.705,473,3.975,474,4.461,475,4.461,476,3.882,477,3.882,478,4.461,479,4.461,480,3.882,481,3.329,482,4.461,483,3.882,484,2.294,485,2.003,486,2.692,487,5.203,488,3.882,489,3.882]],["title/directives/DynamicAnimationsDirective.html",[16,0.973,409,1.954]],["body/directives/DynamicAnimationsDirective.html",[0,0.14,2,0.158,3,0.158,4,0.136,5,0.837,7,1.897,10,0.369,12,1.744,15,1.035,16,1.478,18,1.003,19,0.194,20,1.06,24,1.298,25,0.957,26,0.02,33,2.026,34,0.706,35,1.85,37,2.695,38,1.429,39,1.186,40,0.678,44,0.147,49,1.06,51,1.917,52,0.007,53,0.007,56,0.572,59,0.71,66,2.02,67,1.06,75,0.738,78,1.342,82,1.174,83,1.07,84,1.326,87,0.634,88,1.816,89,0.379,93,1.533,102,3.114,108,1.167,111,3.804,112,1.799,115,1.429,116,1.533,121,2.307,164,1.429,171,2.392,175,1.339,177,2.489,182,1.186,185,1.339,198,2.13,205,1.799,208,2.489,225,1.12,230,1.004,249,1.981,277,1.533,281,1.784,297,1.533,306,0.801,307,0.71,308,0.918,315,1.12,316,2.571,317,1.654,318,1.654,319,3.085,325,1.186,357,0.71,369,3.57,408,2.015,409,1.339,417,1.332,418,2.318,419,1.527,436,0.801,437,1.077,438,0.801,447,1.332,454,1.332,455,1.332,490,3.461,491,1.332,492,2.595,493,1.981,494,2.595,495,1.799,496,1.981,497,2.745,498,2.595,499,1.654,500,2.566,501,2.595,502,1.981,503,3.176,504,2.225,505,2.225,506,2.595,507,1.981,508,1.981,509,3.342,510,2.866,511,2.595,512,3.905,513,3.905,514,3.905,515,2.595,516,2.595,517,3.348,518,3.905,519,3.342,520,2.307,521,3.342,522,2.307,523,3.342,524,2.307,525,2.307,526,2.595,527,2.595,528,3.342,529,2.595,530,2.595,531,1.553,532,4.272,533,2.595,534,1.553,535,4.272,536,1.553,537,1.553,538,1.553,539,1.553,540,1.553,541,1.553,542,1.553,543,1.553,544,1.553,545,1.332,546,2.318,547,1.654,548,1.332,549,1.186,550,1.332,551,1.332,552,1.077,553,1.332,554,1.553,555,1.553,556,1.553,557,3.316,558,1.553,559,1.332,560,3.348,561,1.332,562,2.225,563,1.332,564,1.332,565,1.332,566,1.553,567,2.225,568,2.225,569,1.553,570,1.332,571,1.332,572,1.553,573,2.552,574,1.553,575,1.553,576,2.595,577,1.553,578,1.553,579,1.553,580,1.553,581,2.595,582,1.553,583,1.553,584,1.553,585,1.553,586,1.553,587,1.553,588,1.553,589,1.553,590,1.553,591,1.553,592,1.553,593,1.553,594,1.553,595,1.332,596,1.553,597,1.553,598,1.186,599,1.553]],["title/interfaces/DynamicAnimationsHandler.html",[0,0.204,408,1.954]],["body/interfaces/DynamicAnimationsHandler.html",[0,0.336,2,0.387,3,0.387,4,0.332,5,0.506,7,1.847,10,0.359,12,1.67,14,1.386,15,1.131,16,1.318,17,1.613,19,0.475,20,2.094,21,3.013,23,3.916,24,2.078,25,0.991,26,0.02,27,3.916,28,3.03,33,2.682,34,0.771,35,2.04,38,2.825,40,0.641,44,0.359,48,4.745,49,0.865,51,2.538,52,0.013,53,0.013,61,2.213,62,2.213,63,1.64,64,1.961,67,1.552,108,1.735,175,2.646,177,3.269,182,2.344,250,3.03,315,2.682,357,1.737,408,2.646,415,5.329,416,5.329,419,2.344,436,1.961,438,1.961,490,2.093,600,3.259,601,4.397,602,3.916,603,3.269,604,5.128,605,5.128,606,5.128,607,5.128,608,3.916,609,3.8]],["title/interfaces/DynamicAnimationsHandlerConstructor.html",[0,0.204,610,2.414]],["body/interfaces/DynamicAnimationsHandlerConstructor.html",[0,0.315,2,0.471,3,0.471,4,0.404,5,0.617,7,1.577,10,0.437,11,3.01,12,1.75,18,1.19,26,0.02,30,2.666,33,2.894,35,1.456,40,0.864,42,2.389,44,0.437,49,0.781,52,0.015,53,0.015,56,1.287,57,4.455,61,2.518,62,2.518,63,1.999,64,2.389,65,1.891,66,1.791,67,1.891,71,2.389,72,2.736,357,2.116,408,2.389,418,3.211,419,2.666,420,3.536,421,3.01,422,3.536,436,2.389,437,3.211,438,2.389,439,3.211,440,3.211,490,2.551,610,3.719,611,3.97,612,4.455,613,3.97,614,4.63]],["title/modules/DynamicAnimationsModule.html",[230,1.465,615,2.626]],["body/modules/DynamicAnimationsModule.html",[1,1.969,2,0.278,3,0.278,4,0.239,5,0.364,7,1.679,8,2.236,10,0.258,12,1.711,14,1.097,16,1.043,17,2.086,18,1.705,24,1.214,26,0.02,33,1.752,34,0.411,40,0.869,42,1.41,44,0.566,52,0.011,53,0.011,54,2.588,71,3.096,72,1.615,75,1.154,78,0.703,87,2.188,89,0.668,90,2.815,91,2.344,92,2.344,101,1.548,147,2.236,175,2.095,225,2.313,230,2.073,232,1.615,233,1.896,234,3.358,235,1.896,241,2.815,242,1.896,243,1.742,247,2.815,252,2.599,253,2.815,256,3.1,260,3.698,265,2.815,272,3.698,273,3.1,277,2.861,279,3.1,307,1.855,316,2.095,333,3.1,404,3.716,406,2.087,408,2.095,409,3.585,421,3.096,436,2.095,439,1.896,440,1.896,490,1.506,497,2.236,499,2.588,520,3.545,522,3.545,524,3.545,525,4.026,545,2.344,546,2.815,547,1.742,548,2.344,551,2.344,552,1.896,553,2.344,601,3.481,610,2.588,615,5.017,616,2.344,617,2.344,618,2.344,619,2.344,620,2.734,621,4.06,622,4.595,623,4.06,624,2.588,625,2.344,626,2.734,627,2.815,628,2.344,629,2.344,630,2.734,631,2.734,632,3.481,633,4.06]],["title/injectables/DynamicAnimationsService.html",[70,0.973,520,2.237]],["body/injectables/DynamicAnimationsService.html",[1,3.126,2,0.288,3,0.288,4,0.247,5,0.659,7,1.643,10,0.393,12,1.708,14,1.474,15,0.919,16,1.071,18,1.271,19,0.354,24,0.847,25,0.664,26,0.02,31,1.715,32,2.296,33,2.353,34,0.426,35,1.976,39,0.743,40,0.823,42,1.461,44,0.267,49,0.834,52,0.011,53,0.011,56,0.919,61,2.623,62,2.623,63,1.222,64,1.461,65,1.157,66,2.655,67,2.373,70,1.401,71,2.813,72,1.673,74,2.657,75,1.55,77,2.462,78,1.271,82,1.126,83,0.743,84,1.018,87,1.157,88,1.096,89,0.692,95,1.805,101,1.643,102,2.26,104,2.508,123,2.89,164,2.296,174,2.296,182,2.492,250,2.462,252,2.644,281,1.905,284,3.182,286,3.182,300,2.163,302,1.805,357,1.294,408,3.395,418,4.03,419,2.777,420,3.775,421,2.813,422,3.775,436,2.551,437,1.964,438,1.461,439,1.964,440,1.964,458,2.429,464,2.429,490,2.724,508,2.163,520,3.433,610,3.476,612,3.182,613,4.983,625,2.429,627,1.964,628,2.429,632,3.573,634,2.429,635,3.573,636,3.573,637,5.453,638,2.832,639,2.832,640,2.832,641,2.832,642,2.163,643,2.832,644,2.832,645,2.832,646,2.832]],["title/interfaces/DynamicComponentData.html",[0,0.204,647,2.414]],["body/interfaces/DynamicComponentData.html",[0,0.314,2,0.468,3,0.468,4,0.401,5,0.612,10,0.434,14,1.569,15,1.475,18,1.492,19,0.574,20,2.371,25,0.926,26,0.02,32,2.531,40,0.574,44,0.434,49,1.074,52,0.015,53,0.015,83,1.193,84,1.418,93,3.43,115,3.198,184,3.198,228,4.978,245,4.433,472,2.886,647,3.701,648,1.983,649,3.509,650,3.94,651,4.978,652,5.806,653,4.026,654,5.806,655,4.978,656,5.806,657,4.978,658,5.018,659,3.509,660,3.94]],["title/directives/DynamicComponentDirective.html",[16,0.973,661,2.237]],["body/directives/DynamicComponentDirective.html",[0,0.12,2,0.131,3,0.131,4,0.113,5,0.807,10,0.43,14,1.3,15,1.522,16,1.511,17,1.738,18,1.454,19,0.161,20,2.053,21,1.075,25,0.921,26,0.02,31,1.512,32,2.51,34,0.194,39,1.095,40,0.629,44,0.122,51,1.964,52,0.006,53,0.006,56,0.939,65,1.413,66,0.858,75,0.63,77,1.31,78,1.511,82,1.359,83,1.065,84,1.228,87,0.905,88,1.945,89,0.315,101,1.659,102,1.945,104,1.966,108,1.272,127,2.209,129,0.665,140,2.515,147,1.221,155,1.693,164,2.769,171,1.906,173,1.901,174,1.221,177,2.206,182,1.945,184,1.221,196,1.693,198,1.413,225,0.957,252,1.075,253,1.537,261,2.703,276,0.665,281,0.589,288,1.221,297,1.31,302,2.485,306,0.665,307,0.589,308,0.762,315,1.682,316,0.665,317,1.413,318,2.713,319,2.874,320,1.106,323,1.901,325,0.985,327,1.106,342,4.688,356,0.985,369,2.206,387,0.71,471,1.89,472,1.682,485,0.665,486,0.894,497,1.221,499,2.206,508,1.693,510,2.5,557,2.642,573,1.693,624,2.206,648,2.616,653,3.159,658,2.951,659,0.985,660,1.106,661,2.842,662,1.106,663,2.217,664,1.901,665,3.617,666,2.967,667,2.399,668,1.693,669,1.901,670,2.5,671,1.906,672,2.217,673,1.901,674,2.217,675,2.217,676,3.205,677,4.124,678,1.693,679,2.967,680,1.901,681,1.901,682,1.901,683,1.901,684,1.901,685,2.951,686,1.901,687,1.901,688,1.537,689,2.217,690,1.901,691,2.217,692,3.46,693,1.901,694,2.515,695,1.537,696,2.217,697,2.217,698,2.217,699,3.898,700,6.666,701,3.46,702,3.46,703,3.46,704,2.217,705,2.217,706,2.217,707,2.915,708,2.217,709,3.46,710,2.217,711,2.217,712,3.46,713,1.29,714,2.217,715,1.29,716,2.217,717,2.642,718,1.29,719,2.399,720,3.46,721,1.901,722,1.901,723,2.217,724,1.29,725,1.901,726,2.976,727,2.217,728,1.29,729,2.217,730,2.217,731,1.29,732,5.216,733,3.898,734,1.29,735,2.217,736,2.217,737,1.29,738,2.217,739,1.29,740,2.217,741,1.29,742,2.217,743,1.29,744,2.217,745,1.29,746,2.915,747,3.46,748,1.29,749,1.29,750,1.29,751,1.29,752,1.29,753,2.642,754,1.29,755,0.985,756,1.29,757,0.985,758,1.106,759,0.894,760,0.985,761,1.106,762,1.29,763,1.29,764,1.29,765,1.29,766,1.29,767,1.29,768,1.29,769,1.29,770,1.29,771,2.217,772,2.217,773,1.29,774,1.29,775,1.29,776,1.29,777,1.29,778,1.29,779,2.217,780,1.29,781,1.29,782,1.29,783,1.29,784,1.29,785,1.29,786,1.29,787,2.217,788,1.29,789,1.29,790,1.29,791,1.29,792,1.29,793,1.29,794,1.29,795,1.29,796,1.29,797,1.29,798,1.29,799,1.29,800,1.29,801,1.29,802,1.29,803,1.29,804,1.29,805,1.29,806,1.29,807,1.29,808,1.29,809,1.29,810,1.29]],["title/interfaces/DynamicComponentModel.html",[0,0.204,676,2.414]],["body/interfaces/DynamicComponentModel.html",[0,0.298,2,0.431,3,0.431,4,0.37,5,0.565,10,0.4,15,1.521,17,2.238,18,1.575,19,0.53,20,2.251,25,0.977,26,0.02,31,1.733,40,0.811,44,0.4,52,0.014,53,0.014,84,1.739,89,1.035,101,1.146,315,2.379,319,3.868,647,4.288,648,1.829,649,3.236,653,3.823,665,3.823,676,3.514,685,4.936,717,4.954,719,3.823,726,4.209,753,4.209,755,3.236,757,3.236,758,3.634,759,2.939,760,3.236,761,3.634,811,3.634,812,4.727,813,6.489,814,4.727,815,4.238]],["title/interfaces/DynamicComponentSerializer.html",[0,0.204,471,1.836]],["body/interfaces/DynamicComponentSerializer.html",[0,0.311,2,0.461,3,0.461,4,0.395,5,0.842,10,0.427,15,1.606,19,0.566,25,1.008,26,0.019,39,1.026,40,0.566,44,0.427,49,1.184,52,0.015,53,0.015,56,1.268,75,1.634,78,1.478,82,1.708,83,1.186,84,1.405,127,3.402,129,2.335,154,3.397,252,2.788,276,2.335,295,2.885,471,2.788,472,2.482,474,4.931,475,4.931,479,4.931,481,3.881,482,4.931,485,3.261,648,2.728,816,3.881,817,4.526,818,4.526,819,4.526]],["title/interfaces/DynamicComponentSerializerConstructor.html",[0,0.204,820,2.414]],["body/interfaces/DynamicComponentSerializerConstructor.html",[0,0.336,2,0.522,3,0.522,4,0.448,5,0.684,10,0.484,15,1.615,18,1.598,26,0.02,40,0.777,44,0.484,52,0.016,53,0.016,56,1.371,131,4.311,357,2.345,471,2.488,472,3,473,3.032,484,3.032,485,2.648,486,3.558,648,2.215,820,3.963,821,4.4,822,5.132,823,5.132]],["title/interfaces/DynamicComponentSerializerMap.html",[0,0.204,473,2.237]],["body/interfaces/DynamicComponentSerializerMap.html",[0,0.322,2,0.489,3,0.489,4,0.419,5,0.64,10,0.453,11,3.08,15,1.541,19,0.601,20,2.438,25,0.952,26,0.02,30,2.728,34,0.898,40,0.601,44,0.453,49,1.007,52,0.015,53,0.015,83,1.065,108,2.129,127,2.329,129,2.478,137,3.062,154,3.527,252,2.895,276,2.478,472,2.932,473,3.527,484,2.838,648,2.073,694,3.527,824,5.826,825,5.826]],["title/injectables/DynamicComponentSerializerService.html",[70,0.973,671,2.086]],["body/injectables/DynamicComponentSerializerService.html",[2,0.382,3,0.382,4,0.444,5,0.768,10,0.354,14,1.014,15,1.627,18,1.751,19,0.469,25,0.919,26,0.02,31,1.599,34,0.564,39,0.907,40,0.866,44,0.354,49,0.858,52,0.013,53,0.013,56,1.121,65,2.355,70,1.589,75,1.445,78,1.307,82,1.374,83,1.152,84,1.242,89,0.917,93,2.217,94,3.218,95,2.392,96,2.865,97,2.865,98,3.218,102,1.715,108,1.724,127,1.82,129,1.936,276,1.936,302,3.241,357,2.324,387,2.067,471,1.82,472,2.668,473,3.004,478,3.218,484,3.004,485,2.976,486,2.602,648,2.489,671,2.801,820,3.941,824,3.218,825,3.218,826,3.218,827,4.36,828,3.753,829,3.753,830,5.085,831,5.085,832,3.941,833,3.753,834,2.602,835,3.218,836,3.218,837,3.753,838,3.753,839,3.753,840,3.753,841,3.753,842,3.753]],["title/interfaces/DynamicComponentsMap.html",[0,0.204,832,2.414]],["body/interfaces/DynamicComponentsMap.html",[0,0.335,2,0.519,3,0.519,4,0.445,5,0.825,10,0.482,15,1.613,19,0.638,26,0.019,39,0.91,40,0.638,44,0.482,49,1.126,52,0.016,53,0.016,56,1.366,83,1.105,108,1.852,127,3.235,129,2.633,137,3.253,141,4.375,276,2.633,484,3.66,648,2.674,832,3.949,843,5.103,844,5.103]],["title/modules/DynamicComponentsModule.html",[230,1.465,845,2.626]],["body/modules/DynamicComponentsModule.html",[2,0.33,3,0.33,4,0.283,5,0.432,10,0.306,14,1.243,15,1.596,16,1.182,17,2.059,18,1.773,26,0.02,31,1.446,34,0.803,40,0.836,44,0.601,49,0.776,52,0.012,53,0.012,75,1.307,78,0.834,83,0.82,87,2.181,89,0.793,101,1.443,108,1.375,174,2.533,175,2.373,225,2.748,230,2.247,232,1.918,233,2.251,234,3.703,235,2.251,241,3.189,242,2.251,243,2.069,252,2.23,260,4.078,261,3.189,263,3.189,265,3.189,272,4.078,273,3.511,277,1.918,279,2.478,283,3.189,319,2.533,333,3.511,467,4.028,469,2.478,471,2.23,472,1.401,485,2.755,496,3.511,624,2.931,635,3.943,648,1.401,661,4.226,665,3.189,671,3.508,694,2.717,759,3.189,820,2.931,834,3.189,835,2.783,836,2.783,845,4.783,846,2.783,847,2.783,848,2.783,849,2.783,850,3.246,851,4.598,852,4.598,853,4.598,854,2.783,855,3.246,856,3.246,857,4.598]],["title/directives/LeaveDirective.html",[16,0.973,525,2.237]],["body/directives/LeaveDirective.html",[2,0.323,3,0.323,4,0.277,5,0.703,10,0.3,12,1.714,16,1.563,18,1.765,19,0.397,24,1.354,25,0.722,26,0.02,34,0.478,35,1.659,36,2.887,37,2.337,39,1.026,40,0.566,44,0.498,49,0.89,51,1.849,52,0.012,53,0.012,59,1.452,66,1.752,67,1.297,75,1.287,78,1.164,82,0.859,83,0.567,84,0.776,87,1.297,88,1.752,89,0.776,101,0.859,104,2.278,182,2.629,185,2.337,186,2.426,198,2.887,250,2.676,252,2.196,263,3.141,277,2.676,284,3.458,286,3.458,315,1.371,316,1.639,317,2.887,385,3.364,387,1.75,409,2.337,495,2.203,497,2.495,500,3.93,503,4.03,525,2.676,602,3.458,603,4.511,642,3.458,657,3.883,695,3.141,858,2.203,859,4.828,860,6.652,861,4.529,862,4.529,863,4.529,864,4.529,865,4.529,866,4.529,867,3.883,868,3.458,869,4.529,870,4.529,871,4.529,872,4.529,873,5.753,874,4.529,875,5.278,876,3.177,877,4.529,878,3.177,879,3.177,880,3.177,881,3.177,882,3.883,883,2.724,884,2.724,885,2.724]],["title/injectables/NgStateService.html",[70,0.973,524,2.237]],["body/injectables/NgStateService.html",[2,0.443,3,0.443,4,0.38,5,0.827,7,1.516,10,0.529,12,1.063,19,0.544,25,0.694,26,0.02,30,2.562,34,0.654,39,1,40,0.776,44,0.411,52,0.015,53,0.015,56,1.368,59,1.988,62,3.049,63,1.878,64,2.245,70,1.594,75,1.594,78,1.594,82,1.176,83,0.776,84,1.063,89,1.063,101,1.516,104,1.878,108,1.301,171,3.089,316,3.381,524,3.313,532,5.954,552,4.302,886,4.302,887,3.731,888,5.954,889,5.607,890,4.351,891,5.607,892,4.351,893,4.351,894,4.351,895,4.351]],["title/injectables/NgTransitionService.html",[70,0.973,522,2.237]],["body/injectables/NgTransitionService.html",[2,0.294,3,0.294,4,0.252,5,0.734,7,1.144,10,0.472,12,0.706,17,1.33,19,0.362,25,0.675,26,0.02,30,1.934,34,0.435,35,2.188,39,0.892,40,0.733,44,0.273,49,0.488,52,0.011,53,0.011,56,1.104,59,1.321,61,2.855,63,1.248,64,1.492,70,1.286,75,1.203,78,1.573,82,1.144,83,0.755,84,1.034,89,0.706,101,1.352,102,2.517,104,1.826,120,3.231,122,2.005,171,3.034,307,1.934,385,1.843,387,3.484,389,2.479,522,2.5,535,6.137,546,2.934,547,3.51,549,2.208,550,2.479,595,2.479,886,3.819,888,5.56,896,2.479,897,2.934,898,4.231,899,4.231,900,2.892,901,4.231,902,2.892,903,3.628,904,4.231,905,2.892,906,4.231,907,4.231,908,4.205,909,4.231,910,4.231,911,2.479,912,2.892,913,2.892,914,2.892,915,2.892,916,2.892,917,2.892,918,4.231,919,2.892,920,2.892,921,2.892,922,2.892,923,2.892,924,2.892,925,2.892,926,2.892,927,4.231,928,4.231,929,4.231,930,4.231,931,2.892,932,2.892,933,2.892,934,2.892,935,2.892,936,2.892,937,2.892,938,2.892,939,2.892,940,2.892,941,2.892,942,2.892,943,2.892,944,2.892,945,2.892,946,2.892,947,4.231,948,2.892,949,2.892,950,2.892,951,4.231]],["title/interfaces/StateCSSMap.html",[0,0.204,419,1.73]],["body/interfaces/StateCSSMap.html",[0,0.334,2,0.518,3,0.518,4,0.444,5,0.824,7,1.672,10,0.48,12,1.628,19,0.636,26,0.018,33,3.066,34,1.002,35,1.945,37,2.625,38,3.407,39,0.907,44,0.48,45,3.528,49,1.124,52,0.016,53,0.016,65,2.078,66,1.968,108,1.521,118,3.885,137,3.243,185,2.625,419,2.826,438,3.191,952,4.289,953,5.088,954,3.885,955,5.088,956,5.088]],["title/interfaces/StateCSSMapper.html",[0,0.204,41,2.237]],["body/interfaces/StateCSSMapper.html",[0,0.295,2,0.424,3,0.424,4,0.364,5,0.556,7,1.809,10,0.394,11,2.151,14,1.474,19,0.521,20,2.227,21,3.127,24,2.121,25,1.028,26,0.02,27,4.165,28,3.223,30,1.905,33,3.096,34,1.052,39,1.224,41,3.223,42,2.151,44,0.394,45,2.891,49,0.703,51,2.482,52,0.014,53,0.014,77,3.809,83,0.744,101,1.643,108,1.246,185,3.66,208,4.376,419,3.137,952,2.891,957,3.575,958,5.529,959,4.677,960,4.17]],["title/injectables/StateCssMapperService.html",[70,0.973,421,1.954]],["body/injectables/StateCssMapperService.html",[2,0.328,3,0.328,4,0.281,5,0.771,7,1.902,10,0.502,19,0.403,21,1.563,25,0.848,26,0.02,31,1.821,33,3.162,34,1.022,38,3.19,39,1.091,40,0.665,41,3.143,42,2.987,43,2.461,44,0.304,45,3.172,49,0.772,52,0.012,53,0.012,56,0.711,66,2.583,70,1.367,74,2.916,75,1.3,77,3.753,78,1.488,82,1.438,83,0.949,84,1.299,89,0.787,101,1.237,104,2.499,108,2.03,149,3.493,174,2.52,185,2.744,205,3.172,208,2.054,250,2.703,252,2.218,288,1.775,357,1.473,385,2.054,419,3.242,421,2.36,438,1.663,952,4.015,958,2.763,959,3.923,961,2.763,962,4.575,963,4.575,964,3.223,965,5.79,966,3.223,967,4.575,968,4.575,969,3.223,970,3.223,971,3.223,972,3.923,973,3.223,974,3.223,975,4.575,976,3.223,977,3.223,978,3.223,979,3.223,980,3.223,981,3.223]],["title/coverage.html",[982,4.387]],["body/coverage.html",[0,0.381,1,1.192,4,0.214,5,0.984,6,3.175,7,1.67,8,2.502,9,2.107,12,1.578,15,1.549,16,1.405,18,1.305,24,0.735,25,0.392,26,0.019,33,2.487,34,0.764,41,1.452,42,1.933,52,0.01,53,0.01,54,1.567,55,2.107,61,1.061,62,1.061,63,1.617,65,1.004,70,1.54,71,1.268,72,1.452,73,2.107,90,1.704,107,2.861,127,1.192,128,2.107,129,1.268,130,2.861,133,1.704,134,2.732,135,2.107,136,1.877,137,3.238,143,1.192,144,2.973,145,2.107,146,1.268,148,1.617,165,1.354,197,1.877,209,1.268,210,1.933,222,1.452,223,2.621,224,2.389,240,1.354,264,1.704,268,2.861,270,1.567,282,2.861,309,2.107,314,2.107,329,2.107,402,2.107,404,1.704,405,3.213,406,1.877,407,2.107,408,1.268,409,1.268,419,1.123,421,1.268,436,2.343,438,1.268,467,1.704,468,2.107,469,1.877,470,2.107,471,1.192,472,1.617,473,1.452,484,2.214,485,2.621,490,3.013,491,2.107,503,2.389,520,1.452,522,1.452,524,1.452,525,1.452,547,1.567,552,1.704,600,2.107,610,1.567,611,2.107,622,2.107,627,1.704,629,2.107,634,2.107,647,1.567,648,2.732,649,1.877,650,2.107,661,1.452,662,2.107,671,1.354,676,1.567,755,1.877,811,2.107,816,2.107,820,1.567,821,2.107,826,2.107,832,1.567,834,1.704,858,3.149,886,2.598,887,2.107,896,2.107,952,3.149,957,2.107,961,2.107,982,2.107,983,1.877,984,2.458,985,7.1,986,6.928,987,2.107,988,4.4,989,2.458,990,5.469,991,5.469,992,5.763,993,5.763,994,2.458,995,2.458,996,2.458,997,2.458,998,2.458,999,2.107,1000,2.458,1001,2.458,1002,2.458,1003,2.458,1004,2.458,1005,3.747,1006,2.107,1007,2.458,1008,2.458,1009,2.107,1010,3.213,1011,2.107,1012,2.107,1013,2.458,1014,2.107,1015,3.747,1016,3.747,1017,3.747,1018,3.747,1019,2.107,1020,2.458,1021,2.458,1022,2.458,1023,2.458]],["title/dependencies.html",[232,2.682,1024,3.188]],["body/dependencies.html",[18,1.346,26,0.02,52,0.016,53,0.016,59,2.393,89,1.279,232,3.094,306,3.247,356,3.998,854,4.49,1025,7.464,1026,5.236,1027,5.236,1028,5.236,1029,6.293,1030,5.236,1031,5.236,1032,5.236,1033,5.236,1034,5.236,1035,5.236,1036,5.236]],["title/miscellaneous/enumerations.html",[1037,1.645,1038,3.893]],["body/miscellaneous/enumerations.html",[5,0.824,7,1.375,12,1.511,14,1.375,19,0.636,26,0.018,35,1.6,51,2.525,52,0.016,53,0.016,88,2.854,131,3.528,497,3.407,500,3.654,547,3.942,549,4.722,598,4.722,886,4.289,908,3.885,911,5.303,1037,2.625,1038,4.363,1039,6.185,1040,6.185,1041,6.185,1042,5.088,1043,5.088,1044,5.088,1045,5.088,1046,4.363,1047,5.088,1048,4.363]],["title/miscellaneous/functions.html",[24,1.357,1037,1.645]],["body/miscellaneous/functions.html",[5,0.732,10,0.518,12,1.342,19,0.687,24,1.935,25,0.875,26,0.018,35,1.727,52,0.017,53,0.017,82,1.484,83,0.979,84,1.342,186,4.193,315,2.37,500,3.244,603,4.388,858,3.808,859,4.193,882,4.709,1014,5.551,1037,2.833,1049,4.709]],["title/index.html",[19,0.399,116,1.883,1050,2.734]],["body/index.html",[12,1.146,15,1.53,16,1.651,17,1.475,18,1.731,24,1.402,26,0.015,31,1.475,36,2.99,52,0.015,53,0.015,95,2.99,116,2.771,138,2.584,147,2.584,148,2.025,168,3.582,223,2.42,248,4.022,266,3.582,300,3.582,301,4.022,315,2.025,318,4.295,410,4.022,497,2.584,546,4.079,695,3.253,903,5.777,983,4.491,1051,4.691,1052,4.691,1053,5.882,1054,4.691,1055,4.691,1056,4.022,1057,6.426,1058,4.691,1059,4.022,1060,4.022,1061,4.022,1062,4.022,1063,4.691,1064,4.022,1065,5.882,1066,5.882,1067,4.691,1068,4.691,1069,4.691,1070,5.882,1071,4.691,1072,5.882,1073,4.691,1074,4.691,1075,4.691,1076,5.882,1077,4.691,1078,4.691,1079,4.691]],["title/license.html",[116,1.883,1050,2.734,1080,2.734]],["body/license.html",[4,0.398,14,1.562,17,1.434,26,0.015,52,0.015,53,0.015,123,3.162,156,4.412,243,2.907,371,3.482,505,3.91,642,4.843,678,3.482,908,3.482,983,3.482,1056,3.91,1060,3.91,1080,3.91,1081,4.56,1082,6.343,1083,4.56,1084,4.56,1085,5.778,1086,4.56,1087,4.56,1088,3.91,1089,4.56,1090,5.778,1091,4.56,1092,6.669,1093,7.293,1094,4.56,1095,5.778,1096,4.56,1097,5.439,1098,4.56,1099,4.56,1100,4.56,1101,4.56,1102,4.56,1103,4.56,1104,4.56,1105,4.56,1106,4.56,1107,4.56,1108,3.91,1109,3.91,1110,5.778,1111,5.778,1112,4.56,1113,4.56,1114,5.778,1115,4.56,1116,4.56,1117,4.56,1118,4.56,1119,3.91,1120,4.56,1121,4.56,1122,4.56,1123,4.56,1124,4.56,1125,4.56,1126,4.56,1127,4.56,1128,4.56,1129,4.56,1130,4.56,1131,4.56,1132,4.56]],["title/modules.html",[230,1.979]],["body/modules.html",[26,0.017,52,0.017,53,0.017,230,2.184,231,3.915,306,3.593,307,3.182,615,3.915,845,3.915,1133,6.964,1134,6.964]],["title/overview.html",[1135,4.387]],["body/overview.html",[0,0.219,16,1.04,17,1.273,26,0.019,34,0.609,44,0.382,52,0.014,53,0.014,70,1.04,71,3.091,146,3.091,165,3.825,230,2.069,231,4.994,232,2.392,233,2.807,234,2.807,235,2.807,236,3.471,237,3.471,238,3.471,239,3.471,240,3.825,241,3.709,242,2.807,243,2.58,409,3.583,421,3.091,520,3.54,522,3.54,524,3.54,525,4.102,615,5.193,616,3.471,617,3.471,618,3.471,619,3.471,661,4.102,671,3.3,845,4.815,846,3.471,847,3.471,848,3.471,849,3.471,1064,3.471,1135,3.471,1136,4.048,1137,4.048,1138,4.048,1139,4.048]],["title/miscellaneous/typealiases.html",[1037,1.645,1140,4.54]],["body/miscellaneous/typealiases.html",[5,0.845,19,0.57,20,2.723,24,1.363,25,1.179,26,0.015,52,0.015,53,0.015,88,2.235,101,1.562,108,1.896,114,5.368,175,2.353,295,4.386,315,2.494,371,4.412,658,4.398,659,3.482,667,3.162,685,4.398,717,4.843,719,3.162,725,4.954,757,3.482,760,3.482,1037,2.353,1059,4.954,1141,4.56,1142,4.56,1143,5.778,1144,4.56,1145,5.778,1146,6.343,1147,4.56,1148,6.669,1149,4.56,1150,5.778,1151,6.343,1152,4.56,1153,4.56,1154,4.56,1155,4.56,1156,5.778,1157,4.56,1158,4.56,1159,4.56]],["title/miscellaneous/variables.html",[988,3.467,1037,1.645]],["body/miscellaneous/variables.html",[5,0.869,6,2.125,7,1.69,8,2.125,11,1.99,12,1.704,13,2.675,14,1.043,15,1.379,19,0.482,25,0.826,26,0.02,30,1.763,34,0.58,35,1.213,51,1.575,52,0.013,53,0.013,56,1.142,57,3.955,65,2.553,67,1.575,70,1.331,87,2.742,88,2.598,90,4.056,104,1.665,115,2.854,134,1.665,144,1.99,222,2.279,223,3.018,224,2.459,225,1.665,262,4.774,270,3.728,436,1.99,472,1.665,485,1.99,490,2.125,500,2.279,503,4.281,603,3.302,608,2.945,612,2.945,627,4.056,648,1.665,694,2.279,834,4.056,858,2.675,859,2.945,883,3.307,884,3.307,885,3.307,987,4.442,988,2.945,999,4.442,1006,4.442,1009,3.307,1010,5.015,1011,3.307,1012,4.442,1019,4.442,1037,3.018,1049,3.307,1160,3.857,1161,3.857,1162,3.857,1163,5.18,1164,3.857,1165,3.857,1166,3.857,1167,3.857,1168,3.857,1169,3.857,1170,3.857,1171,3.857,1172,3.857]],["title/additional-documentation/content-conductor.html",[148,1.188,223,1.42,1173,1.626,1174,1.626]],["body/additional-documentation/content-conductor.html",[14,1.534,15,1.098,16,1.28,17,1.785,19,0.71,21,1.765,22,2.32,24,1.088,26,0.018,28,2.15,31,2.01,32,2.005,39,0.649,49,0.958,52,0.013,53,0.013,56,0.803,66,1.408,70,0.935,75,1.735,78,0.935,82,0.984,83,1.012,84,0.889,88,1.408,138,3.845,139,3.59,140,2.15,143,2.96,146,2.569,148,2.97,150,3.354,152,3.891,153,3.936,154,2.15,155,2.779,161,4.334,164,2.005,165,2.743,168,4.334,171,2.005,174,2.005,175,1.878,177,3.174,178,2.32,182,3.016,183,3.12,184,3.362,196,3.802,198,3.174,199,4.27,204,4.867,205,2.523,223,3.487,230,1.408,240,2.005,247,2.523,250,2.15,253,2.523,283,2.523,288,2.005,290,3.12,297,2.15,321,3.12,330,2.779,387,2.743,502,2.779,688,2.523,694,2.15,722,3.12,897,2.523,1061,3.12,1088,3.12,1175,4.98,1176,3.639,1177,2.779,1178,4.98,1179,3.639,1180,3.639,1181,3.639,1182,3.639,1183,3.639,1184,3.639,1185,3.639,1186,3.639,1187,3.639,1188,3.639,1189,3.639,1190,3.639,1191,3.639,1192,3.639,1193,3.639,1194,3.639,1195,3.639,1196,3.639,1197,3.639,1198,3.639,1199,3.12]],["title/additional-documentation/content-conductor/example.html",[281,1.457,1173,1.883,1174,1.883]],["body/additional-documentation/content-conductor/example.html",[26,0.017,52,0.017,53,0.017,306,3.037,307,2.69,308,3.478]],["title/additional-documentation/dynamic-animations.html",[12,0.673,18,0.707,1173,1.626,1174,1.626]],["body/additional-documentation/dynamic-animations.html",[1,1.361,7,1.936,12,1.829,14,1.565,15,1.336,16,1.61,17,0.882,18,1.652,22,1.789,23,2.143,24,0.839,26,0.017,28,2.905,35,2.129,36,3.135,37,2.801,39,1.08,49,0.698,51,2.008,52,0.011,53,0.015,58,2.143,59,1.282,66,2.239,67,1.69,88,2.239,93,1.658,112,2.87,115,1.546,131,2.87,139,2.007,147,1.546,149,2.143,151,4.014,156,2.143,164,2.28,171,1.546,182,1.891,184,1.546,185,1.448,208,3.135,225,1.786,230,1.085,245,3.16,256,2.143,263,1.946,277,3.42,283,1.946,296,2.143,298,2.406,299,2.406,307,2.768,315,1.786,316,1.448,319,2.28,369,3.135,409,2.537,493,3.755,495,3.764,496,3.16,497,3.337,499,1.789,500,3.799,502,2.143,503,3.46,504,2.406,507,4.145,557,2.143,559,2.406,560,4.654,561,2.406,562,3.549,563,2.406,564,2.406,565,2.406,567,2.406,568,2.406,570,2.406,571,2.406,573,2.143,598,3.16,602,2.143,603,3.135,608,3.755,624,1.789,636,2.406,667,3.764,668,2.143,688,2.87,690,2.406,695,1.946,867,2.406,868,2.143,897,1.946,954,2.143,972,2.406,1046,2.406,1048,2.406,1097,3.549,1108,2.406,1109,2.406,1177,2.143,1200,2.806,1201,4.139,1202,2.806,1203,2.806,1204,2.806,1205,2.806,1206,2.806,1207,2.806,1208,5.789,1209,4.139,1210,2.806,1211,4.139,1212,4.139,1213,2.806,1214,2.806,1215,2.806,1216,2.806,1217,4.139,1218,4.139,1219,2.806,1220,2.806,1221,2.806,1222,2.806,1223,2.806,1224,2.806,1225,2.806,1226,2.806,1227,2.806,1228,2.806,1229,2.806,1230,2.806,1231,2.806,1232,2.806,1233,2.806,1234,2.806,1235,2.806,1236,2.806,1237,2.806,1238,2.806,1239,2.806,1240,2.806,1241,2.806,1242,2.806,1243,2.806,1244,2.806,1245,2.806,1246,2.806,1247,2.406]],["title/additional-documentation/dynamic-animations/example.html",[281,1.457,1173,1.883,1174,1.883]],["body/additional-documentation/dynamic-animations/example.html",[26,0.017,52,0.017,53,0.017,306,3.037,307,2.69,308,3.478]],["title/additional-documentation/dynamic-components.html",[15,0.607,18,0.707,1173,1.626,1174,1.626]],["body/additional-documentation/dynamic-components.html",[0,0.226,14,1.7,15,1.603,16,1.403,17,1.717,18,1.564,24,1.249,25,0.453,26,0.019,30,1.298,31,1.913,32,2.729,34,0.875,38,2.729,39,0.745,49,1.026,52,0.013,53,0.011,56,0.627,65,2.023,70,0.73,74,1.811,75,1.408,83,1.151,88,2.251,108,1.249,121,1.679,147,1.565,151,1.97,154,1.679,174,3.008,182,2.264,184,3.205,230,1.099,249,3.19,257,2.436,261,4.219,265,1.97,281,1.298,288,1.565,297,2.468,302,1.811,315,1.226,319,3.352,330,3.19,342,2.17,369,2.663,387,2.301,471,2.026,472,2.714,493,2.17,495,1.97,499,3.158,507,2.17,517,2.436,624,3.158,647,3.158,651,4.683,653,3.435,655,4.683,658,2.897,661,3.438,664,2.436,665,4.361,666,2.436,667,2.897,668,2.17,669,2.436,670,2.436,671,2.301,673,2.436,676,3.709,677,5.217,678,2.17,679,3.582,680,2.436,681,2.436,682,2.436,683,2.436,684,4.683,685,1.97,686,2.436,687,2.436,688,1.97,693,2.436,694,3.438,719,1.97,721,2.436,726,4.646,753,2.17,759,3.435,812,2.436,814,2.436,827,3.582,832,1.811,868,2.17,897,1.97,954,3.19,1062,2.436,1119,2.436,1177,2.17,1199,2.436,1247,2.436,1248,4.954,1249,2.841,1250,2.841,1251,2.841,1252,2.841,1253,2.841,1254,2.841,1255,2.841,1256,2.841,1257,4.177,1258,2.841,1259,2.841,1260,4.177,1261,2.841,1262,2.841,1263,2.841,1264,5.461,1265,2.841,1266,2.841,1267,4.177,1268,2.841,1269,4.177,1270,2.841,1271,4.177,1272,2.841,1273,2.841,1274,2.841,1275,2.841,1276,2.841,1277,2.841,1278,2.841,1279,2.841,1280,2.841]],["title/additional-documentation/dynamic-components/example.html",[281,1.457,1173,1.883,1174,1.883]],["body/additional-documentation/dynamic-components/example.html",[26,0.017,52,0.017,53,0.017,306,3.037,307,2.69,308,3.478]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["0",{"_index":402,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["0m",{"_index":885,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["10/16",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["14/19",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":1139,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["2.8",{"_index":1068,"title":{},"body":{"index.html":{}}}],["2/3",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1083,"title":{},"body":{"license.html":{}}}],["25",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1064,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3/4",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1138,"title":{},"body":{"overview.html":{}}}],["4/14",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1136,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["500m",{"_index":867,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["6",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["6.1.1",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":1079,"title":{},"body":{"index.html":{}}}],["6.2.2",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1137,"title":{},"body":{"overview.html":{}}}],["73",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["abil",{"_index":897,"title":{},"body":{"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["abov",{"_index":1109,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["abstract",{"_index":255,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["accessor",{"_index":325,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["act",{"_index":57,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":1128,"title":{},"body":{"license.html":{}}}],["actual",{"_index":263,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["ad",{"_index":205,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["add",{"_index":208,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["addit",{"_index":1173,"title":{"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}},"body":{}}],["alias",{"_index":1141,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alllow",{"_index":851,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["allow",{"_index":147,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["amount",{"_index":862,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["analog",{"_index":494,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["and/or",{"_index":1103,"title":{},"body":{"license.html":{}}}],["angular",{"_index":497,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["angular'",{"_index":254,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["angular/anim",{"_index":59,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"dependencies.html":{},"additional-documentation/dynamic-animations.html":{}}}],["angular/common",{"_index":854,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":89,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":12,"title":{"additional-documentation/dynamic-animations.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animation'",{"_index":872,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animation.t",{"_index":1012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animation/leav",{"_index":1011,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationbuild",{"_index":58,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animationbuilder):animationstatemachin",{"_index":69,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{}}}],["animationmetadata",{"_index":111,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["animations(anim",{"_index":582,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.direct",{"_index":631,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animations.directive.t",{"_index":491,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"coverage.html":{}}}],["animations.directive.ts:102",{"_index":529,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:110",{"_index":542,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:111",{"_index":540,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:117",{"_index":527,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:130",{"_index":534,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:134",{"_index":531,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:142",{"_index":526,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:156",{"_index":537,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:169",{"_index":536,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:93",{"_index":539,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:94",{"_index":538,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:95",{"_index":541,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.foreach(anim",{"_index":583,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.module.t",{"_index":620,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animations.servic",{"_index":545,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["animations.service.t",{"_index":634,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["animations.service.ts:30",{"_index":639,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["animations.service.ts:55",{"_index":641,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["animations/anim",{"_index":6,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/default",{"_index":405,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"coverage.html":{}}}],["animations/dynam",{"_index":490,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/leav",{"_index":1009,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/leave/leave.directive.t",{"_index":858,"title":{},"body":{"directives/LeaveDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["animations/leave/leave.directive.ts:22",{"_index":876,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animations/leave/leave.directive.ts:24",{"_index":878,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animations/ng",{"_index":886,"title":{},"body":{"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["animations/st",{"_index":952,"title":{},"body":{"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["animations:[dvkleav",{"_index":554,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationshandl",{"_index":512,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationshandlerconstructor",{"_index":632,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["animationsstatemachin",{"_index":411,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["animationsstatemachineconstructor",{"_index":633,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animationstatemachin",{"_index":1,"title":{"interfaces/AnimationStateMachine.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animationstatemachineconstructor",{"_index":54,"title":{"interfaces/AnimationStateMachineConstructor.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["animationstatemachineconstructortoken",{"_index":90,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationstatemetadata",{"_index":532,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgStateService.html":{}}}],["animationstatemetadata).styl",{"_index":589,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationstatesbuild",{"_index":422,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["animationstatesservic",{"_index":71,"title":{"injectables/AnimationStatesService.html":{}},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"overview.html":{}}}],["animationstatesservice#createanimationstatemachin",{"_index":100,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["animationstatesservice):dynamicanimationshandl",{"_index":614,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{}}}],["animationstylemetadata",{"_index":109,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["animationstylesmap",{"_index":62,"title":{"interfaces/AnimationStylesMap.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"coverage.html":{}}}],["animationtransitionmetadata",{"_index":535,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["animationtransitionmetadata).anim",{"_index":588,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationtransitionsmap",{"_index":61,"title":{"interfaces/AnimationTransitionsMap.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["anoth",{"_index":199,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["appli",{"_index":38,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-components.html":{}}}],["applic",{"_index":1072,"title":{},"body":{"index.html":{}}}],["aris",{"_index":1131,"title":{},"body":{"license.html":{}}}],["around",{"_index":296,"title":{},"body":{"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"additional-documentation/dynamic-animations.html":{}}}],["array",{"_index":171,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["arrow",{"_index":1271,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["assign",{"_index":251,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["associ",{"_index":1094,"title":{},"body":{"license.html":{}}}],["async",{"_index":669,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["attach",{"_index":164,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["attachinputstream",{"_index":704,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachinputstreams(stream",{"_index":716,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachoutputcallback",{"_index":705,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachoutputcallbacks(callback",{"_index":723,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachview",{"_index":157,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachview(contain",{"_index":160,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachview(container:str",{"_index":220,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["attachviews(contain",{"_index":169,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachviews(container:str",{"_index":221,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["author",{"_index":1056,"title":{},"body":{"index.html":{},"license.html":{}}}],["automat",{"_index":636,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["avail",{"_index":1061,"title":{},"body":{"index.html":{},"additional-documentation/content-conductor.html":{}}}],["back",{"_index":1158,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["background",{"_index":567,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["base",{"_index":250,"title":{},"body":{"modules/ContentConductorModule.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["bbdynamiccomponentdirective2}",{"_index":738,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["be",{"_index":118,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/StateCSSMap.html":{}}}],["befor",{"_index":954,"title":{},"body":{"interfaces/StateCSSMap.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["below",{"_index":1220,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["between",{"_index":154,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["bind",{"_index":1235,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["bootstrap",{"_index":235,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["both",{"_index":502,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["bound",{"_index":507,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["brows",{"_index":1134,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":306,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["bug",{"_index":1227,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["build",{"_index":903,"title":{},"body":{"injectables/NgTransitionService.html":{},"index.html":{}}}],["buildanimationtransit",{"_index":898,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["buildanimationtransitions(transit",{"_index":901,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["builder",{"_index":68,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{}}}],["c",{"_index":371,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["call",{"_index":175,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/content-conductor.html":{}}}],["callback",{"_index":726,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["callbacks.model",{"_index":761,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{}}}],["callbacks.model.t",{"_index":1150,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["callbacks/output",{"_index":760,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["callbacks[cb](ev",{"_index":803,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["capabl",{"_index":410,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"index.html":{}}}],["card",{"_index":1215,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["case",{"_index":656,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["caus",{"_index":528,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["ccservic",{"_index":321,"title":{},"body":{"directives/ContentContainerDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["chanc",{"_index":1242,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["chang",{"_index":369,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["charg",{"_index":1089,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1124,"title":{},"body":{"license.html":{}}}],["class",{"_index":34,"title":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["clean",{"_index":173,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{}}}],["cli",{"_index":1076,"title":{},"body":{"index.html":{}}}],["click",{"_index":683,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["close",{"_index":557,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["closeallsubscript",{"_index":706,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["closeallsubscriptions(subscript",{"_index":727,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["closed';th",{"_index":1231,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["closur",{"_index":959,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["cluster_contentconductormodul",{"_index":236,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_declar",{"_index":237,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_export",{"_index":238,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_provid",{"_index":239,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodul",{"_index":616,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_declar",{"_index":617,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_export",{"_index":618,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_provid",{"_index":619,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodul",{"_index":846,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_declar",{"_index":847,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_export",{"_index":848,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_provid",{"_index":849,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["code",{"_index":866,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["collect",{"_index":606,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["color",{"_index":568,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["combin",{"_index":812,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["command",{"_index":1070,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":853,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["compil",{"_index":95,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"index.html":{}}}],["complet",{"_index":955,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["complex",{"_index":1222,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["compmodel",{"_index":742,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["compon",{"_index":15,"title":{"additional-documentation/dynamic-components.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["component'",{"_index":247,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"additional-documentation/content-conductor.html":{}}}],["component.direct",{"_index":855,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["component.directive.t",{"_index":662,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"coverage.html":{}}}],["component.directive.ts:100",{"_index":715,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:107",{"_index":714,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:109",{"_index":713,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:115",{"_index":741,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:142",{"_index":737,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:155",{"_index":734,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:167",{"_index":745,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:186",{"_index":718,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:209",{"_index":724,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:226",{"_index":739,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:240",{"_index":728,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:250",{"_index":743,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:92",{"_index":748,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:93",{"_index":749,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:94",{"_index":750,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentconstructor",{"_index":127,"title":{"interfaces/ComponentConstructor.html":{}},"body":{"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["componentconstructor):str",{"_index":819,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["componentfactoryresolv",{"_index":712,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentmodel",{"_index":751,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentmodel(compmodel",{"_index":764,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentnam",{"_index":481,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["componentref",{"_index":747,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["components.module.t",{"_index":850,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["components/compon",{"_index":128,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"coverage.html":{}}}],["components/default",{"_index":468,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"coverage.html":{}}}],["components/dynam",{"_index":648,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/initi",{"_index":1153,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["components/input",{"_index":1154,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["components/output",{"_index":1157,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["compref",{"_index":701,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["concept",{"_index":1211,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["condent",{"_index":1175,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["condit",{"_index":1108,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["conductor",{"_index":223,"title":{"additional-documentation/content-conductor.html":{}},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["conductor.model",{"_index":226,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["conductor.model.t",{"_index":145,"title":{},"body":{"interfaces/ContentConductor.html":{},"coverage.html":{}}}],["conductor.model.ts:101",{"_index":170,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:22",{"_index":190,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:28",{"_index":172,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:41",{"_index":195,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:56",{"_index":180,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:70",{"_index":207,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:81",{"_index":188,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:91",{"_index":163,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.module.t",{"_index":244,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["conductor.servic",{"_index":269,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{}}}],["conductor.service.t",{"_index":282,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["conductor.service.ts:117",{"_index":350,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:12",{"_index":339,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:128",{"_index":347,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:139",{"_index":346,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:19",{"_index":340,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:20",{"_index":345,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:21",{"_index":341,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:22",{"_index":343,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:23",{"_index":344,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:25",{"_index":353,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:28",{"_index":292,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["conductor.service.ts:33",{"_index":351,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:41",{"_index":294,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["conductor.service.ts:58",{"_index":348,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:76",{"_index":354,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:90",{"_index":349,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:96",{"_index":355,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor/cont",{"_index":144,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conductor/contain",{"_index":135,"title":{},"body":{"interfaces/ContainersMap.html":{},"coverage.html":{}}}],["conductor/content/content.directive.t",{"_index":329,"title":{},"body":{"directives/ContentDirective.html":{},"coverage.html":{}}}],["conductor/content/content.directive.ts:13",{"_index":332,"title":{},"body":{"directives/ContentDirective.html":{}}}],["conductor/default",{"_index":268,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["conductorconstructor",{"_index":280,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{}}}],["conductorservic",{"_index":289,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["configur",{"_index":871,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["conform",{"_index":267,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["connect",{"_index":1132,"title":{},"body":{"license.html":{}}}],["consist",{"_index":1262,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["console.error(`${compmodel.nam",{"_index":768,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["console.error(`${express",{"_index":947,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["console.log('dynam",{"_index":682,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["const",{"_index":387,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constant",{"_index":1245,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["constrain",{"_index":1156,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constraint",{"_index":1209,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["construct",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constructor(animationshandlerconstructor",{"_index":638,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["constructor(build",{"_index":79,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["constructor(conductorconstructor",{"_index":291,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["constructor(containersquerylist",{"_index":338,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["constructor(el",{"_index":417,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["constructor(priv",{"_index":288,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constructor(protect",{"_index":766,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["constructor(rendererfactori",{"_index":964,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["constructor(serializerconstructor",{"_index":828,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["constructor(serializermap",{"_index":476,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["constructor(templateref",{"_index":331,"title":{},"body":{"directives/ContentDirective.html":{}}}],["constructor(vcref",{"_index":320,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["constructor.model",{"_index":276,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{}}}],["constructor.model.t",{"_index":130,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductorConstructor.html":{},"coverage.html":{}}}],["constructor.token",{"_index":271,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{}}}],["constructor.token.t",{"_index":987,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor/compon",{"_index":129,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["constructor/cont",{"_index":224,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consum",{"_index":1204,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["contain",{"_index":139,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["container.direct",{"_index":275,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["container.directive.t",{"_index":314,"title":{},"body":{"directives/ContentContainerDirective.html":{},"coverage.html":{}}}],["container.directive.ts:24",{"_index":324,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["container.directive.ts:29",{"_index":322,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["container.model",{"_index":211,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{}}}],["container.model.t",{"_index":309,"title":{},"body":{"interfaces/ContentContainer.html":{},"coverage.html":{}}}],["container.viewcontain",{"_index":360,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["container/cont",{"_index":210,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["container:str",{"_index":217,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["containernam",{"_index":311,"title":{},"body":{"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{}}}],["containers.reduce((map,contain",{"_index":358,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["containersmap",{"_index":133,"title":{"interfaces/ContainersMap.html":{}},"body":{"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["containersquerylist",{"_index":227,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["containerssub",{"_index":335,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["content",{"_index":148,"title":{"additional-documentation/content-conductor.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["content/content.direct",{"_index":274,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["contentchildren(contentdirect",{"_index":1179,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["contentconductor",{"_index":143,"title":{"interfaces/ContentConductor.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"additional-documentation/content-conductor.html":{}}}],["contentconductorconstructor",{"_index":222,"title":{"interfaces/ContentConductorConstructor.html":{}},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentconductorconstructortoken",{"_index":270,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentconductormodul",{"_index":231,"title":{"modules/ContentConductorModule.html":{}},"body":{"modules/ContentConductorModule.html":{},"modules.html":{},"overview.html":{}}}],["contentconductorservic",{"_index":146,"title":{"injectables/ContentConductorService.html":{}},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentcontain",{"_index":209,"title":{"interfaces/ContentContainer.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["contentcontainerdirect",{"_index":165,"title":{"directives/ContentContainerDirective.html":{}},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentcontainerdirective'",{"_index":201,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["contentdirect",{"_index":240,"title":{"directives/ContentDirective.html":{}},"body":{"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentsquerylist",{"_index":229,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["contentssub",{"_index":336,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["context",{"_index":1269,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["contract",{"_index":1129,"title":{},"body":{"license.html":{}}}],["convert",{"_index":888,"title":{},"body":{"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{}}}],["copi",{"_index":1092,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1082,"title":{},"body":{"license.html":{}}}],["core",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["correctli",{"_index":303,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["coverag",{"_index":982,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":31,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"injectables/StateCssMapperService.html":{},"index.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["create(injector",{"_index":785,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createanimationshandl",{"_index":637,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["createanimationshandler(el",{"_index":640,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["createanimationstatemachin",{"_index":76,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createanimationstatemachine(el",{"_index":85,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["createanimationstatemachine]{@link",{"_index":99,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["createcompon",{"_index":707,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createcomponent(constructor",{"_index":731,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createcontentconductor",{"_index":290,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["createcontentconductor(containersquerylist",{"_index":293,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["createcontentconductor(this.contain",{"_index":1186,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["createcssmapp",{"_index":413,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createcssmapper(map",{"_index":425,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createembeddedview(templ",{"_index":378,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["createinjector",{"_index":708,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createinjector(provid",{"_index":736,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createseri",{"_index":827,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-components.html":{}}}],["createserializer(map",{"_index":831,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["createstatecssmapp",{"_index":962,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["createstatecssmapper(el",{"_index":968,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["createstatecssmapper(this.element,this.cssmap",{"_index":465,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createstatemachin",{"_index":414,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createstatemachine(transit",{"_index":427,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["css",{"_index":33,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["cssmap",{"_index":418,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["cssmapper",{"_index":412,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["cssmapperservic",{"_index":420,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["current",{"_index":36,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"directives/LeaveDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["currentst",{"_index":1230,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["custom",{"_index":265,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["da",{"_index":511,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["damag",{"_index":1125,"title":{},"body":{"license.html":{}}}],["daservic",{"_index":519,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["data",{"_index":651,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-components.html":{}}}],["data.model",{"_index":815,"title":{},"body":{"interfaces/DynamicComponentModel.html":{}}}],["data.model.t",{"_index":650,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"coverage.html":{}}}],["data/dynam",{"_index":649,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["dc",{"_index":699,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["dcsservic",{"_index":1255,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["deal",{"_index":1095,"title":{},"body":{"license.html":{}}}],["dec",{"_index":1047,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declar",{"_index":234,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["decor",{"_index":1202,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["decrement",{"_index":1048,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["default",{"_index":87,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["defaultanimationsstatemachin",{"_index":622,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["defaultcontentconductorservic",{"_index":264,"title":{"classes/DefaultContentConductorService.html":{}},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["defaultdynamicanimationshandlerservic",{"_index":404,"title":{"classes/DefaultDynamicAnimationsHandlerService.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["defaultdynamiccomponentseri",{"_index":467,"title":{"classes/DefaultDynamicComponentSerializer.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["defin",{"_index":39,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["definin",{"_index":1232,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["definit",{"_index":131,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["demo",{"_index":1074,"title":{},"body":{"index.html":{}}}],["depend",{"_index":232,"title":{"dependencies.html":{}},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descend",{"_index":1181,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["describ",{"_index":601,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{}}}],["descript",{"_index":10,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{}}}],["deseri",{"_index":770,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["deserializemap",{"_index":824,"title":{},"body":{"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["deserializemap.get(componentnam",{"_index":488,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["design",{"_index":1259,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["desir",{"_index":624,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["destin",{"_index":203,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["destroy",{"_index":21,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["destroy():void",{"_index":213,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["destroycomp",{"_index":709,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["detach",{"_index":181,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["detachedview",{"_index":399,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["detachview",{"_index":158,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detachview(contain",{"_index":179,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detachviews(contain",{"_index":187,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detail",{"_index":285,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["detect",{"_index":666,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["develop",{"_index":695,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["differ",{"_index":334,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["direct",{"_index":16,"title":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["directive'",{"_index":176,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["display",{"_index":178,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["dispos",{"_index":1276,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["distinct",{"_index":1278,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["distinctuntilchang",{"_index":720,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["distribut",{"_index":1101,"title":{},"body":{"license.html":{}}}],["docs/examples/index.html#/contentconductor",{"_index":287,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["docs/examples/index.html#/dynamicanim",{"_index":577,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["docs/examples/index.html#/dynamiccompon",{"_index":698,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["document",{"_index":983,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":259,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["dsservic",{"_index":672,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["due",{"_index":1240,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["dure",{"_index":1177,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["dvk",{"_index":318,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"index.html":{}}}],["dvkemo",{"_index":1071,"title":{},"body":{"index.html":{}}}],["dvkleav",{"_index":503,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["dvkleavetim",{"_index":1014,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dvkleavetiming(tim",{"_index":882,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{}}}],["dynam",{"_index":18,"title":{"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamicanimationsdirect",{"_index":409,"title":{"directives/DynamicAnimationsDirective.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-animations.html":{}}}],["dynamicanimationshandl",{"_index":408,"title":{"interfaces/DynamicAnimationsHandler.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["dynamicanimationshandlerconstructor",{"_index":610,"title":{"interfaces/DynamicAnimationsHandlerConstructor.html":{}},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["dynamicanimationshandlerconstructortoken",{"_index":627,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamicanimationsmodul",{"_index":615,"title":{"modules/DynamicAnimationsModule.html":{}},"body":{"modules/DynamicAnimationsModule.html":{},"modules.html":{},"overview.html":{}}}],["dynamicanimationsservic",{"_index":520,"title":{"injectables/DynamicAnimationsService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicanimationsservice#createanimationshandl",{"_index":644,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["dynamiccomponentdata",{"_index":647,"title":{"interfaces/DynamicComponentData.html":{}},"body":{"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentdirect",{"_index":661,"title":{"directives/DynamicComponentDirective.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentmodel",{"_index":676,"title":{"interfaces/DynamicComponentModel.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentseri",{"_index":471,"title":{"interfaces/DynamicComponentSerializer.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentserializerconstructor",{"_index":820,"title":{"interfaces/DynamicComponentSerializerConstructor.html":{}},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["dynamiccomponentserializerconstructortoken",{"_index":834,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamiccomponentserializermap",{"_index":473,"title":{"interfaces/DynamicComponentSerializerMap.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"coverage.html":{}}}],["dynamiccomponentserializermap):dynamiccomponentseri",{"_index":823,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["dynamiccomponentserializerservic",{"_index":671,"title":{"injectables/DynamicComponentSerializerService.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentsmap",{"_index":832,"title":{"interfaces/DynamicComponentsMap.html":{}},"body":{"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentsmodul",{"_index":845,"title":{"modules/DynamicComponentsModule.html":{}},"body":{"modules/DynamicComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["e",{"_index":680,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["each",{"_index":119,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{}}}],["element",{"_index":66,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["elementref",{"_index":518,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["emit",{"_index":1277,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["emitt",{"_index":1249,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["empti",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":168,"title":{},"body":{"interfaces/ContentConductor.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["enough",{"_index":1244,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["enter",{"_index":598,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["entir",{"_index":1265,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["entri",{"_index":910,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["enumer",{"_index":1038,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1073,"title":{},"body":{"index.html":{}}}],["even",{"_index":96,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["event",{"_index":1121,"title":{},"body":{"license.html":{}}}],["eventemitt",{"_index":753,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["eventemitter}",{"_index":725,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{}}}],["eventu",{"_index":870,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["exampl",{"_index":281,"title":{"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}},"body":{"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["except",{"_index":1206,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["execut",{"_index":795,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"overview.html":{}}}],["exportas:'dynamiccomp2",{"_index":763,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["expos",{"_index":1203,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["express",{"_index":908,"title":{},"body":{"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["expression.length",{"_index":951,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expression.split(ngtransitionsymbols.eith",{"_index":926,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expression.split(ngtransitionsymbols.to",{"_index":936,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expressions.split(',').foreach(express",{"_index":924,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["extend",{"_index":814,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["fact",{"_index":1241,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["fail",{"_index":643,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["featur",{"_index":1057,"title":{},"body":{"index.html":{}}}],["feed",{"_index":697,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["few",{"_index":1205,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["field",{"_index":1264,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"license.html":{}}}],["find",{"_index":1224,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["finish",{"_index":498,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["fire",{"_index":796,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["first",{"_index":1247,"title":{},"body":{"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["fit",{"_index":1118,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1107,"title":{},"body":{"license.html":{}}}],["fomrindex",{"_index":214,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["for(let",{"_index":396,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["form",{"_index":149,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["format",{"_index":1200,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["forroot",{"_index":260,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["forroot(conductorconstructor",{"_index":278,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["found",{"_index":769,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["free",{"_index":1088,"title":{},"body":{"license.html":{},"additional-documentation/content-conductor.html":{}}}],["fromindex",{"_index":194,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["fromresolvedprovid",{"_index":780,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["fromstat",{"_index":120,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"injectables/NgTransitionService.html":{}}}],["fulli",{"_index":1212,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["function",{"_index":24,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["furnish",{"_index":1106,"title":{},"body":{"license.html":{}}}],["futur",{"_index":1246,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["garbag",{"_index":605,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["gener",{"_index":1078,"title":{},"body":{"index.html":{}}}],["get",{"_index":1050,"title":{"index.html":{},"license.html":{}},"body":{}}],["getcompon",{"_index":474,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getcomponent(componentnam",{"_index":479,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getcssclass",{"_index":963,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getcssclass(st",{"_index":970,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getcssclass(state:str",{"_index":973,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getnam",{"_index":475,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getname(componentconstructor",{"_index":482,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getviewcontain",{"_index":326,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["given",{"_index":77,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["goal",{"_index":1054,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1087,"title":{},"body":{"license.html":{}}}],["green",{"_index":569,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["handl",{"_index":252,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/StateCssMapperService.html":{}}}],["handler",{"_index":612,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"miscellaneous/variables.html":{}}}],["handler.constructor",{"_index":625,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.constructor.t",{"_index":611,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"coverage.html":{}}}],["handler.model",{"_index":437,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.model.t",{"_index":600,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"coverage.html":{}}}],["handler.servic",{"_index":626,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["handler.service.t",{"_index":407,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:16",{"_index":424,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:17",{"_index":423,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:32",{"_index":435,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:36",{"_index":431,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:48",{"_index":433,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:52",{"_index":429,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:60",{"_index":428,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:83",{"_index":426,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.token",{"_index":628,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.token.t",{"_index":1006,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler/default",{"_index":406,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["handler/dynam",{"_index":436,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hard",{"_index":865,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["held",{"_index":29,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["here",{"_index":1062,"title":{},"body":{"index.html":{},"additional-documentation/dynamic-components.html":{}}}],["herebi",{"_index":1086,"title":{},"body":{"license.html":{}}}],["higher",{"_index":1069,"title":{},"body":{"index.html":{}}}],["holder",{"_index":1122,"title":{},"body":{"license.html":{}}}],["hook",{"_index":1248,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["hostbind",{"_index":875,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["hostbinding(\"@dvkleav",{"_index":879,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["html",{"_index":762,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["i=0",{"_index":397,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["identifi",{"_index":197,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentContainer.html":{},"coverage.html":{}}}],["if(!sub.clos",{"_index":809,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(callback",{"_index":797,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(expression.includes(ngtransitionsymbols.dec",{"_index":948,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.eith",{"_index":925,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.ent",{"_index":939,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.inc",{"_index":946,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.leav",{"_index":942,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.to",{"_index":935,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(initialcontain",{"_index":375,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(stream",{"_index":790,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(subscript",{"_index":807,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(this.animationshandl",{"_index":580,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.animationsstatemachin",{"_index":448,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.containerssub",{"_index":379,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(this.contentssub",{"_index":382,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(this.cssmap",{"_index":461,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.cssmapp",{"_index":462,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.isstring(express",{"_index":923,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(this.istransition(anim",{"_index":584,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.myst",{"_index":575,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.st",{"_index":446,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.transit",{"_index":456,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["ifram",{"_index":308,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["ignor",{"_index":949,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["implement",{"_index":225,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["impli",{"_index":1116,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}}}],["inc",{"_index":1045,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["includ",{"_index":1097,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["increment",{"_index":1046,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["individu",{"_index":907,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["init",{"_index":22,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["init(initialcontain",{"_index":189,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["initi",{"_index":32,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["initialcontain",{"_index":191,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["initializecompon",{"_index":710,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initializecomponent(compmodel",{"_index":740,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initializedvalu",{"_index":1263,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["initialst",{"_index":613,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["initialvalu",{"_index":658,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["initvalu",{"_index":746,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initvalues[input",{"_index":788,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["inject",{"_index":70,"title":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["inject(animationstatemachineconstructortoken",{"_index":103,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["inject(contentconductorconstructortoken",{"_index":304,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["inject(dynamicanimationshandlerconstructortoken",{"_index":645,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["inject(dynamiccomponentserializerconstructortoken",{"_index":837,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["injectiontoken('animationstatemachineconstructortoken",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('containersconductorconstructortoken",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dynamicanimationshandlerconstructortoken",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dynamiccomponentserializerconstructortoken",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":732,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["inner",{"_index":117,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["input",{"_index":319,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["input('dvk",{"_index":327,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["inputstream",{"_index":717,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["inputsubscript",{"_index":702,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["insert",{"_index":204,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["insertindex",{"_index":388,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["insid",{"_index":184,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["instal",{"_index":1065,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":694,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["instanti",{"_index":261,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["instead",{"_index":256,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"additional-documentation/dynamic-animations.html":{}}}],["intention",{"_index":689,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/ContentContainer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"interfaces/ContentContainer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["intern",{"_index":691,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["isn't",{"_index":98,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["isstat",{"_index":515,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["isstate(metadata",{"_index":530,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["isstring(express",{"_index":950,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["istransit",{"_index":516,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["istransition(metadata",{"_index":533,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["it'",{"_index":183,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["item",{"_index":1198,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["itself",{"_index":1229,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["js",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":1243,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["key",{"_index":114,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"miscellaneous/typealiases.html":{}}}],["keys.model.t",{"_index":1148,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["kind",{"_index":1115,"title":{},"body":{"license.html":{}}}],["kit",{"_index":1052,"title":{},"body":{"index.html":{}}}],["last",{"_index":186,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{}}}],["later",{"_index":1254,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["leav",{"_index":500,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["leave/leave.direct",{"_index":551,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["leavedirect",{"_index":525,"title":{"directives/LeaveDirective.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"overview.html":{}}}],["leavetim",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":233,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["length",{"_index":394,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["level",{"_index":113,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["liabil",{"_index":1126,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1123,"title":{},"body":{"license.html":{}}}],["librari",{"_index":1053,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1080,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycl",{"_index":663,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["limit",{"_index":156,"title":{},"body":{"interfaces/ContentConductor.html":{},"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["link",{"_index":101,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/typealiases.html":{}}}],["list",{"_index":299,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["liter",{"_index":125,"title":{},"body":{"interfaces/AnimationTransitionsMap.html":{}}}],["locat",{"_index":202,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["long",{"_index":868,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["look",{"_index":972,"title":{},"body":{"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["machin",{"_index":13,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"miscellaneous/variables.html":{}}}],["machine.constructor",{"_index":92,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{}}}],["machine.constructor.t",{"_index":55,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"coverage.html":{}}}],["machine.model",{"_index":60,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["machine.model.t",{"_index":9,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"coverage.html":{}}}],["machine.servic",{"_index":630,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["machine.service.t",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["machine.token",{"_index":91,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{}}}],["machine.token.t",{"_index":999,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["machine/anim",{"_index":8,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["machine/default",{"_index":629,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["made",{"_index":690,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["main",{"_index":492,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["manag",{"_index":1280,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["manual",{"_index":257,"title":{},"body":{"modules/ContentConductorModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["map",{"_index":108,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"injectables/NgStateService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["map(cb",{"_index":800,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["map.model",{"_index":357,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/StateCssMapperService.html":{}}}],["map.model.t",{"_index":137,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{}}}],["map.model.ts:18",{"_index":956,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["map.model.ts:6",{"_index":141,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/DynamicComponentsMap.html":{}}}],["map/contain",{"_index":136,"title":{},"body":{"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["map/dynam",{"_index":484,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["map/stat",{"_index":438,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["map[container.containernam",{"_index":359,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["map[entri",{"_index":980,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["map[nam",{"_index":841,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["map[stat",{"_index":974,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["map[state.nam",{"_index":894,"title":{},"body":{"injectables/NgStateService.html":{}}}],["mapcontain",{"_index":337,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["mapcontainers(contain",{"_index":352,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["mapper",{"_index":46,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["mapper.model",{"_index":43,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/StateCssMapperService.html":{}}}],["mapper.model.t",{"_index":957,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"coverage.html":{}}}],["mapper.servic",{"_index":440,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["mapper.service.t",{"_index":961,"title":{},"body":{"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["mapper.service.ts:11",{"_index":966,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper.service.ts:22",{"_index":971,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper.service.ts:32",{"_index":969,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper/st",{"_index":42,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["mark",{"_index":722,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["match",{"_index":53,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["matter",{"_index":657,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/LeaveDirective.html":{}}}],["member",{"_index":493,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["merchant",{"_index":1117,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1099,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":316,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["method",{"_index":75,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["miscellan",{"_index":1037,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1081,"title":{},"body":{"license.html":{}}}],["model",{"_index":653,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["model.model",{"_index":756,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["model.model.t",{"_index":811,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["model/dynam",{"_index":755,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["modifi",{"_index":1060,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":230,"title":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"modules.html":{}},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["modulewithprovid",{"_index":273,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["moment",{"_index":1217,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["more",{"_index":1221,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["mouseev",{"_index":681,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["move",{"_index":153,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["moveview",{"_index":159,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["moveview(previouscontain",{"_index":192,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["moveviews(previouscontain",{"_index":206,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["multipl",{"_index":155,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["myaniamt",{"_index":558,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mycompon",{"_index":555,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mycssmap",{"_index":572,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mystat",{"_index":556,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["name",{"_index":83,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["name:str",{"_index":142,"title":{},"body":{"interfaces/ContainersMap.html":{}}}],["necessari",{"_index":93,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicComponentData.html":{},"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["need",{"_index":863,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["new",{"_index":65,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["new(...args):ani",{"_index":132,"title":{},"body":{"interfaces/ComponentConstructor.html":{}}}],["new(serializermap",{"_index":822,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["newtransit",{"_index":914,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["newtransitions[fromstate][tost",{"_index":920,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["next",{"_index":23,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/DynamicAnimationsHandler.html":{},"additional-documentation/dynamic-animations.html":{}}}],["nextcontain",{"_index":193,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["nextcontainer:str",{"_index":215,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["nextstat",{"_index":48,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["nextstate(tost",{"_index":430,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["nextstate(tostate:str",{"_index":445,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["ng",{"_index":546,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1178,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["ngmodul",{"_index":272,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["ngondestroy",{"_index":177,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["ngoninit",{"_index":517,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["ngrx",{"_index":1251,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["ngstateservic",{"_index":524,"title":{"injectables/NgStateService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgStateService.html":{},"coverage.html":{},"overview.html":{}}}],["ngtransitionservic",{"_index":522,"title":{"injectables/NgTransitionService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"overview.html":{}}}],["ngtransitionst",{"_index":549,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{}}}],["ngtransitionstates.void",{"_index":595,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.void]:transition.anim",{"_index":945,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.wildcard",{"_index":943,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.wildcard]:transition.anim",{"_index":941,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionsymbol",{"_index":911,"title":{},"body":{"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{}}}],["noninfring",{"_index":1120,"title":{},"body":{"license.html":{}}}],["normal",{"_index":496,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{}}}],["note",{"_index":688,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["noth",{"_index":861,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["notic",{"_index":1110,"title":{},"body":{"license.html":{}}}],["nottypedkey",{"_index":1146,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["now",{"_index":1274,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["npm",{"_index":1066,"title":{},"body":{"index.html":{}}}],["null",{"_index":385,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}}}],["number",{"_index":121,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["number):viewref",{"_index":218,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["number):void",{"_index":216,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["numbercompon",{"_index":1257,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["numer",{"_index":1233,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["object",{"_index":30,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["object.keys(callback",{"_index":799,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["object.keys(initvalues).map",{"_index":786,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["object.keys(map).foreach(entry=>renderer.removeclass(el",{"_index":979,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["object.keys(map).foreach(nam",{"_index":838,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["object.keys(newtransitions).foreach(fromst",{"_index":916,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["object.keys(newtransitions[fromstate]).foreach(tost",{"_index":917,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["object.keys(streams).map(input",{"_index":792,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["observ",{"_index":719,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["observable}",{"_index":789,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["obtain",{"_index":1091,"title":{},"body":{"license.html":{}}}],["occur",{"_index":124,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["offer",{"_index":1063,"title":{},"body":{"index.html":{}}}],["old",{"_index":953,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["ommit",{"_index":167,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["on",{"_index":198,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["onclick",{"_index":679,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["ondestroy",{"_index":510,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["oninit",{"_index":509,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["open",{"_index":573,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["open';th",{"_index":1238,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["oper",{"_index":721,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["option",{"_index":84,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{}}}],["order",{"_index":283,"title":{},"body":{"injectables/ContentConductorService.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["origin",{"_index":562,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["otherwis",{"_index":505,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"license.html":{}}}],["out",{"_index":243,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":759,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["outputcallback",{"_index":685,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["outputsubscript",{"_index":703,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["outsid",{"_index":1225,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["overriden",{"_index":333,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["overview",{"_index":1135,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1024,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1174,"title":{"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}},"body":{}}],["param",{"_index":104,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/variables.html":{}}}],["paramet",{"_index":82,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{}}}],["pars",{"_index":906,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["parsest",{"_index":889,"title":{},"body":{"injectables/NgStateService.html":{}}}],["parsestates(st",{"_index":891,"title":{},"body":{"injectables/NgStateService.html":{}}}],["parsetransitionexpress",{"_index":899,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["parsetransitionexpression(transit",{"_index":904,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["part",{"_index":245,"title":{},"body":{"modules/ContentConductorModule.html":{},"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-animations.html":{}}}],["partial",{"_index":1239,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["particular",{"_index":123,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"injectables/DynamicAnimationsService.html":{},"license.html":{}}}],["pass",{"_index":499,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["permiss",{"_index":1085,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1105,"title":{},"body":{"license.html":{}}}],["person",{"_index":1090,"title":{},"body":{"license.html":{}}}],["piec",{"_index":1199,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["pipe",{"_index":670,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["plan",{"_index":1234,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["play",{"_index":37,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"additional-documentation/dynamic-animations.html":{}}}],["pleas",{"_index":1218,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["point",{"_index":696,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["portion",{"_index":1113,"title":{},"body":{"license.html":{}}}],["potenti",{"_index":730,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["predefin",{"_index":1042,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["preserv",{"_index":1272,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["previouscontain",{"_index":200,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["privat",{"_index":102,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgTransitionService.html":{}}}],["project",{"_index":1077,"title":{},"body":{"index.html":{}}}],["projects/.../anim",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../cont",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dynam",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../initi",{"_index":1142,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../input",{"_index":1144,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../leav",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../leave.directive.t",{"_index":1049,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../ng",{"_index":1039,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../not",{"_index":1147,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../output",{"_index":1149,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../typ",{"_index":1152,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/common/not",{"_index":1155,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/common/typ",{"_index":1159,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/cont",{"_index":134,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/dvk/src/lib/dynam",{"_index":5,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":94,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["properli",{"_index":1275,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["properti",{"_index":20,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentContainer.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/typealiases.html":{}}}],["protect",{"_index":700,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["provid",{"_index":17,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"injectables/NgTransitionService.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["pseudo",{"_index":1010,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":873,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["publish",{"_index":1100,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1119,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-components.html":{}}}],["put",{"_index":228,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"interfaces/DynamicComponentData.html":{}}}],["queri",{"_index":298,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["querylist",{"_index":152,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["read",{"_index":1180,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["readonli",{"_index":313,"title":{},"body":{"interfaces/ContentContainer.html":{}}}],["recogn",{"_index":1207,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["red",{"_index":571,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["refer",{"_index":28,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"directives/ContentContainerDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMapper.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["referenc",{"_index":1176,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["reflectiveinjector",{"_index":733,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["reflectiveinjector.resolve(provid",{"_index":781,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["releas",{"_index":27,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMapper.html":{}}}],["remov",{"_index":185,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["removeal",{"_index":958,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["render",{"_index":975,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.addclass(element,this.getcssclass(state,map",{"_index":978,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.destroy",{"_index":981,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.removeclass(element,this.getcssclass(state,map",{"_index":977,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["rendererfactori",{"_index":967,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["rendererfactory2",{"_index":965,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["report",{"_index":1228,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["repres",{"_index":115,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductorConstructor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicComponentData.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["request",{"_index":735,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["requir",{"_index":300,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"index.html":{}}}],["reset",{"_index":242,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["resolv",{"_index":302,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-components.html":{}}}],["resolvecomponentfactory(constructor",{"_index":784,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["resourc",{"_index":1196,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["respect",{"_index":623,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["restrict",{"_index":1096,"title":{},"body":{"license.html":{}}}],["result",{"_index":52,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["return",{"_index":78,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["reus",{"_index":693,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["rich",{"_index":1058,"title":{},"body":{"index.html":{}}}],["right",{"_index":1098,"title":{},"body":{"license.html":{}}}],["run",{"_index":602,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["runtim",{"_index":621,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["rxj",{"_index":356,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":754,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["safe",{"_index":1266,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["same",{"_index":667,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["scaley(0.0",{"_index":564,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["scaley(1.0",{"_index":561,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["section",{"_index":1219,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["see",{"_index":284,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{}}}],["selector",{"_index":317,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{}}}],["sell",{"_index":1104,"title":{},"body":{"license.html":{}}}],["separ",{"_index":654,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["seri",{"_index":604,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["serial",{"_index":472,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["serializ",{"_index":1260,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["serializednam",{"_index":843,"title":{},"body":{"interfaces/DynamicComponentsMap.html":{}}}],["serializedname:str",{"_index":844,"title":{},"body":{"interfaces/DynamicComponentsMap.html":{}}}],["serializemap",{"_index":825,"title":{},"body":{"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializemap.get(componentconstructor",{"_index":489,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.constructor",{"_index":836,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{}}}],["serializer.constructor.t",{"_index":821,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{},"coverage.html":{}}}],["serializer.model",{"_index":486,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.model.t",{"_index":816,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{},"coverage.html":{}}}],["serializer.model.ts:7",{"_index":817,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["serializer.model.ts:8",{"_index":818,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["serializer.servic",{"_index":856,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["serializer.service.t",{"_index":826,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"coverage.html":{}}}],["serializer.service.ts:20",{"_index":829,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.service.ts:27",{"_index":833,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.t",{"_index":470,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"coverage.html":{}}}],["serializer.token",{"_index":835,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{}}}],["serializer.token.t",{"_index":1019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializer.ts:10",{"_index":477,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.ts:14",{"_index":480,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.ts:19",{"_index":483,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer/default",{"_index":469,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["serializer/dynam",{"_index":485,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializerconstructor",{"_index":830,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializerconstrutor",{"_index":857,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["serializermap",{"_index":478,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializermap.deserializemap.set(nam",{"_index":840,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializermap.serializemap.set(map[nam",{"_index":839,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serialz",{"_index":692,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["serveangular",{"_index":1075,"title":{},"body":{"index.html":{}}}],["server",{"_index":1253,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["servic",{"_index":74,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-components.html":{}}}],["set",{"_index":315,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["setanim",{"_index":415,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["setanimations(anim",{"_index":544,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["setanimations(transit",{"_index":432,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["setcomponentmodel(compmodel",{"_index":752,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setcssmap",{"_index":416,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["setcssmap(map",{"_index":434,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["setinitialvalu",{"_index":711,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setinitialvalues(initvalu",{"_index":744,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setleavetim",{"_index":874,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["setleavetiming(tim",{"_index":877,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["setstate(st",{"_index":543,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["shall",{"_index":1111,"title":{},"body":{"license.html":{}}}],["shape",{"_index":11,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":852,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["simpl",{"_index":1213,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["simpli",{"_index":1236,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["singl",{"_index":196,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["skip",{"_index":506,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["softwar",{"_index":1093,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["specif",{"_index":608,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["specifi",{"_index":182,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["specii",{"_index":501,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["standard",{"_index":1201,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["start",{"_index":116,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"index.html":{}}}],["state",{"_index":7,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state('closed',styl",{"_index":563,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state('open',styl",{"_index":559,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state(state:str",{"_index":578,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["state.servic",{"_index":553,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["state.service.t",{"_index":887,"title":{},"body":{"injectables/NgStateService.html":{},"coverage.html":{}}}],["state.service.ts:10",{"_index":890,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state.service.ts:17",{"_index":892,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state.styl",{"_index":895,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state/ng",{"_index":552,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgStateService.html":{},"coverage.html":{}}}],["state1",{"_index":927,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state1]:transition.anim",{"_index":934,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state2",{"_index":929,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state2]:transition.anim",{"_index":932,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state:str",{"_index":45,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["state:string)=>void",{"_index":960,"title":{},"body":{"interfaces/StateCSSMapper.html":{}}}],["statecssmap",{"_index":419,"title":{"interfaces/StateCSSMap.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["statecssmapp",{"_index":41,"title":{"interfaces/StateCSSMapper.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["statecssmapper)=>str",{"_index":50,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["statecssmapper)=>void",{"_index":47,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["statecssmapperservic",{"_index":421,"title":{"injectables/StateCssMapperService.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{}}}],["stateless",{"_index":1258,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["statemachineconstructor",{"_index":80,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["statement",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["statemod",{"_index":513,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["states.reduce((map,st",{"_index":893,"title":{},"body":{"injectables/NgStateService.html":{}}}],["states.servic",{"_index":439,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["states.service.t",{"_index":73,"title":{},"body":{"injectables/AnimationStatesService.html":{},"coverage.html":{}}}],["states.service.ts:24",{"_index":81,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["states.service.ts:38",{"_index":86,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["states/anim",{"_index":72,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["states[0].trim",{"_index":928,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["states[1].trim",{"_index":930,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["statesservic",{"_index":523,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["static",{"_index":277,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["step",{"_index":504,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["still",{"_index":729,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["store",{"_index":655,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-components.html":{}}}],["stream",{"_index":665,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["streams.model",{"_index":758,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{}}}],["streams.model.t",{"_index":1145,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["streams/input",{"_index":757,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["streams[input",{"_index":793,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["string",{"_index":49,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["string):viewref",{"_index":219,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["string):void",{"_index":212,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["strstate",{"_index":514,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["structur",{"_index":330,"title":{},"body":{"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["stub",{"_index":859,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":67,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["sub.unsubscrib",{"_index":810,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subject",{"_index":678,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"license.html":{},"additional-documentation/dynamic-components.html":{}}}],["sublicens",{"_index":1102,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1226,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["subscribe((c",{"_index":370,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["subscribe((t",{"_index":374,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["subscribe(ev",{"_index":802,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subscribe(valu",{"_index":794,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subscript",{"_index":342,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["subscriptions.foreach(sub",{"_index":808,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["substanti",{"_index":1112,"title":{},"body":{"license.html":{}}}],["such",{"_index":1210,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["suitabl",{"_index":652,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["suppli",{"_index":151,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["support",{"_index":307,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"injectables/NgTransitionService.html":{},"modules.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["svg",{"_index":1133,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1044,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":295,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{},"miscellaneous/typealiases.html":{}}}],["tabl",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":869,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["templat",{"_index":297,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["templateref",{"_index":150,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["test",{"_index":1223,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["text",{"_index":677,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["textclick",{"_index":1267,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["textcompon",{"_index":684,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["textcomponent':textcompon",{"_index":675,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.animationshandl",{"_index":592,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandler.nextstate(ngtransitionstates.void",{"_index":599,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandler.nextstate(this.strst",{"_index":581,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandlerconstructor",{"_index":646,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["this.animationsstatemachin",{"_index":457,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.destroy",{"_index":452,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.init",{"_index":460,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.next",{"_index":449,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationstatesbuild",{"_index":458,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["this.attachinputstreams(compmodel.input",{"_index":776,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.attachoutputcallbacks(compmodel.outputcallback",{"_index":777,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.build",{"_index":106,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["this.ccservic",{"_index":1185,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.closeallsubscriptions(this.inputsubscript",{"_index":805,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.closeallsubscriptions(this.outputsubscript",{"_index":804,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref",{"_index":772,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.changedetectorref.markforcheck",{"_index":779,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.destroy",{"_index":806,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.instance[cb",{"_index":801,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.instance[input",{"_index":787,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.conductor",{"_index":1184,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.attachview('two',vref);detach",{"_index":1193,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.attachviews('two',views);fin",{"_index":1195,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.destroy",{"_index":1197,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.detachview('one',2);attach",{"_index":1192,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.detachviews('one');and",{"_index":1194,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.init('on",{"_index":1188,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.moveview('one','two',3);detach",{"_index":1190,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.moveviews('one','two');th",{"_index":1189,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductorconstructor",{"_index":305,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["this.cont",{"_index":1187,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.contain",{"_index":361,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap",{"_index":365,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].detach(index",{"_index":393,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].insert(view",{"_index":403,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].length",{"_index":400,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[initialcontain",{"_index":377,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].insert",{"_index":398,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].insert(view",{"_index":392,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].length",{"_index":390,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[previouscontainer].detach(fromindex",{"_index":391,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[previouscontainer].length",{"_index":386,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersquerylist",{"_index":368,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersquerylist.toarray",{"_index":362,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub",{"_index":367,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub.clos",{"_index":380,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub.unsubscrib",{"_index":381,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentsquerylist",{"_index":373,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentsquerylist.toarray",{"_index":364,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub",{"_index":372,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub.clos",{"_index":383,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub.unsubscrib",{"_index":384,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.createcompon",{"_index":773,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.createcssmapper(cssmap",{"_index":441,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createcssmapper(map",{"_index":444,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createinjector(compmodel.provid",{"_index":774,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.createstatemachine(this.transit",{"_index":442,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createstatemachine(transit",{"_index":451,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmap",{"_index":454,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.cssmapp",{"_index":450,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.add(this.st",{"_index":466,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.destroy",{"_index":453,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.removeal",{"_index":463,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapperservic",{"_index":464,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["this.currentst",{"_index":1237,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["this.daservice.createanimationshandl",{"_index":593,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.data",{"_index":1268,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["this.dcsservice.createseri",{"_index":1256,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["this.destroycomp",{"_index":771,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.dsservice.createseri",{"_index":674,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.dvkleav",{"_index":590,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.dvkleave.setleavetiming(\"500m",{"_index":591,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.el",{"_index":459,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.element.nativeel",{"_index":594,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.initializecomponent(compmodel",{"_index":765,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.inputsubscript",{"_index":791,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.isst",{"_index":586,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.mapcontainers(this.contain",{"_index":366,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.myst",{"_index":576,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.onclick",{"_index":686,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.outputsubscript",{"_index":798,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.parsetransitionexpression(transit",{"_index":915,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["this.rendererfactory.createrenderer(element,nul",{"_index":976,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["this.resolv",{"_index":783,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.seri",{"_index":673,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.serializer.getcomponent(compmodel.nam",{"_index":767,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.serializerconstructor(serializermap",{"_index":842,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["this.serializermap",{"_index":487,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["this.setinitialvalues(compmodel.initialvalu",{"_index":775,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.stat",{"_index":447,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.statemachineconstructor",{"_index":105,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["this.states.push(anim",{"_index":587,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.statesservice.parsestates(this.st",{"_index":597,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.strstat",{"_index":579,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.styl",{"_index":443,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.templ",{"_index":363,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.templates.map(templ",{"_index":376,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.text$.asobserv",{"_index":687,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.timingparam",{"_index":881,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["this.transervice.buildanimationtransitions(this.transit",{"_index":596,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.transit",{"_index":455,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.transitions.push(anim",{"_index":585,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.vcref",{"_index":328,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["this.vcref.insert(this.compref.hostview",{"_index":778,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.vcref.parentinjector",{"_index":782,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["those",{"_index":249,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["though",{"_index":97,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["through",{"_index":253,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["tie",{"_index":813,"title":{},"body":{"interfaces/DynamicComponentModel.html":{}}}],["time",{"_index":603,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["timingparam",{"_index":880,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["tme321",{"_index":1084,"title":{},"body":{"license.html":{}}}],["togglest",{"_index":574,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["toindex",{"_index":162,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["token",{"_index":262,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":1055,"title":{},"body":{"index.html":{}}}],["top",{"_index":112,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["tort",{"_index":1130,"title":{},"body":{"license.html":{}}}],["tostat",{"_index":122,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/NgTransitionService.html":{}}}],["tostate:str",{"_index":609,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["tostate]:transition.anim",{"_index":938,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["track",{"_index":664,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["transervic",{"_index":521,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["transfer",{"_index":1261,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["transform",{"_index":560,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transit",{"_index":35,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition(\":leav",{"_index":884,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["transition(':enter',animate('200m",{"_index":566,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["transition(':leave',animate('200m",{"_index":570,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition('en",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('openclosed',animate('200m",{"_index":565,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition.expr",{"_index":922,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.servic",{"_index":548,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["transition.service.t",{"_index":896,"title":{},"body":{"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["transition.service.ts:12",{"_index":900,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.service.ts:22",{"_index":902,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.service.ts:41",{"_index":905,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.st",{"_index":550,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["transition.states.t",{"_index":1040,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transition.symbol",{"_index":912,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.symbols.t",{"_index":1041,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transition/ng",{"_index":547,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["transitions.model",{"_index":64,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{}}}],["transitions.model.t",{"_index":107,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"coverage.html":{}}}],["transitions.model.ts:12",{"_index":126,"title":{},"body":{"interfaces/AnimationTransitionsMap.html":{}}}],["transitions.model.ts:22",{"_index":110,"title":{},"body":{"interfaces/AnimationStylesMap.html":{}}}],["transitions.reduce((transmap",{"_index":913,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions/anim",{"_index":63,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["transitions[fromst",{"_index":937,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[ngtransitionstates.void",{"_index":940,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[ngtransitionstates.wildcard",{"_index":944,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[state1",{"_index":931,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[state2",{"_index":933,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["translat",{"_index":1250,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["transmap",{"_index":921,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmap[fromst",{"_index":918,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmap[fromstate][tost",{"_index":919,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmit",{"_index":1252,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["trigger",{"_index":495,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["trigger(\"dvkleav",{"_index":883,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["trigger('dvkleav",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":1182,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["ts",{"_index":508,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{}}}],["twiddl",{"_index":258,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["two",{"_index":1273,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["type",{"_index":25,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["typealias",{"_index":1140,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedkey",{"_index":1151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":301,"title":{},"body":{"injectables/ContentConductorService.html":{},"index.html":{}}}],["uat/dvkimport",{"_index":1067,"title":{},"body":{"index.html":{}}}],["uat/dynamicviewkit",{"_index":1051,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":389,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"injectables/NgTransitionService.html":{}}}],["under",{"_index":864,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["unless",{"_index":1270,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["until",{"_index":1279,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["up",{"_index":174,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["us",{"_index":14,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["usag",{"_index":286,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{}}}],["user",{"_index":248,"title":{},"body":{"modules/ContentConductorModule.html":{},"index.html":{}}}],["usevalu",{"_index":279,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["usual",{"_index":607,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["valid",{"_index":909,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["valu",{"_index":88,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["values.model",{"_index":660,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{}}}],["values.model.t",{"_index":1143,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values/initi",{"_index":659,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{}}}],["variabl",{"_index":988,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vcref",{"_index":323,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["version",{"_index":266,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"index.html":{}}}],["view",{"_index":138,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["viewchildren(contentcontainerdirect",{"_index":1183,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["viewcontain",{"_index":312,"title":{},"body":{"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{}}}],["viewcontainerref",{"_index":140,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["viewref",{"_index":161,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["viewscach",{"_index":395,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["void",{"_index":51,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["vref",{"_index":1191,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["wait",{"_index":860,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["warranti",{"_index":1114,"title":{},"body":{"license.html":{}}}],["way",{"_index":668,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["well",{"_index":1216,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["whether",{"_index":1127,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1059,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["wild",{"_index":1214,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["wildcard",{"_index":1043,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wire",{"_index":635,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"modules/DynamicComponentsModule.html":{}}}],["within",{"_index":246,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["without",{"_index":642,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"license.html":{}}}],["work",{"_index":1208,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["wrapper",{"_index":310,"title":{},"body":{"interfaces/ContentContainer.html":{}}}],["x",{"_index":401,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["ye",{"_index":166,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["zone.j",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":241,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AnimationStateMachine.html":{"url":"interfaces/AnimationStateMachine.html","title":"interface - AnimationStateMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStateMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an animation state machine to be used by a component or\ndirective that wants to provide dynamic animations.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destroy\n                                \n                                \n                                        init\n                                \n                                \n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references held by the object created for \nthe state machine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                    \n                                \n                                \n                                    \n                                        init:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Initialize the state and css class of the state machine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transition the state from the current state to the next state, \nplaying any animations and applying any css classes as defined.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateCSSMapper } from \"../state-css-mapper/state-css-mapper.model\";\n\n/**\n * The shape of an animation state machine to be used by a component or\n * directive that wants to provide dynamic animations.\n * \n */\nexport interface AnimationStateMachine {\n\n  /**\n   * Initialize the state and css class of the state machine.\n   */\n  init: (state:string, mapper?: StateCSSMapper)=>void;\n\n  /**\n   * Transition the state from the current state to the next state, \n   * playing any animations and applying any css classes as defined.\n   */\n  next: (nextState: string, mapper?: StateCSSMapper)=>string;\n\n  /**\n   * Release the references held by the object created for \n   * the state machine.\n   */\n  destroy: ()=>void;\n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationStateMachineConstructor.html":{"url":"interfaces/AnimationStateMachineConstructor.html","title":"interface - AnimationStateMachineConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStateMachineConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.constructor.ts\n        \n\n            \n                Description\n            \n            \n                The shape of a class constructor that can act as the animation state machine.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { AnimationBuilder } from '@angular/animations';\nimport { AnimationStateMachine } from './animation-state-machine.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\n\n/**\n * The shape of a class constructor that can act as the animation state machine.\n */\nexport interface AnimationStateMachineConstructor {\n    new( \n        element: any, \n        transitions: AnimationTransitionsMap,\n        styles: AnimationStylesMap,\n        builder: AnimationBuilder):AnimationStateMachine;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationStatesService.html":{"url":"injectables/AnimationStatesService.html","title":"injectable - AnimationStatesService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AnimationStatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts\n        \n\n            \n                Description\n            \n            \n                This service creates an animation transition \nstate machine with the method \ncreateAnimationStateMachine \nfrom given AnimationTransitionsMap\nand AnimationStylesMap objects.\nThe returned state machine is in the shape of \nAnimationStateMachine.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimationStateMachine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: AnimationBuilder, stateMachineConstructor: AnimationStateMachineConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    AnimationBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateMachineConstructor\n                                                  \n                                                        \n                                                                    AnimationStateMachineConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createAnimationStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateAnimationStateMachine(element: any, transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Create an AnimationStateMachine to apply to an\nelement when the state is transitioned.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to apply the animations to.\n\n                                                        \n                                                \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The AnimationTransitionsMap to play. \n\n                                                        \n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationStylesMap to apply.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { AnimationBuilder } from '@angular/animations';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { AnimationStateMachineConstructorToken } from '../animation-state-machine/animation-state-machine.token';\nimport { AnimationStateMachineConstructor } from '../animation-state-machine/animation-state-machine.constructor';\n\n/*\n * This import is necessary for proper compilation even though\n * the type isn't used in this file.\n */\nimport { AnimationStateMachine } from '../animation-state-machine/animation-state-machine.model';\n\n/**\n * This service creates an animation transition \n * state machine with the method \n * [createAnimationStateMachine]{@link AnimationStatesService#createAnimationStateMachine} \n * from given {@link AnimationTransitionsMap}\n * and {@link AnimationStylesMap} objects.\n * \n * The returned state machine is in the shape of \n * {@link AnimationStateMachine}.\n */\n@Injectable()\nexport class AnimationStatesService {\n\n  constructor(\n    private builder: AnimationBuilder,\n    @Inject(AnimationStateMachineConstructorToken)\n    private stateMachineConstructor: AnimationStateMachineConstructor) {}\n\n  /**\n   * Create an {@link AnimationStateMachine} to apply to an\n   * element when the state is transitioned.\n   * @param element The element to apply the animations to.\n   * @param transitions The AnimationTransitionsMap to play. \n   * @param styles The AnimationStylesMap to apply.\n   */\n  createAnimationStateMachine(\n    element: any, \n    transitions: AnimationTransitionsMap = {},\n    styles: AnimationStylesMap) {\n\n    return new this.stateMachineConstructor(\n      element,\n      transitions,\n      styles,\n      this.builder\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationStylesMap.html":{"url":"interfaces/AnimationStylesMap.html","title":"interface - AnimationStylesMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStylesMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n        \n\n            \n                Description\n            \n            \n                A mapping of state strings to AnimationStyleMetadata\ncreated with the style function. \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [state: string]:    AnimationStyleMetadata\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts:22\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AnimationMetadata, AnimationStyleMetadata } from \"@angular/animations\";\n\n/**\n * A map of states and AnimationMetadata. \n * The top level keys are the strings representing the states\n * a transition starts from.  The inner keys are the strings \n * representing the state being transitioned to.  Each fromState \n * can have an animation defined for any number of toStates \n * to play when that particular transition occurs.\n * \n */\nexport interface AnimationTransitionsMap {\n  [fromState: string]: {\n    [toState: string]: AnimationMetadata | AnimationMetadata[];\n  }\n} \n\n/**\n * A mapping of state strings to AnimationStyleMetadata\n * created with the style function. \n */\nexport interface AnimationStylesMap {\n  [state: string]: AnimationStyleMetadata; \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationTransitionsMap.html":{"url":"interfaces/AnimationTransitionsMap.html","title":"interface - AnimationTransitionsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationTransitionsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of states and AnimationMetadata. \nThe top level keys are the strings representing the states\na transition starts from.  The inner keys are the strings \nrepresenting the state being transitioned to.  Each fromState \ncan have an animation defined for any number of toStates \nto play when that particular transition occurs.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [fromState: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts:12\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AnimationMetadata, AnimationStyleMetadata } from \"@angular/animations\";\n\n/**\n * A map of states and AnimationMetadata. \n * The top level keys are the strings representing the states\n * a transition starts from.  The inner keys are the strings \n * representing the state being transitioned to.  Each fromState \n * can have an animation defined for any number of toStates \n * to play when that particular transition occurs.\n * \n */\nexport interface AnimationTransitionsMap {\n  [fromState: string]: {\n    [toState: string]: AnimationMetadata | AnimationMetadata[];\n  }\n} \n\n/**\n * A mapping of state strings to AnimationStyleMetadata\n * created with the style function. \n */\nexport interface AnimationStylesMap {\n  [state: string]: AnimationStyleMetadata; \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentConstructor.html":{"url":"interfaces/ComponentConstructor.html","title":"interface - ComponentConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/component-constructor/component-constructor.model.ts\n        \n\n            \n                Description\n            \n            \n                Component constructor definition.\n\n            \n\n\n\n\n\n    \n\n\n    \n        export interface ComponentConstructor {\n    new(...args):any;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainersMap.html":{"url":"interfaces/ContainersMap.html","title":"interface - ContainersMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainersMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of string names to view containers.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    ViewContainerRef\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\n\n/**\n * A map of string names to view containers.\n */\nexport interface ContainersMap { \n    [name:string]: ViewContainerRef \n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentConductor.html":{"url":"interfaces/ContentConductor.html","title":"interface - ContentConductor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentConductor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.model.ts\n        \n\n            \n                Description\n            \n            \n                This is the shape of the object returned by the injectable\nContentConductorService that allows content in the\nform of TemplateRefs supplied by a QueryList to\nbe moved between multiple containers. \nThe number of containers and the number of views to move between\nthem is not limited.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    attachView\n                                \n                                \n                                    attachViews\n                                \n                                \n                                    destroy\n                                \n                                \n                                    detachView\n                                \n                                \n                                    detachViews\n                                \n                                \n                                    init\n                                \n                                \n                                    moveView\n                                \n                                \n                                    moveViews\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachView\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachView(container: string, view: ViewRef, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:91\n                            \n                        \n\n\n                \n                    \n                            Attach a ViewRef to a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto attach the ViewRef to.\n\n                                                        \n                                                \n                                                \n                                                        view\n                                                        \n                                                                    ViewRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ViewRef to attach.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index in the container to attach the view.\nIf ommitted the view is attached to the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachViews(container: string, views?: ViewRef[], toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:101\n                            \n                        \n\n\n                \n                    \n                            Attach an array of ViewRefs to a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto attach the ViewRefs array to.\n\n                                                        \n                                                \n                                                \n                                                        views\n                                                        \n                                                                    ViewRef[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The ViewRefs array to attach.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index in the container to attach the views.\nIf ommitted the views are attached to the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:28\n                            \n                        \n\n\n                \n                    \n                            Clean up, should be called by the component or directive's\nngOnDestroy method that is displaying the content. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachView\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachView(container: string, index?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:56\n                            \n                        \n\n\n                \n                    \n                            Detach a ViewRef from a ContentContainerDirective\nspecified by it's index inside the ViewContainerRef\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string name of the ContentContainerDirective\nto remove the ViewRef from.\n\n                                                        \n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the ViewRef to remove. If ommitted the\nlast ViewRef is removed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ViewRef\n\n                            \n                                \n                                    The detached ViewRef.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachViews(container: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:81\n                            \n                        \n\n\n                \n                    \n                            Remove all ViewRefs from a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The name of the ContentContainerDirective \nto remove the ViewRefs from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ViewRef[]\n\n                            \n                                \n                                    An array of the ViewRefs removed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(initialContainer: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:22\n                            \n                        \n\n\n                \n                    \n                            Initialize the content into the container of the given\nstring name.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initialContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the string name of the container\nto create the content initially inside of.  \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveView\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveView(previousContainer: string, nextContainer: string, fromIndex: number, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:41\n                            \n                        \n\n\n                \n                    \n                            Move a single ViewRef identified by it's index \nfrom one ContentContainerDirective to the another.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The source ContentContainerDirective's name\nwhere the ViewRef is currently located.\n\n                                                        \n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The destination ContentContainerDirective's name\nwhere the ViewRef will be moved to.\n\n                                                        \n                                                \n                                                \n                                                        fromIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index inside the nextContainer to insert the ViewRef.\nIf not specified the ViewRef is added to the end of the container.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveViews(previousContainer: string, nextContainer: string, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:70\n                            \n                        \n\n\n                \n                    \n                            Move all of the ViewRefs from one ContentContainerDirective\nto another.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto remove the ViewRef from.\n\n                                                        \n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto add the ViewRef to.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index inside nextContainer to insert\nthe views, if ommitted the views are inserted at the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ViewRef } from '@angular/core';\nimport { ContentContainer } from './content-container/content-container.model';\n\n/**\n * This is the shape of the object returned by the injectable\n * {@link ContentConductorService} that allows content in the\n * form of TemplateRefs supplied by a QueryList to\n * be moved between multiple containers. \n * \n * The number of containers and the number of views to move between\n * them is not limited.\n * \n */\nexport interface ContentConductor {\n\n    /**\n     * Initialize the content into the container of the given\n     * string name.\n     * @param initialContainer the string name of the container\n     * to create the content initially inside of.  \n     */\n    init(initialContainer: string):void;\n\n    /**\n     *  Clean up, should be called by the component or directive's\n     *  ngOnDestroy method that is displaying the content. \n     */\n    destroy():void;\n\n    /**\n     * Move a single ViewRef identified by it's index \n     * from one {@link ContentContainerDirective} to the another.\n     * @param previousContainer The source ContentContainerDirective's name\n     * where the ViewRef is currently located.\n     * @param nextContainer The destination ContentContainerDirective's name\n     * where the ViewRef will be moved to.\n     * @param fomrIndex The index of the ViewRef to move from previousContainer.\n     * @param toIndex The index inside the nextContainer to insert the ViewRef.\n     * If not specified the ViewRef is added to the end of the container.\n     */\n    moveView( \n        previousContainer: string,\n        nextContainer:string, \n        fromIndex: number,\n        toIndex?: number):void;\n\n    /**\n     * Detach a ViewRef from a {@link ContentContainerDirective}\n     * specified by it's index inside the ViewContainerRef\n     * @param container The string name of the ContentContainerDirective\n     * to remove the ViewRef from.\n     * @param index The index of the ViewRef to remove. If ommitted the\n     * last ViewRef is removed.\n     * @returns The detached ViewRef.\n     */\n    detachView(\n        container:string,\n        index?: number):ViewRef;\n\n    /**\n     * Move all of the ViewRefs from one {@link ContentContainerDirective}\n     * to another.\n     * @param previousContainer The ContentContainerDirective \n     * to remove the ViewRef from.\n     * @param nextContainer The ContentContainerDirective \n     * to add the ViewRef to.\n     * @param toIndex The index inside nextContainer to insert\n     * the views, if ommitted the views are inserted at the end.\n     */\n    moveViews(\n        previousContainer: string, \n        nextContainer: string,\n        toIndex?: number):void;\n\n    /**\n     * Remove all ViewRefs from a {@link ContentContainerDirective}.\n     * @param container The name of the ContentContainerDirective \n     * to remove the ViewRefs from.\n     * @returns An array of the ViewRefs removed.\n     */\n    detachViews(container: string):ViewRef[];\n\n    /**\n     * Attach a ViewRef to a {@link ContentContainerDirective}.\n     * @param container The ContentContainerDirective \n     * to attach the ViewRef to.\n     * @param view The ViewRef to attach.\n     * @param toIndex The index in the container to attach the view.\n     * If ommitted the view is attached to the end.\n     */\n    attachView(container:string, view: ViewRef, toIndex?: number):void;\n\n    /**\n     * Attach an array of ViewRefs to a {@link ContentContainerDirective}.\n     * @param container The ContentContainerDirective \n     * to attach the ViewRefs array to.\n     * @param views The ViewRefs array to attach.\n     * @param toIndex The index in the container to attach the views.\n     * If ommitted the views are attached to the end.\n     */\n    attachViews(container:string, views?: ViewRef[], toIndex?: number):void;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentConductorConstructor.html":{"url":"interfaces/ContentConductorConstructor.html","title":"interface - ContentConductorConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentConductorConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.model.ts\n        \n\n            \n                Description\n            \n            \n                A constructor that returns an implementation \nof ContentConductor.  \n\n            \n\n\n\n\n\n    \n\n\n    \n        import { QueryList, TemplateRef } from '@angular/core';\nimport { ContentConductor } from \"../content-conductor.model\";\nimport { ContentContainer } from '../content-container/content-container.model';\n\n/**\n * A constructor that returns an implementation \n * of {@link ContentConductor}.  \n * \n * @param containersQueryList Should be a QueryList \n * of containers that views can be put into.  \n * \n * @param contentsQueryList Should be a QueryList of \n * the TemplateRefs representing the content to \n * display inside the containers.\n */\nexport interface ContentConductorConstructor {\n  new(\n    containersQueryList: QueryList,\n    contentsQueryList : QueryList>\n  ):ContentConductor;\n}\n  \n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentConductorModule.html":{"url":"modules/ContentConductorModule.html","title":"module - ContentConductorModule","body":"\n                   \n\n\n\n\n  Modules\n  ContentConductorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentConductorModule\n\n\n\ncluster_ContentConductorModule_declarations\n\n\n\ncluster_ContentConductorModule_exports\n\n\n\ncluster_ContentConductorModule_providers\n\n\n\n\nContentContainerDirective\n\nContentContainerDirective\n\n\n\nContentConductorModule\n\nContentConductorModule\n\nContentConductorModule -->\n\nContentContainerDirective->ContentConductorModule\n\n\n\n\n\nContentDirective\n\nContentDirective\n\nContentConductorModule -->\n\nContentDirective->ContentConductorModule\n\n\n\n\n\nContentContainerDirective \n\nContentContainerDirective \n\nContentContainerDirective  -->\n\nContentConductorModule->ContentContainerDirective \n\n\n\n\n\nContentDirective \n\nContentDirective \n\nContentDirective  -->\n\nContentConductorModule->ContentDirective \n\n\n\n\n\nContentConductorService\n\nContentConductorService\n\nContentConductorModule -->\n\nContentConductorService->ContentConductorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Content Conductor Module contains the parts necessary to define \ncontainers within a component's view, allow users to provide content\nfor those containers, and move the content between those containers \nbased on string names assigned to each container.\nThis functionality is handled through Angular's own abstractions \ninstead of manually twiddling DOM elements.\nThe forRoot function instantiates the module with a token \nfor the ContentConductorService to actually create the \nContentConductor that provides the functionality and must \nbe called for the provided functionality.  The optional parameter \nis the class that actually provides the functionality for moving\ncontent.  By default the DefaultContentConductorService is\nused but a custom version can be supplied that conforms to the\nContentConductor interface.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContentContainerDirective\n                            \n                            \n                                ContentDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ContentConductorService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ContentContainerDirective\n                            \n                            \n                                    ContentDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { DefaultContentConductorService } from './default-content-conductor/default-content-conductor.service';\nimport { ContentConductorConstructorToken } from './content-conductor-constructor/content-conductor-constructor.token';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ContentConductorService } from './content-conductor.service';\nimport { ContentDirective } from './content/content.directive';\nimport { ContentContainerDirective } from './content-container/content-container.directive';\nimport { ContentConductorConstructor } from './content-conductor-constructor/content-conductor-constructor.model';\n\n/**\n * The Content Conductor Module contains the parts necessary to define \n * containers within a component's view, allow users to provide content\n * for those containers, and move the content between those containers \n * based on string names assigned to each container.\n * \n * This functionality is handled through Angular's own abstractions \n * instead of manually twiddling DOM elements.\n * \n * The forRoot function instantiates the module with a token \n * for the {@link ContentConductorService} to actually create the \n * {@link ContentConductor} that provides the functionality and must \n * be called for the provided functionality.  The optional parameter \n * is the class that actually provides the functionality for moving\n * content.  By default the {@link DefaultContentConductorService} is\n * used but a custom version can be supplied that conforms to the\n * {@link ContentConductor} interface.\n */\n@NgModule({\n  declarations: [\n    ContentDirective, \n    ContentContainerDirective \n  ],\n  exports: [\n    ContentDirective, \n    ContentContainerDirective\n  ],\n  providers: [\n    ContentConductorService\n  ]\n})\nexport class ContentConductorModule {\n  static forRoot(conductorConstructor: ContentConductorConstructor = DefaultContentConductorService): ModuleWithProviders {\n    return {\n      ngModule: ContentConductorModule,\n      providers: [\n        { \n          provide: ContentConductorConstructorToken, \n          useValue: conductorConstructor  \n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentConductorService.html":{"url":"injectables/ContentConductorService.html","title":"injectable - ContentConductorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ContentConductorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.service.ts\n        \n\n            \n                Description\n            \n            \n                This service can be injected into a component in order to\ncreate a ContentConductor.\nSee ContentConductor for the details.\nExample of usage:\n../../docs/examples/index.html#/ContentConductor\n\n            \n\n            \n                Example\n            \n            \n                        \n                            constructor(private conductorService: ContentConductorService) {}\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createContentConductor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(conductorConstructor: ContentConductorConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content-conductor.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conductorConstructor\n                                                  \n                                                        \n                                                                    ContentConductorConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createContentConductor\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateContentConductor(containersQueryList: QueryList, contentsQueryList: QueryList>)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.service.ts:41\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Create a ContentConductor\nfor moving content around a component's template.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        containersQueryList\n                                                        \n                                                                    QueryList\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A query list of ContentContainers\n\n                                                        \n                                                \n                                                \n                                                        contentsQueryList\n                                                        \n                                                                    QueryList>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A query list of TemplateRefs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The ContentConductor\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, QueryList, TemplateRef, Inject } from '@angular/core';\nimport { ContentContainer } from './content-container/content-container.model';\nimport { ContentConductorConstructorToken } from './content-conductor-constructor/content-conductor-constructor.token';\nimport { ContentConductorConstructor } from './content-conductor-constructor/content-conductor-constructor.model';\n\n/*\n * Even though this import is not used it is required for typescript\n * to resolve the return type of the createContentConductor method.\n * If it is removed this service will not compile correctly.\n */\nimport { ContentConductor } from './content-conductor.model';\n\n/**\n * This service can be injected into a component in order to\n * create a {@link ContentConductor}.\n * \n * See {@link ContentConductor} for the details.\n * \n *  \n * Example of usage:\n * ../../docs/examples/index.html#/ContentConductor\n *\n * \n * @example\n * constructor(private conductorService: ContentConductorService) {}\n */\n@Injectable()\nexport class ContentConductorService {\n \n  constructor(\n    @Inject(ContentConductorConstructorToken) \n    private conductorConstructor: ContentConductorConstructor) { }\n\n  /**\n   * Create a {@link ContentConductor}\n   * for moving content around a component's template.\n   * @param containersQueryList A query list of ContentContainers\n   * @param contentsQueryList A query list of TemplateRefs.\n   * @return The ContentConductor\n   */\n  createContentConductor(\n    containersQueryList: QueryList,\n    contentsQueryList : QueryList>) {\n    \n    return  new this.conductorConstructor(\n      containersQueryList,\n      contentsQueryList\n    );\n  }\n  \n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainer.html":{"url":"interfaces/ContentContainer.html","title":"interface - ContentContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-container/content-container.model.ts\n        \n\n            \n                Description\n            \n            \n                A wrapper around a ViewContainerRef\nand a string name identifier.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        containerName\n                                \n                                \n                                        viewContainer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        containerName\n                                    \n                                \n                                \n                                    \n                                        containerName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewContainer\n                                    \n                                \n                                \n                                    \n                                        viewContainer:     ViewContainerRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ViewContainerRef\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\n\n/**\n * A wrapper around a ViewContainerRef\n * and a string name identifier.\n */\nexport interface ContentContainer {\n    readonly viewContainer: ViewContainerRef;\n    readonly containerName: string;\n  }\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentContainerDirective.html":{"url":"directives/ContentContainerDirective.html","title":"directive - ContentContainerDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContentContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive that can be attached to create a container \nwhere content with an attached ContentDirective\ncan be displayed.\nThe string set to the directive name is used to refer to\nthis container by the ContentConductor.\n\n            \n\n            \n                Implements\n            \n            \n                        ContentContainer\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-content-container]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-content-container\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vcRef: ViewContainerRef, ccService: ContentConductorService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vcRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ccService\n                                                  \n                                                        \n                                                                    ContentConductorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-content-container\n                    \n                    \n                        The string used to refer to this container.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewContainer\n                    \n                \n\n                \n                    \n                        getviewContainer()\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:29\n                                \n                            \n                    \n                        \n                                The ViewContainerRef of this directive.\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, Input } from '@angular/core';\nimport { ContentConductorService } from '../content-conductor.service';\nimport { ContentContainer } from './content-container.model';\n\n/**\n * A directive that can be attached to create a container \n * where content with an attached {@link ContentDirective}\n * can be displayed.\n * \n * The string set to the directive name is used to refer to\n * this container by the {@link ContentConductor}.\n * \n * @example\n * \n */\n@Directive({\n  selector: '[dvk-content-container]'\n})\nexport class ContentContainerDirective implements ContentContainer {\n\n  /**\n   * The string used to refer to this container.\n   */\n  @Input('dvk-content-container') containerName: string;\n\n  /**\n   * The ViewContainerRef of this directive.\n   */\n  get viewContainer() { return this.vcRef; }\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private ccService: ContentConductorService) {}\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentDirective.html":{"url":"directives/ContentDirective.html","title":"directive - ContentDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content/content.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive that must be used as a structural \ndirective so that the TemplateRef is injected.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            Some Content To Display In A Container\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-content]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content/content.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * A directive that must be used as a structural \n * directive so that the TemplateRef is injected.\n * \n * @example\n * Some Content To Display In A Container\n */\n@Directive({\n  selector: '[dvk-content]'\n})\nexport class ContentDirective {\n  constructor(private templateRef: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultContentConductorService.html":{"url":"classes/DefaultContentConductorService.html","title":"class - DefaultContentConductorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultContentConductorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of a ContentConductor.\nThis version can be overriden by providing a different class\nfor the ContentConductorConstructorToken token.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ContentConductor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                containers\n                            \n                            \n                                    Private\n                                containersMap\n                            \n                            \n                                    Private\n                                containersSub\n                            \n                            \n                                    Private\n                                contentsSub\n                            \n                            \n                                    Private\n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachView\n                            \n                            \n                                attachViews\n                            \n                            \n                                destroy\n                            \n                            \n                                detachView\n                            \n                            \n                                detachViews\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                mapContainers\n                            \n                            \n                                moveView\n                            \n                            \n                                moveViews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(containersQueryList: QueryList, contentsQueryList: QueryList>)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containersQueryList\n                                                  \n                                                        \n                                                                    QueryList\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentsQueryList\n                                                  \n                                                        \n                                                                    QueryList>\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containers:     T[]\n\n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containersMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containersMap:     ContainersMap\n\n                    \n                \n                    \n                        \n                            Type :     ContainersMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containersSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containersSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            contentsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contentsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templates:     TemplateRef[]\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachView\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachView(container: string, view: ViewRef, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        view\n                                                        \n                                                                    ViewRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachViews(container: string, views: ViewRef[], toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        views\n                                                        \n                                                                    ViewRef[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachView\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachView(container: string, index?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachViews(container: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(initialContainer: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapContainers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapContainers(containers: T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:25\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containers\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveView\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveView(previousContainer: string, nextContainer: string, fromIndex: number, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveViews(previousContainer: string, nextContainer: string, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryList, TemplateRef, ViewRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ContentConductor } from '../content-conductor.model';\nimport { ContentContainer } from '../content-container/content-container.model';\nimport { ContainersMap } from '../containers-map/containers-map.model';\n\n/**\n * The default implementation of a {@link ContentConductor}.\n * This version can be overriden by providing a different class\n * for the {@link ContentConductorConstructorToken} token.\n */\nexport class DefaultContentConductorService implements ContentConductor {\n\n  constructor(\n    private containersQueryList: QueryList,\n    private contentsQueryList : QueryList>\n  ) {}\n    \n  private containers: T[];\n  private templates: TemplateRef[];\n  private containersMap: ContainersMap = {};\n  private containersSub: Subscription;\n  private contentsSub: Subscription;\n\n  private mapContainers(\n    containers: T[]) {\n      return containers.reduce((map,container)=>{\n        map[container.containerName] = container.viewContainer;\n        return map;\n      },{});\n  }\n  \n  init(initialContainer: string) {\n    this.containers = this.containersQueryList.toArray();\n    this.templates = this.contentsQueryList.toArray();\n\n    this.containersMap = this.mapContainers(this.containers);\n    this.containersSub = this.containersQueryList\n      .changes\n      .subscribe((c: T[])=>{\n        this.containers = c;\n        this.mapContainers(this.containers);\n      });\n\n    this.contentsSub = this.contentsQueryList\n      .changes\n      .subscribe((t: TemplateRef[])=>{\n        this.templates = t;\n      });\n\n    if(initialContainer && this.templates) {\n      this.templates.map(template=>\n        this.containersMap[initialContainer]\n          .createEmbeddedView(template));\n    }\n  }\n\n  destroy() {\n    if(this.containersSub && !this.containersSub.closed) { \n      this.containersSub.unsubscribe(); \n    }\n\n    if(this.contentsSub && !this.contentsSub.closed) {\n      this.contentsSub.unsubscribe();\n    }\n\n    this.containersQueryList = null;\n    this.contentsQueryList = null;\n    this.containers = null;\n    this.templates = null;\n    this.containersMap = null;\n    this.containersSub = null;\n    this.contentsSub = null;\n  }\n\n  moveView( \n    previousContainer: string,\n    nextContainer:string, \n    fromIndex: number,\n    toIndex?: number) {\n      fromIndex = fromIndex || this.containersMap[previousContainer].length;\n      const insertIndex = toIndex === null || toIndex === undefined? \n        this.containersMap[nextContainer].length : \n        toIndex;\n\n      const view = this.containersMap[previousContainer].detach(fromIndex);\n      this.containersMap[nextContainer].insert(view, insertIndex);\n  }\n\n  detachView(\n    container:string,\n    index?: number) {\n      return this.containersMap[container].detach(index);\n  }\n\n  moveViews(previousContainer: string, nextContainer: string, toIndex?: number) {\n    const length = this.containersMap[previousContainer].length;\n    const viewsCache: ViewRef[] = [];\n\n    for(let i=0; i{\n      this.containersMap[nextContainer].insert(\n        view,\n        insertIndex);\n      insertIndex++\n    });\n  }\n\n  detachViews(container: string) {\n    const detachedViews = [];\n    const length = this.containersMap[container].length;\n\n    for(let x = 0; x {\n      this.containersMap[container].insert(view, insertIndex);\n      insertIndex++;\n    });\n  }\n\n  attachView(container: string, view: ViewRef, toIndex?: number) {\n    const insertIndex = toIndex === null || toIndex === undefined? \n      this.containersMap[container].length : \n      toIndex;\n\n    this.containersMap[container].insert(view, insertIndex);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultDynamicAnimationsHandlerService.html":{"url":"classes/DefaultDynamicAnimationsHandlerService.html","title":"class - DefaultDynamicAnimationsHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultDynamicAnimationsHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of DynamicAnimationsHandler\nthat provides the DynamicAnimationsDirective with \nanimations capabllities.  \n\n            \n\n\n            \n                Implements\n            \n            \n                        DynamicAnimationsHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animationsStateMachine\n                            \n                            \n                                    Private\n                                cssMapper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCSSMapper\n                            \n                            \n                                    Private\n                                createStateMachine\n                            \n                            \n                                destroy\n                            \n                            \n                                nextState\n                            \n                            \n                                setAnimations\n                            \n                            \n                                setCSSMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: any, state: string, transitions: AnimationTransitionsMap, styles: AnimationStylesMap, cssMap: StateCSSMap, cssMapperService: StateCssMapperService, animationStatesBuilder: AnimationStatesService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        transitions\n                                                  \n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMap\n                                                  \n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMapperService\n                                                  \n                                                        \n                                                                    StateCssMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStatesBuilder\n                                                  \n                                                        \n                                                                    AnimationStatesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            animationsStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animationsStateMachine:     AnimationStateMachine\n\n                    \n                \n                    \n                        \n                            Type :     AnimationStateMachine\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cssMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cssMapper:     StateCSSMapper\n\n                    \n                \n                    \n                        \n                            Type :     StateCSSMapper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createCSSMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createCSSMapper(map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createStateMachine(transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextState\n                            \n                            \n                        \n                    \n                \n                \n                    \nnextState(toState: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toState\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setAnimations\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetAnimations(transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCSSMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCSSMap(map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicAnimationsHandler } from '../dynamic-animations-handler/dynamic-animations-handler.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\nimport { StateCSSMapper } from '../state-css-mapper/state-css-mapper.model';\nimport { AnimationStateMachine } from '../animation-state-machine/animation-state-machine.model';\nimport { AnimationStatesService } from '../animation-states/animation-states.service';\nimport { StateCssMapperService } from '../state-css-mapper/state-css-mapper.service';\n\n/**\n * The default implementation of {@link DynamicAnimationsHandler}\n * that provides the {@link DynamicAnimationsDirective} with \n * animations capabllities.  \n */\nexport class DefaultDynamicAnimationsHandlerService implements DynamicAnimationsHandler {\n\n  private animationsStateMachine: AnimationStateMachine;\n  private cssMapper: StateCSSMapper;\n\n  constructor(\n    private element: any,\n    private state: string,\n    private transitions: AnimationTransitionsMap,\n    private styles: AnimationStylesMap, \n    private cssMap: StateCSSMap,\n    private cssMapperService: StateCssMapperService,\n    private animationStatesBuilder: AnimationStatesService\n  ) {\n    this.createCSSMapper(cssMap);\n    this.createStateMachine(this.transitions, this.styles);\n  }\n  \n  setCSSMap(map: StateCSSMap) {\n    this.createCSSMapper(map);\n  }\n\n  nextState(toState:string) {\n    if(this.state !== toState) {\n      this.state = toState;\n\n      if(this.animationsStateMachine) {\n        this.animationsStateMachine.next(\n          this.state, \n          this.cssMapper);\n      }\n    }\n  }\n\n  setAnimations(transitions: AnimationTransitionsMap, styles: AnimationStylesMap) {\n    this.createStateMachine(transitions, styles);\n  }\n\n  destroy() {\n    this.animationsStateMachine.destroy();\n    this.cssMapper.destroy();\n    this.state = null;\n    this.cssMap = null;\n    this.transitions = null;\n  }\n\n  private createStateMachine(\n    transitions: AnimationTransitionsMap, \n    styles: AnimationStylesMap) {\n    if(this.animationsStateMachine) {\n      this.animationsStateMachine.destroy();\n    }\n\n    if(this.transitions !== transitions || !this.animationsStateMachine) {\n      this.transitions = transitions;\n\n      this.animationsStateMachine = \n        this.animationStatesBuilder\n          .createAnimationStateMachine(\n            this.element,\n            this.transitions,\n            styles);\n\n      this.animationsStateMachine.init(\n        this.state,\n        this.cssMapper);\n    }\n  }\n\n  private createCSSMapper(map: StateCSSMap = {}) {\n    if(this.cssMap !== map || !this.cssMapper) {\n      this.cssMap = map;\n\n      if(this.cssMapper) {\n        this.cssMapper.removeAll();\n        this.cssMapper.destroy();\n      }\n\n      this.cssMapper = this.cssMapperService\n        .createStateCSSMapper(this.element,this.cssMap);\n\n      this.cssMapper.add(this.state);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultDynamicComponentSerializer.html":{"url":"classes/DefaultDynamicComponentSerializer.html","title":"class - DefaultDynamicComponentSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultDynamicComponentSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of DynamicComponentSerializer that\nprovides the serialization methods for the specified \nDynamicComponentSerializerMap. \n\n            \n\n\n            \n                Implements\n            \n            \n                        DynamicComponentSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializerMap: DynamicComponentSerializerMap)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializerMap\n                                                  \n                                                        \n                                                                    DynamicComponentSerializerMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(componentName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:14\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName(componentConstructor: ComponentConstructor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicComponentSerializerMap } from '../dynamic-component-serializer-map/dynamic-component-serializer-map.model';\nimport { DynamicComponentSerializer } from '../dynamic-component-serializer/dynamic-component-serializer.model';\nimport { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * The default implementation of {@link DynamicComponentSerializer} that\n * provides the serialization methods for the specified \n * {@link DynamicComponentSerializerMap}. \n */\nexport class DefaultDynamicComponentSerializer implements DynamicComponentSerializer {\n\n    constructor(private serializerMap: DynamicComponentSerializerMap) {}\n\n    getComponent(componentName: string) {\n        return this.serializerMap\n            .deserializeMap.get(componentName);\n    }\n\n    getName(componentConstructor: ComponentConstructor) {\n        return this.serializerMap\n            .serializeMap.get(componentConstructor);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicAnimationsDirective.html":{"url":"directives/DynamicAnimationsDirective.html","title":"directive - DynamicAnimationsDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicAnimationsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is the main interface to dynamic animations.\nIt should be attached to the element that is to be animated.\nDirections\nIn a component define a string member to represent the state\nof the Animations.  This is analogous to a trigger in normal\nAngular animations.\nThen define the animations as an array of state and transition\nfunction calls from the Angular animations module.\nOptionally specify a map of state names to css class names that\nwill be added and removed from the element as the animations \nstart and finish.\nThen pass those values into this directives state and animations\nInputs.\nIf a :leave animation, or *=>void, is speciied you must also both\nadd the @dvkLeave directive to the element and add dvkLeave to \nthe component as a static animation.  This step is only necessary\nfor a :leave animation. Otherwise it can be skipped.\nThe animations can then be played by changing the string bound to\nthe state Input.\nExample\n`ts\n\\@Component({\n              template: `\n                  \n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-da]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animationsHandler\n                            \n                            \n                                    Private\n                                stateMode\n                            \n                            \n                                    Private\n                                states\n                            \n                            \n                                    Private\n                                strState\n                            \n                            \n                                    Private\n                                transitions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isState\n                            \n                            \n                                    Private\n                                isTransition\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animations\n                            \n                            \n                                cssMap\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, daService: DynamicAnimationsService, tranService: NgTransitionService, statesService: NgStateService, dvkLeave: LeaveDirective)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:142\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        daService\n                                                  \n                                                        \n                                                                    DynamicAnimationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        tranService\n                                                  \n                                                        \n                                                                    NgTransitionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        statesService\n                                                  \n                                                        \n                                                                    NgStateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dvkLeave\n                                                  \n                                                        \n                                                                    LeaveDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        animations\n                    \n                    \n                        The description of the animations to play as an array \nof state and transition Angular animation functions.\n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:117\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cssMap\n                    \n                    \n                        The map of state name to css class names to apply\nas the state changes.\n\n                            \n                            Type:    StateCSSMap\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:142\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                    \n                        Changing the value of state will cause a transition \nand play an animation if one is defined for that state\nchange.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:102\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isState(metaData: AnimationMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaData\n                                                        \n                                                                    AnimationMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationStateMetadata\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isTransition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isTransition(metaData: AnimationMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaData\n                                                        \n                                                                    AnimationMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationTransitionMetadata\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:169\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:156\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            animationsHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animationsHandler:     DynamicAnimationsHandler\n\n                    \n                \n                    \n                        \n                            Type :     DynamicAnimationsHandler\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stateMode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stateMode:     \"string\" | \"number\"\n\n                    \n                \n                    \n                        \n                            Type :     \"string\" | \"number\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'string'\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            states\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        states:     AnimationStateMetadata[]\n\n                    \n                \n                    \n                        \n                            Type :     AnimationStateMetadata[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            strState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        strState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transitions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transitions:     AnimationTransitionMetadata[]\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTransitionMetadata[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:110\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n\n                \n                    \n                        setstate(state: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:102\n                                \n                            \n                    \n                        \n                                Changing the value of state will cause a transition \nand play an animation if one is defined for that state\nchange.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            state\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        animations\n                    \n                \n\n\n                \n                    \n                        setanimations(animations: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:117\n                                \n                            \n                    \n                        \n                                The description of the animations to play as an array \nof state and transition Angular animation functions.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            animations\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, OnInit, OnDestroy, ElementRef, Optional } from '@angular/core';\nimport { AnimationTransitionMetadata, AnimationStateMetadata, AnimationMetadata } from '@angular/animations';\nimport { StateCSSMap } from './state-css-map/state-css-map.model';\nimport { DynamicAnimationsService } from './dynamic-animations.service';\nimport { NgTransitionService } from './ng-transition/ng-transition.service';\nimport { DynamicAnimationsHandler } from './dynamic-animations-handler/dynamic-animations-handler.model';\nimport { NgTransitionStates } from './ng-transition/ng-transition.states';\nimport { LeaveDirective } from './leave/leave.directive';\nimport { NgStateService } from './ng-state/ng-state.service';\n\n/**\n * This directive is the main interface to dynamic animations.\n * It should be attached to the element that is to be animated.\n * \n * ## Directions\n *\n * In a component define a string member to represent the state\n * of the Animations.  This is analogous to a trigger in normal\n * Angular animations.\n * \n * Then define the animations as an array of state and transition\n * function calls from the Angular animations module.\n * \n * Optionally specify a map of state names to css class names that\n * will be added and removed from the element as the animations \n * start and finish.\n * \n * Then pass those values into this directives state and animations\n * Inputs.\n *\n * If a :leave animation, or *=>void, is speciied you must also both\n * add the @dvkLeave directive to the element and add dvkLeave to \n * the component as a static animation.  This step is only necessary\n * for a :leave animation. Otherwise it can be skipped.\n * \n * The animations can then be played by changing the string bound to\n * the state Input.\n * \n * ## Example\n * \n * ```ts\n * \\@Component({\n *              template: `\n *                  \n *              `\n *              animations:[dvkLeave]\n * })\n * ```\n * class MyComponent {\n *              myState: string = 'closed';\n *              myAniamtions = [\n *                  state('open',style({\n *                      'transform': `scaleY(1.0)`,\n *                      'transform-origin': 'top'\n *                  })),\n *                  state('closed',style({\n *                      'transform': `scaleY(0.0)`,\n *                      'transform-origin': 'top'\n *                  })),\n *                  transition('openclosed',animate('200ms')),\n *                  transition(':enter',animate('200ms',\n *                      style({ 'background-color': 'green' })),\n *                  transition(':leave',animate('200ms',\n *                      style({ 'background-color': 'red' }))\n *              ]\n *              myCssMap = {\n *                  'open': 'is-open',\n *                  'closed': 'is-closed'\n *              }\n * \n *              toggleState() {\n *                  if(this.myState === 'closed') { \n *                      this.myState = 'open'; \n *                   }\n *                   else { \n *                       this.myState = 'closed'; \n *                   }\n *              }\n * }\n * ```\n * \n * ../../docs/examples/index.html#/DynamicAnimations\n */\n@Directive({\n  selector: '[dvk-da]'\n})\nexport class DynamicAnimationsDirective implements OnInit, OnDestroy {\n  private stateMode: 'string' | 'number' = 'string';\n  private animationsHandler: DynamicAnimationsHandler;\n  private strState: string;\n\n  /**\n   * Changing the value of state will cause a transition \n   * and play an animation if one is defined for that state\n   * change.\n   */\n  @Input() set state(state:string) { // | number)\n    this.strState = state;\n\n    if(this.animationsHandler) {\n      this.animationsHandler.nextState(this.strState);\n    }\n  }\n\n  private transitions: AnimationTransitionMetadata[];\n  private states: AnimationStateMetadata[];\n\n  /**\n   * The description of the animations to play as an array \n   * of state and transition Angular animation functions.\n   */\n  @Input() set animations(animations: (AnimationTransitionMetadata | AnimationStateMetadata)[]) {\n    this.transitions = [];\n    this.states = [];\n\n    animations.forEach(animation=>{\n      if(this.isTransition(animation)) {\n        this.transitions.push(animation);\n      } else if (this.isState) {\n        this.states.push(animation);\n      }\n    });\n  }\n\n  private isTransition(metaData: AnimationMetadata): metaData is AnimationTransitionMetadata {\n    return !!(metaData as AnimationTransitionMetadata).animation;\n  }\n\n  private isState(metaData: AnimationMetadata): metaData is AnimationStateMetadata {\n    return !!(metaData as AnimationStateMetadata).styles;\n  }\n\n  /**\n   * The map of state name to css class names to apply\n   * as the state changes.\n   */\n  @Input() cssMap: StateCSSMap;\n\n  constructor(\n    private element: ElementRef,\n    private daService: DynamicAnimationsService,\n    private tranService: NgTransitionService,\n    private statesService: NgStateService,\n    @Optional() \n    private dvkLeave: LeaveDirective) {\n      if (this.dvkLeave) {\n        this.dvkLeave.setLeaveTiming(\"500ms\");\n      }\n     }\n\n  ngOnInit() {\n\n    this.animationsHandler = this.daService.createAnimationsHandler(\n      this.element.nativeElement,\n      NgTransitionStates.Void,\n      this.tranService.buildAnimationTransitions(this.transitions),\n      this.statesService.parseStates(this.states),\n      this.cssMap);\n      \n    // enter\n    this.animationsHandler.nextState(this.strState);\n  }\n\n  ngOnDestroy() {\n\n    // leave\n    this.animationsHandler.nextState(NgTransitionStates.Void)\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicAnimationsHandler.html":{"url":"interfaces/DynamicAnimationsHandler.html","title":"interface - DynamicAnimationsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicAnimationsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.model.ts\n        \n\n            \n                Description\n            \n            \n                Describe the interface for providing a component \nor directive with run time specified animations \nbased on a series of string transitions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destroy\n                                \n                                \n                                        nextState\n                                \n                                \n                                        setAnimations\n                                \n                                \n                                        setCSSMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references for garbage collection.  Should \nusually be called in ngOnDestroy.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextState\n                                    \n                                \n                                \n                                    \n                                        nextState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transition to the next state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setAnimations\n                                    \n                                \n                                \n                                    \n                                        setAnimations:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set the animations and states to use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCSSMap\n                                    \n                                \n                                \n                                    \n                                        setCSSMap:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set the map of css classes to apply at specific states.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * Describe the interface for providing a component \n * or directive with run time specified animations \n * based on a series of string transitions.\n * \n */\nexport interface DynamicAnimationsHandler {\n\n    /**\n     * Set the map of css classes to apply at specific states.\n     */\n    setCSSMap: (map: StateCSSMap) =>void;\n\n    /**\n     * Transition to the next state.\n     */\n    nextState: (toState:string) => void;\n\n    /**\n     * Set the animations and states to use.\n     */\n    setAnimations: (transitions: AnimationTransitionsMap, styles: AnimationStylesMap) => void;\n\n    /**\n     * Release the references for garbage collection.  Should \n     * usually be called in ngOnDestroy.\n     */\n    destroy: () => void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicAnimationsHandlerConstructor.html":{"url":"interfaces/DynamicAnimationsHandlerConstructor.html","title":"interface - DynamicAnimationsHandlerConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicAnimationsHandlerConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.constructor.ts\n        \n\n            \n                Description\n            \n            \n                The shape of a constructor for an object that can act as the Animations Handler.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { DynamicAnimationsHandler } from './dynamic-animations-handler.model';\nimport { AnimationStatesService } from '../animation-states/animation-states.service';\nimport { StateCssMapperService } from '../state-css-mapper/state-css-mapper.service';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * The shape of a constructor for an object that can act as the Animations Handler.\n */\nexport interface DynamicAnimationsHandlerConstructor {\n    new( \n        element: any,\n        initialState: string,\n        transitions: AnimationTransitionsMap,\n        styles: AnimationStylesMap,\n        cssMap: StateCSSMap,\n        cssMapperService: StateCssMapperService,\n        animationStatesBuilder: AnimationStatesService):DynamicAnimationsHandler;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicAnimationsModule.html":{"url":"modules/DynamicAnimationsModule.html","title":"module - DynamicAnimationsModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicAnimationsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicAnimationsModule\n\n\n\ncluster_DynamicAnimationsModule_declarations\n\n\n\ncluster_DynamicAnimationsModule_exports\n\n\n\ncluster_DynamicAnimationsModule_providers\n\n\n\n\nDynamicAnimationsDirective\n\nDynamicAnimationsDirective\n\n\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsDirective->DynamicAnimationsModule\n\n\n\n\n\nLeaveDirective\n\nLeaveDirective\n\nDynamicAnimationsModule -->\n\nLeaveDirective->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective  -->\n\nDynamicAnimationsModule->DynamicAnimationsDirective \n\n\n\n\n\nLeaveDirective \n\nLeaveDirective \n\nLeaveDirective  -->\n\nDynamicAnimationsModule->LeaveDirective \n\n\n\n\n\nAnimationStatesService\n\nAnimationStatesService\n\nDynamicAnimationsModule -->\n\nAnimationStatesService->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsService\n\nDynamicAnimationsService\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsService->DynamicAnimationsModule\n\n\n\n\n\nNgStateService\n\nNgStateService\n\nDynamicAnimationsModule -->\n\nNgStateService->DynamicAnimationsModule\n\n\n\n\n\nNgTransitionService\n\nNgTransitionService\n\nDynamicAnimationsModule -->\n\nNgTransitionService->DynamicAnimationsModule\n\n\n\n\n\nStateCssMapperService\n\nStateCssMapperService\n\nDynamicAnimationsModule -->\n\nStateCssMapperService->DynamicAnimationsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Dynamic Animations Module provides support for allowing Angular\nAnimations to be passed in at runtime dynamically instead of \ndescribed statically in the Component's metadata.\nThis functionality is handled through the exported \nDynamicAnimationsDirective.\nThe forRoot method must be called to provide the DynamicAnimationsHandler\nand the AnimationStateMachine that are used by the directive.\nThe implementations are handled by default by the DefaultDynamicAnimationsHandlerService\nand the DefaultAnimationsStateMachine respectively but can be \noverriden with custom implementations if desired.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicAnimationsDirective\n                            \n                            \n                                LeaveDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AnimationStatesService\n                            \n                            \n                                     DynamicAnimationsService\n                            \n                            \n                                     NgStateService\n                            \n                            \n                                     NgTransitionService\n                            \n                            \n                                     StateCssMapperService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicAnimationsDirective\n                            \n                            \n                                    LeaveDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DynamicAnimationsService } from './dynamic-animations.service';\nimport { StateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { AnimationStatesService } from './animation-states/animation-states.service';\nimport { DynamicAnimationsHandlerConstructor } from './dynamic-animations-handler/dynamic-animations-handler.constructor';\nimport { DefaultDynamicAnimationsHandlerService } from './default-dynamic-animations-handler/default-dynamic-animations-handler.service';\nimport { DynamicAnimationsHandlerConstructorToken } from './dynamic-animations-handler/dynamic-animations-handler.token';\nimport { AnimationStateMachineConstructorToken } from './animation-state-machine/animation-state-machine.token';\nimport { DefaultAnimationsStateMachine } from './default-animations-state-machine/default-animations-state-machine.service';\nimport { AnimationStateMachineConstructor } from './animation-state-machine/animation-state-machine.constructor';\nimport { DynamicAnimationsDirective } from './dynamic-animations.directive';\nimport { LeaveDirective } from './leave/leave.directive';\nimport { NgTransitionService } from './ng-transition/ng-transition.service';\nimport { NgStateService } from './ng-state/ng-state.service';\n\n/**\n * The Dynamic Animations Module provides support for allowing Angular\n * Animations to be passed in at runtime dynamically instead of \n * described statically in the Component's metadata.\n * \n * This functionality is handled through the exported \n * {@link DynamicAnimationsDirective}.\n * \n * The forRoot method must be called to provide the {@link DynamicAnimationsHandler}\n * and the {@link AnimationStateMachine} that are used by the directive.\n * \n * The implementations are handled by default by the {@link DefaultDynamicAnimationsHandlerService}\n * and the {@link DefaultAnimationsStateMachine} respectively but can be \n * overriden with custom implementations if desired.\n */\n@NgModule({\n  providers: [\n    DynamicAnimationsService,\n    AnimationStatesService, \n    StateCssMapperService,\n    NgTransitionService,\n    NgStateService\n  ],\n  declarations: [DynamicAnimationsDirective, LeaveDirective],\n  exports: [DynamicAnimationsDirective, LeaveDirective]\n})\nexport class DynamicAnimationsModule {\n  static forRoot(\n    animationsHandlerConstructor: DynamicAnimationsHandlerConstructor = DefaultDynamicAnimationsHandlerService,\n    animationsStateMachineConstructor: AnimationStateMachineConstructor = DefaultAnimationsStateMachine \n  ): ModuleWithProviders {\n    return {\n      ngModule: DynamicAnimationsModule,\n      providers: [\n        { \n          provide: DynamicAnimationsHandlerConstructorToken, \n          useValue: animationsHandlerConstructor \n        },\n        {\n          provide: AnimationStateMachineConstructorToken,\n          useValue: animationsStateMachineConstructor\n        }\n      ]\n    };\n  }  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicAnimationsService.html":{"url":"injectables/DynamicAnimationsService.html","title":"injectable - DynamicAnimationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicAnimationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is used to create a DynamicAnimationsHandler \nwith the DynamicAnimationsService method.\nThe DynamicAnimationsHandler \ncan be used to handle animations based on state transitions\nfor the specified element.\nThe DynamicAnimationsHandler can be wired up to a \nparticular component or directive to automatically handle \nthe animations for the specified element.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimationsHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animationsHandlerConstructor: DynamicAnimationsHandlerConstructor, cssMapperService: StateCssMapperService, animationStatesBuilder: AnimationStatesService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animationsHandlerConstructor\n                                                  \n                                                        \n                                                                    DynamicAnimationsHandlerConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMapperService\n                                                  \n                                                        \n                                                                    StateCssMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStatesBuilder\n                                                  \n                                                        \n                                                                    AnimationStatesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createAnimationsHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateAnimationsHandler(element: any, initialState: string, transitions: AnimationTransitionsMap, styles: AnimationStylesMap, cssMap: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Create a DynamicAnimationsHandler for \nthe given element.\nSee DynamicAnimationsService for example\nusage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to attach the animations\nhandler to. \n\n                                                        \n                                                \n                                                \n                                                        initialState\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The initial state of the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationTransitionsMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationStylesMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        cssMap\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The StateCSSMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { StateCSSMap } from './state-css-map/state-css-map.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from './animation-transitions/animation-transitions.model';\nimport { Injectable, Inject } from '@angular/core';\nimport { DynamicAnimationsHandlerConstructor } from './dynamic-animations-handler/dynamic-animations-handler.constructor';\nimport { DynamicAnimationsHandlerConstructorToken } from './dynamic-animations-handler/dynamic-animations-handler.token';\nimport { StateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { AnimationStatesService } from './animation-states/animation-states.service';\n\n/**\n * This import is required for ts to resolve the return of \n * the createAnimationsHandler function.  Without it compilation\n * will fail.\n */\nimport { DynamicAnimationsHandler } from './dynamic-animations-handler/dynamic-animations-handler.model';\n\n/**\n * This service is used to create a {@link DynamicAnimationsHandler} \n * with the {@link DynamicAnimationsService#createAnimationsHandler} method.\n * \n * The {@link DynamicAnimationsHandler} \n * can be used to handle animations based on state transitions\n * for the specified element.\n * \n * The {@link DynamicAnimationsHandler} can be wired up to a \n * particular component or directive to automatically handle \n * the animations for the specified element.\n *\n */\n@Injectable()\nexport class DynamicAnimationsService {\n\n  constructor(\n    @Inject(DynamicAnimationsHandlerConstructorToken) \n    private animationsHandlerConstructor: DynamicAnimationsHandlerConstructor,\n    private cssMapperService: StateCssMapperService,\n    private animationStatesBuilder: AnimationStatesService,\n  ) { }\n\n  /**\n   * Create a {@link DynamicAnimationsHandler} for \n   * the given element.\n   * \n   * See {@link DynamicAnimationsService} for example\n   * usage.\n   * \n   * @param element The element to attach the animations\n   * handler to. \n   * \n   * @param initialState The initial state of the AnimationStateMachine\n   * @param transitions The AnimationTransitionsMap for the AnimationStateMachine\n   * @param styles The AnimationStylesMap for the AnimationStateMachine\n   * @param cssMap The StateCSSMap for the AnimationStateMachine\n   * \n   */\n  createAnimationsHandler(\n    element: any, \n    initialState: string, \n    transitions: AnimationTransitionsMap, \n    styles: AnimationStylesMap,\n    cssMap: StateCSSMap = {}) {\n\n      return new this.animationsHandlerConstructor(\n        element,\n        initialState,\n        transitions,\n        styles,\n        cssMap,\n        this.cssMapperService,\n        this.animationStatesBuilder);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentData.html":{"url":"interfaces/DynamicComponentData.html","title":"interface - DynamicComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-data/dynamic-component-data.model.ts\n        \n\n            \n                Description\n            \n            \n                Represent the data necessary for a dynamic \ncomponent that is suitable for serialization.\nThis part of the model is separate so that it\ncould be put inside a store or some other \nuse case where serialization matters.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        initialValues\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initialValues\n                                    \n                                \n                                \n                                    \n                                        initialValues:     InitialValues\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InitialValues\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InitialValues } from \"../initial-values/initial-values.model\";\n\n/**\n * Represent the data necessary for a dynamic \n * component that is suitable for serialization.\n * \n * This part of the model is separate so that it\n * could be put inside a store or some other \n * use case where serialization matters.\n */\nexport interface DynamicComponentData {\n    name: string;\n    initialValues?: InitialValues;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicComponentDirective.html":{"url":"directives/DynamicComponentDirective.html","title":"directive - DynamicComponentDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicComponentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts\n        \n\n            \n                Description\n            \n            \n                The Dynamic Component Directive is the interface to using\ndvk dynamic components.\nThe directive lifecycle will track any streams specified by\nthe model and handle change detection in the same way the \nasync pipe does.\nDirections\nProvide a DynamicComponentSerializerService \nfor the directive to use.\nconstructor(private dsService: DynamicComponentSerializerService) { \n     this.serializer = this.dsService.createSerializer({\n         'textComponent':TextComponent\n     });\n}And define a DynamicComponentModel for the DynamicComponentDirective\nto initialize with:\ntext$ = new Subject();\n\nonClick = (e: MouseEvent) => {\n     console.log('Dynamic component was clicked');\n}\n\nmodel: DynamicComponentModel = {\n     name: 'textComponent',\n     initialValues:{ \n         text: 'Initial Text',\n     },\n     outputCallbacks: {\n         onClicked: this.onClick\n     },\n     inputs$: {\n         text: this.text$.asObservable()\n     }\n};And in the template for the Component attach the dynamic \ncomponent directive to the desired element.\n  \n  Note\nThe DynamicComponentSerializer was intentionally made\nto be passed in rather than created internally so that the same\nserialzer could be reused for multiple instances of the \nDynamicComponentDirective.  This allows a developer to create \na single serializer at one point and feed it into all desired \ninstances of DynamicComponentDirectives.\n../../docs/examples/index.html#/DynamicComponents\n\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-dc]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                compRef\n                            \n                            \n                                    Private\n                                inputSubscriptions\n                            \n                            \n                                    Private\n                                outputSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                attachInputStreams\n                            \n                            \n                                    Protected\n                                attachOutputCallbacks\n                            \n                            \n                                    Protected\n                                closeAllSubscriptions\n                            \n                            \n                                    Protected\n                                createComponent\n                            \n                            \n                                    Protected\n                                createInjector\n                            \n                            \n                                    Protected\n                                destroyComp\n                            \n                            \n                                    Protected\n                                initializeComponent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                setInitialValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-dc\n                            \n                            \n                                serializer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vcRef: ViewContainerRef, resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:109\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vcRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-dc\n                    \n                    \n                        The model for this dynamic component to instantiate \nwith.\n\n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:107\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serializer\n                    \n                    \n                        The serialzer this instance of the directive should use\nto resolve Components.\n\n                            \n                            Type:    DynamicComponentSerializer\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:100\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            attachInputStreams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachInputStreams(streams: InputStreams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:186\n                            \n                        \n\n\n                \n                    \n                            Attach {@link Observable} input streams to the \nspecified property of the component.\nThe streams will attach a {@link distinctUntilChanged} operator\nto the {@link Observable} and mark the component for change detection\nwhen new values are passed through the stream. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        streams\n                                                        \n                                                                    InputStreams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of property names to {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            attachOutputCallbacks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachOutputCallbacks(callbacks: OutputCallbacks)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:209\n                            \n                        \n\n\n                \n                    \n                            Attach the {@link EventEmitter}s inside the component to\nthe specified callback.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callbacks\n                                                        \n                                                                    OutputCallbacks\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            closeAllSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeAllSubscriptions(subscriptions: Subscription[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:240\n                            \n                        \n\n\n                \n                    \n                            Close all the subscriptions that are still open.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        subscriptions\n                                                        \n                                                                    Subscription[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The array of subscriptions to \npotentially close.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createComponent(constructor: ComponentConstructor, injector: ReflectiveInjector)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Request a component from angular of the given type.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The component constructor \n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                        \n                                                                    ReflectiveInjector\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The injector to use when creating the component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createInjector(providers: Provider[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:142\n                            \n                        \n\n\n                \n                    \n                            Create an injector from the {@link BBDynamicComponentDirective2}s\n{@link ViewContainerRef}.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        providers\n                                                        \n                                                                    Provider[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                An array of providers for the injector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            destroyComp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyComp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:226\n                            \n                        \n\n\n                \n                    \n                            Clean up all subscriptions and destroy the dynamically\ninstantiated component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initializeComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initializeComponent(compModel: DynamicComponentModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        compModel\n                                                        \n                                                                    DynamicComponentModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:250\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setInitialValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setInitialValues(initValues: InitialValues)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:167\n                            \n                        \n\n\n                \n                    \n                            Set initial values into the component.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initValues\n                                                        \n                                                                    InitialValues\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of property names to values to set.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            compRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        compRef:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputSubscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            outputSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outputSubscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:94\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        componentModel\n                    \n                \n\n\n                \n                    \n                        setcomponentModel(compModel: )\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:107\n                                \n                            \n                    \n                        \n                                The model for this dynamic component to instantiate \nwith.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            compModel\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    Directive,  \n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ReflectiveInjector,\n    ViewContainerRef, \n    EventEmitter,\n    Provider,\n    OnDestroy} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { ComponentConstructor } from './component-constructor/component-constructor.model';\nimport { DynamicComponentModel } from './dynamic-component-model/dynamic-component-model.model';\nimport { DynamicComponentSerializer } from './dynamic-component-serializer/dynamic-component-serializer.model';\nimport { InitialValues } from './initial-values/initial-values.model';\nimport { InputStreams } from './input-streams/input-streams.model';\nimport { OutputCallbacks } from './output-callbacks/output-callbacks.model';\n\n/**\n * The Dynamic Component Directive is the interface to using\n * dvk dynamic components.\n * \n * The directive lifecycle will track any streams specified by\n * the model and handle change detection in the same way the \n * async pipe does.\n *  \n * ### **Directions**\n * \n * Provide a {@link DynamicComponentSerializerService} \n * for the directive to use.\n * \n * ```ts\n * constructor(private dsService: DynamicComponentSerializerService) { \n *     this.serializer = this.dsService.createSerializer({\n *         'textComponent':TextComponent\n *     });\n * }\n * ```\n * \n * And define a {@link DynamicComponentModel} for the DynamicComponentDirective\n * to initialize with:\n * \n * ```ts\n * text$ = new Subject();\n * \n * onClick = (e: MouseEvent) => {\n *     console.log('Dynamic component was clicked');\n * }\n * \n * model: DynamicComponentModel = {\n *     name: 'textComponent',\n *     initialValues:{ \n *         text: 'Initial Text',\n *     },\n *     outputCallbacks: {\n *         onClicked: this.onClick\n *     },\n *     inputs$: {\n *         text: this.text$.asObservable()\n *     }\n * };\n * ```\n * \n * And in the template for the Component attach the dynamic \n * component directive to the desired element.\n * \n * ```html\n *  \n *  \n * ``` \n * \n * ###### **Note**\n * \n * The {@link DynamicComponentSerializer} was intentionally made\n * to be passed in rather than created internally so that the same\n * serialzer could be reused for multiple instances of the \n * DynamicComponentDirective.  This allows a developer to create \n * a single serializer at one point and feed it into all desired \n * instances of DynamicComponentDirectives.\n * \n * ../../docs/examples/index.html#/DynamicComponents\n *\n */\n@Directive({\n  selector: '[dvk-dc]',\n  exportAs:'dynamicComp2',\n})\nexport class DynamicComponentDirective implements OnDestroy {\n    protected compRef: ComponentRef;\n    private inputSubscriptions: Subscription[] = [];\n    private outputSubscriptions: Subscription[] = [];\n\n    /**\n     * The serialzer this instance of the directive should use\n     * to resolve Components.\n     */\n    @Input() serializer: DynamicComponentSerializer;\n\n    /**\n     * The model for this dynamic component to instantiate \n     * with.\n     */\n    @Input('dvk-dc') \n    set componentModel(compModel: DynamicComponentModel) {\n      this.initializeComponent(compModel);\n    }\n\n    constructor(protected vcRef: ViewContainerRef,\n                protected resolver: ComponentFactoryResolver) {\n    }\n\n    protected initializeComponent(compModel: DynamicComponentModel) {\n        const componentConstructor = this.serializer.getComponent(compModel.name);\n\n        if (!componentConstructor) {\n            console.error(`${compModel.name} was not found for deserialization.`)\n          return;\n        }\n\n        this.destroyComp();\n\n        this.compRef = this.createComponent(\n            componentConstructor, \n            this.createInjector(compModel.providers));\n\n        this.setInitialValues(compModel.initialValues);\n        this.attachInputStreams(compModel.inputs$);\n        this.attachOutputCallbacks(compModel.outputCallbacks);\n\n        this.vcRef.insert(this.compRef.hostView);\n        this.compRef.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Create an injector from the {@link BBDynamicComponentDirective2}s\n     * {@link ViewContainerRef}.\n     * @param providers An array of providers for the injector.\n     */\n    protected createInjector(providers: Provider[]) {\n        providers = providers || [];\n        return ReflectiveInjector\n            .fromResolvedProviders(\n            ReflectiveInjector.resolve(providers),\n            this.vcRef.parentInjector);\n    }\n\n    /**\n     * Request a component from angular of the given type.  \n     * @param constructor The component constructor \n     * @param injector The injector to use when creating the component.\n     */\n    protected createComponent(\n        constructor: ComponentConstructor, \n        injector: ReflectiveInjector) {\n        return this.resolver\n            .resolveComponentFactory(constructor)\n            .create(injector);\n    }\n\n    /**\n     * Set initial values into the component.\n     * @param initValues The map of property names to values to set.\n     */\n    protected setInitialValues(initValues: InitialValues) {\n        if (initValues) {\n            Object.keys(initValues).map(\n                input => {\n                    this.compRef.instance[input] = initValues[input];\n                }\n            )\n        }\n    }\n\n    /**\n     * Attach {@link Observable} input streams to the \n     * specified property of the component.\n     * \n     * The streams will attach a {@link distinctUntilChanged} operator\n     * to the {@link Observable} and mark the component for change detection\n     * when new values are passed through the stream. \n     * @param streams The map of property names to {@link Observable}s to attach.\n     */\n    protected attachInputStreams(streams: InputStreams) {\n        if(streams) {\n            this.inputSubscriptions = \n                Object.keys(streams).map(input=>{\n                    return streams[input]\n                        .pipe(\n                            distinctUntilChanged()\n                        )\n                        .subscribe(value=>{\n                            this.compRef.instance[input] = value;\n                            this.compRef.changeDetectorRef.markForCheck();\n                        })\n                });\n        }\n    }\n\n\n    /**\n     * Attach the {@link EventEmitter}s inside the component to\n     * the specified callback.\n     * @param callbacks The map of {@link EventEmitter} property names to\n     * callbacks that will be executed when the {@link EventEmitter} fires.\n     */\n    protected attachOutputCallbacks(callbacks: OutputCallbacks) {\n        if(callbacks) {\n            this.outputSubscriptions = \n                Object.keys(callbacks)\n                    .map(cb=>{\n                        return (this.compRef.instance[cb] as EventEmitter)\n                            .subscribe(event=>{\n                                callbacks[cb](event);\n                            });\n                    });\n        }\n    }\n\n    /**\n     * Clean up all subscriptions and destroy the dynamically\n     * instantiated component.\n     */\n    protected destroyComp() {\n        this.closeAllSubscriptions(this.outputSubscriptions);\n        this.closeAllSubscriptions(this.inputSubscriptions);\n\n        if (this.compRef) {\n            this.compRef.destroy();\n        }\n    }\n\n    /**\n     * Close all the subscriptions that are still open.\n     * @param subscriptions The array of subscriptions to \n     * potentially close.\n     */\n    protected closeAllSubscriptions(subscriptions: Subscription[]) {\n        if(subscriptions){\n            subscriptions.forEach(sub=>{\n                if(!sub.closed) {\n                    sub.unsubscribe();\n                }\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyComp();\n    } \n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentModel.html":{"url":"interfaces/DynamicComponentModel.html","title":"interface - DynamicComponentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-model/dynamic-component-model.model.ts\n        \n\n            \n                Description\n            \n            \n                This model combines DynamicComponentData with \nan optional set of observable streams to tie to inputs\nand callbacks to tie to EventEmitters in the \ndynamically created component.\n\n            \n\n            \n                Extends\n            \n            \n                    DynamicComponentData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inputs$\n                                \n                                \n                                            Optional\n                                        outputCallbacks\n                                \n                                \n                                            Optional\n                                        providers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inputs$\n                                    \n                                \n                                \n                                    \n                                        inputs$:     InputStreams\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputStreams\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputCallbacks\n                                    \n                                \n                                \n                                    \n                                        outputCallbacks:     OutputCallbacks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputCallbacks\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                    \n                                \n                                \n                                    \n                                        providers:     Provider[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Provider[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Provider } from \"@angular/core\";\nimport { InputStreams } from \"../input-streams/input-streams.model\";\nimport { OutputCallbacks } from \"../output-callbacks/output-callbacks.model\";\nimport { DynamicComponentData } from '../dynamic-component-data/dynamic-component-data.model';\n\n/**\n * This model combines {@link DynamicComponentData} with \n * an optional set of observable streams to tie to inputs\n * and callbacks to tie to EventEmitters in the \n * dynamically created component.\n */\nexport interface DynamicComponentModel extends DynamicComponentData {\n    inputs$?: InputStreams;\n    outputCallbacks?: OutputCallbacks;\n    providers?: Provider[],\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializer.html":{"url":"interfaces/DynamicComponentSerializer.html","title":"interface - DynamicComponentSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts\n        \n\n            \n                Description\n            \n            \n                Handle serialization  between a string name and a component constructor.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getComponent\n                                \n                                \n                                    getName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(componentName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts:7\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentConstructor\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName(componentConstructor: ComponentConstructor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * Handle serialization  between a string name and a component constructor.\n */\nexport interface DynamicComponentSerializer {\n    getComponent(componentName: string): ComponentConstructor;\n    getName(componentConstructor: ComponentConstructor):string;\n}\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializerConstructor.html":{"url":"interfaces/DynamicComponentSerializerConstructor.html","title":"interface - DynamicComponentSerializerConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializerConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.constructor.ts\n        \n\n            \n                Description\n            \n            \n                Definition for a component serializer constructor.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { DynamicComponentSerializer } from \"./dynamic-component-serializer.model\";\nimport { DynamicComponentSerializerMap } from \"../dynamic-component-serializer-map/dynamic-component-serializer-map.model\";\n\n/**\n * Definition for a component serializer constructor.\n */\nexport interface DynamicComponentSerializerConstructor {\n    new(serializerMap: DynamicComponentSerializerMap):DynamicComponentSerializer;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializerMap.html":{"url":"interfaces/DynamicComponentSerializerMap.html","title":"interface - DynamicComponentSerializerMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializerMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer-map/dynamic-component-serializer-map.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an object that can handle\nserialization between a string name and a \nComponent class instance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deserializeMap\n                                \n                                \n                                        serializeMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deserializeMap\n                                    \n                                \n                                \n                                    \n                                        deserializeMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serializeMap\n                                    \n                                \n                                \n                                    \n                                        serializeMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * The shape of an object that can handle\n * serialization between a string name and a \n * Component class instance.\n */\nexport interface DynamicComponentSerializerMap {\n    serializeMap: Map;\n    deserializeMap: Map;\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicComponentSerializerService.html":{"url":"injectables/DynamicComponentSerializerService.html","title":"injectable - DynamicComponentSerializerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentSerializerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts\n        \n\n            \n                Description\n            \n            \n                Create a serializer for dynamic components to be resolved from \nstring names.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSerializer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializerConstructor: DynamicComponentSerializerConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializerConstructor\n                                                  \n                                                        \n                                                                    DynamicComponentSerializerConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateSerializer(map: DynamicComponentsMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    DynamicComponentsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { ComponentConstructor } from '../component-constructor/component-constructor.model';\nimport { DynamicComponentsMap } from '../dynamic-component-map/dynamic-component-map.model';\nimport { DynamicComponentSerializerMap } from '../dynamic-component-serializer-map/dynamic-component-serializer-map.model';\nimport { DynamicComponentSerializerConstructorToken } from './dynamic-component-serializer.token';\nimport { DynamicComponentSerializerConstructor } from './dynamic-component-serializer.constructor';\n\n/*\n * This import is necessary for proper compilation even though\n * the type isn't used in this file.\n */\n\nimport { DynamicComponentSerializer } from './dynamic-component-serializer.model';\n\n/**\n * Create a serializer for dynamic components to be resolved from \n * string names.\n */\n@Injectable()\nexport class DynamicComponentSerializerService {\n\n  constructor(\n    @Inject(DynamicComponentSerializerConstructorToken)\n    private serializerConstructor: DynamicComponentSerializerConstructor\n  ) { }\n\n  createSerializer(map: DynamicComponentsMap) {\n    const serializerMap: DynamicComponentSerializerMap = {\n      serializeMap: new Map(),\n      deserializeMap: new Map(),\n    };\n\n    Object.keys(map).forEach(name=>{\n      serializerMap.serializeMap.set(map[name], name);\n      serializerMap.deserializeMap.set(name, map[name]);\n    });\n\n    return new this.serializerConstructor(serializerMap);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentsMap.html":{"url":"interfaces/DynamicComponentsMap.html","title":"interface - DynamicComponentsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of string names to component constructors.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [serializedName: string]:    ComponentConstructor\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ComponentConstructor } from \"../component-constructor/component-constructor.model\";\n\n/**\n * A map of string names to component constructors.\n */\nexport interface DynamicComponentsMap {\n    [serializedName:string]: ComponentConstructor;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicComponentsModule.html":{"url":"modules/DynamicComponentsModule.html","title":"module - DynamicComponentsModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicComponentsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicComponentsModule\n\n\n\ncluster_DynamicComponentsModule_declarations\n\n\n\ncluster_DynamicComponentsModule_exports\n\n\n\ncluster_DynamicComponentsModule_providers\n\n\n\n\nDynamicComponentDirective\n\nDynamicComponentDirective\n\n\n\nDynamicComponentsModule\n\nDynamicComponentsModule\n\nDynamicComponentsModule -->\n\nDynamicComponentDirective->DynamicComponentsModule\n\n\n\n\n\nDynamicComponentDirective \n\nDynamicComponentDirective \n\nDynamicComponentDirective  -->\n\nDynamicComponentsModule->DynamicComponentDirective \n\n\n\n\n\nDynamicComponentSerializerService\n\nDynamicComponentSerializerService\n\nDynamicComponentsModule -->\n\nDynamicComponentSerializerService->DynamicComponentsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-components.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Dynamic Components Module exports the DynamicComponentDirective\nthat can be used to create dynamic components while alllowing them to\nbe wired up with input and output streams similar to components \ninstantiated normally.\nThe forRoot method must be called in order to provide the directive \nwith an implementation of the DynamicComponentSerializer which\nhandles the mapping of string names to actual Component class instances.\nThe default implementation DefaultDynamicComponentSerializer \nmay be overriden with a custom implementation if desired.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicComponentDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicComponentSerializerService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicComponentDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponentDirective } from './dynamic-component.directive';\nimport { DynamicComponentSerializerService } from './dynamic-component-serializer/dynamic-component-serializer.service';\nimport { DynamicComponentSerializerConstructorToken } from './dynamic-component-serializer/dynamic-component-serializer.token';\nimport { DefaultDynamicComponentSerializer } from './default-dynamic-component-serializer/default-dynamic-component-serializer';\nimport { DynamicComponentSerializerConstructor } from './dynamic-component-serializer/dynamic-component-serializer.constructor';\n\n/**\n * The Dynamic Components Module exports the {@link DynamicComponentDirective}\n * that can be used to create dynamic components while alllowing them to\n * be wired up with input and output streams similar to components \n * instantiated normally.\n * \n * The forRoot method must be called in order to provide the directive \n * with an implementation of the {@link DynamicComponentSerializer} which\n * handles the mapping of string names to actual Component class instances.\n * \n * The default implementation {@link DefaultDynamicComponentSerializer} \n * may be overriden with a custom implementation if desired.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DynamicComponentDirective \n  ],\n  exports: [\n    DynamicComponentDirective \n  ],\n  providers: [\n    DynamicComponentSerializerService\n  ]\n})\nexport class DynamicComponentsModule {\n  static forRoot(\n    serializerConstrutor: DynamicComponentSerializerConstructor = DefaultDynamicComponentSerializer\n  ): ModuleWithProviders {\n    return {\n      ngModule: DynamicComponentsModule,\n      providers: [\n        { \n          provide: DynamicComponentSerializerConstructorToken,\n          useValue: serializerConstrutor\n        }\n      ]\n    };\n  }  \n }\n\n \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LeaveDirective.html":{"url":"directives/LeaveDirective.html","title":"directive - LeaveDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  LeaveDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is a stub to handle :leave animations specified\ndynamically.  Angular will remove an element without waiting for \na dynamic animation to run but will wait for a static one.  So we\ndefine a stub :leave animation that does nothing but plays for the\namount of time needed for the specified dynamic :leave.\nCurrently this is under development and is hard coded to wait \nfor 500ms no matter how long the dynamic animation takes. \nEventually it will configure the wait time based on the actual\ndynamic animation's timing.\nSee DynamicAnimationsDirective for usage.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvkLeave]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setLeaveTiming\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @dvkLeave\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        @dvkLeave:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLeaveTiming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLeaveTiming(timing: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timing\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { trigger, transition, animate, style } from '@angular/animations';\nimport { Directive, HostBinding } from '@angular/core';\n\n/**\n * This directive is a stub to handle :leave animations specified\n * dynamically.  Angular will remove an element without waiting for \n * a dynamic animation to run but will wait for a static one.  So we\n * define a stub :leave animation that does nothing but plays for the\n * amount of time needed for the specified dynamic :leave.\n * \n * Currently this is under development and is hard coded to wait \n * for 500ms no matter how long the dynamic animation takes. \n * Eventually it will configure the wait time based on the actual\n * dynamic animation's timing.\n * \n * See {@link DynamicAnimationsDirective} for usage.\n */\n@Directive({\n  selector: '[dvkLeave]'\n})\nexport class LeaveDirective {\n  @HostBinding(\"@dvkLeave\") public timingParams: any = null;\n  \n  public setLeaveTiming(timing: string): void {\n    this.timingParams = dvkLeaveTiming(timing);\n  }\n}\n\n/**\n * Stub animation for the :leave transition\n */\nexport const dvkLeave =  [\n  trigger(\"dvkLeave\", [\n    transition(\":leave\", \n      animate(\"{{ timing }}\"), \n        { params: { timing: \"0ms\" }})\n  ])\n]\n\n/**\n * Stub function for setting the timing of a \n * :leave transition\n * @param timing The timing the animation should\n * last.\n */\nexport function dvkLeaveTiming(timing: any) {\n  return { value: null, params: { timing } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgStateService.html":{"url":"injectables/NgStateService.html","title":"injectable - NgStateService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts\n        \n\n            \n                Description\n            \n            \n                Converts an array of AnimationStateMetadata objects into \nan AnimationStylesMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseStates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseStates\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseStates(states: AnimationStateMetadata[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Convert metadata to AnimationStylesMap\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                        \n                                                                    AnimationStateMetadata[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The metadata to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationStylesMap\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimationStateMetadata } from '@angular/animations';\nimport { AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\n\n/**\n * Converts an array of AnimationStateMetadata objects into \n * an {@link AnimationStylesMap}.\n */\n@Injectable()\nexport class NgStateService {\n  constructor() { }\n\n  /**\n   * Convert metadata to {@link AnimationStylesMap}\n   * @param states The metadata to convert.\n   */\n  parseStates(states: AnimationStateMetadata[]): AnimationStylesMap {\n    return states.reduce((map,state)=>{\n      map[state.name] = state.styles;\n      return map;\n    },{});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgTransitionService.html":{"url":"injectables/NgTransitionService.html","title":"injectable - NgTransitionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgTransitionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the ability to convert an array of AnimationTransitionMetadata\ninto an AnimationTransitionsMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildAnimationTransitions\n                            \n                            \n                                    Private\n                                parseTransitionExpression\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildAnimationTransitions\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildAnimationTransitions(transitions: AnimationTransitionMetadata[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Build an AnimationTransitionsMap from an array of \nAnimationTransitionMetadata objects.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionMetadata[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The AnimationTransitionMetadata[] to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseTransitionExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseTransitionExpression(transition: AnimationTransitionMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Parse an individual AnimationTransitionMetadata for the transition\nexpression and convert that to a valid entry in an \nAnimationTransitionsMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        transition\n                                                        \n                                                                    AnimationTransitionMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The AnimationTransitionMetadata to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimationTransitionMetadata } from '@angular/animations';\nimport { AnimationTransitionsMap } from '../animation-transitions/animation-transitions.model';\nimport { NgTransitionSymbols } from './ng-transition.symbols';\nimport { NgTransitionStates } from './ng-transition.states';\n\n/**\n * Provides the ability to convert an array of AnimationTransitionMetadata\n * into an {@link AnimationTransitionsMap}.\n */\n@Injectable()\nexport class NgTransitionService {\n  \n  constructor() { }\n\n  /**\n   * Build an {@link AnimationTransitionsMap} from an array of \n   * AnimationTransitionMetadata objects.\n   * \n   * @param transitions The AnimationTransitionMetadata[] to convert.\n   */\n  buildAnimationTransitions(transitions: AnimationTransitionMetadata[]) {\n    return transitions.reduce((transMap: AnimationTransitionsMap, transition)=>{\n      let newTransitions = this.parseTransitionExpression(transition);\n      Object.keys(newTransitions).forEach(fromState=>{\n        Object.keys(newTransitions[fromState]).forEach(toState=>{\n          transMap[fromState] = transMap[fromState] || {};\n          transMap[fromState][toState] = newTransitions[fromState][toState];\n        })\n      });\n      return transMap;\n    },{});\n  }\n\n  /**\n   * Parse an individual AnimationTransitionMetadata for the transition\n   * expression and convert that to a valid entry in an \n   * {@link AnimationTransitionsMap}.\n   * @param transition The AnimationTransitionMetadata to convert.\n   */\n  private parseTransitionExpression(transition: AnimationTransitionMetadata) {\n    const expressions = transition.expr;\n    let transitions: AnimationTransitionsMap = {};\n\n    if(this.isString(expressions)) {\n      expressions.split(',').forEach(expression=>{\n        if(expression.includes(NgTransitionSymbols.Either)) {\n          const states = expression.split(NgTransitionSymbols.Either);\n          const state1 = states[0].trim();\n          const state2 = states[1].trim();\n\n          transitions = {\n            [state1]: {\n              ...transitions[state1],\n              [state2]:transition.animation\n            },\n            [state2]: {\n              ...transitions[state2],\n              [state1]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.To)) {\n          const states = expression.split(NgTransitionSymbols.To);\n          const fromState = states[0].trim();\n          const toState = states[1].trim();\n\n          transitions = {\n            [fromState]: {\n              ...transitions[fromState],\n              [toState]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Enter)) {\n          transitions = {\n            [NgTransitionStates.Void]: {\n              ...transitions[NgTransitionStates.Void],\n              [NgTransitionStates.WildCard]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Leave)) {\n          transitions = {\n            [NgTransitionStates.WildCard]: {\n              ...transitions[NgTransitionStates.WildCard],\n              [NgTransitionStates.Void]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Inc)) {\n          console.error(`${expression} is not yet supported`);\n        }\n        else if(expression.includes(NgTransitionSymbols.Dec)) {\n          console.error(`${expression} is not yet supported`);\n        }\n      })\n    }\n    return transitions;\n  }\n  \n  /**\n   * @ignore\n   */\n  private isString(expression: any): expression is string {\n    return expression.length !== null && expression.length !== undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateCSSMap.html":{"url":"interfaces/StateCSSMap.html","title":"interface - StateCSSMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateCSSMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts\n        \n\n            \n                Description\n            \n            \n                Map a state to a css class that \nshould be applied to the element\nbeing animated.\nThe old class will be removed before\nany transition animation is played.\nThe new class will be applied after\nany transition animations complete.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [state: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts:18\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface StateCSSMap {\n    [state:string]: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateCSSMapper.html":{"url":"interfaces/StateCSSMapper.html","title":"interface - StateCSSMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateCSSMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an object that can map string state names \nto CSS classes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        add\n                                \n                                \n                                        destroy\n                                \n                                \n                                        remove\n                                \n                                \n                                        removeAll\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        add\n                                    \n                                \n                                \n                                    \n                                        add:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Add the css class defined by the StateCSSMap \nfor the given state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references used by the closure.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Remove the css class defined by the StateCSSMap \nfor the given state. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeAll\n                                    \n                                \n                                \n                                    \n                                        removeAll:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Remove all css classes defined by the StateCSSMap\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StateCSSMapper {\n\n  /**\n   * Remove the css class defined by the {@link StateCSSMap} \n   * for the given state. \n   */\n  remove: (state:string)=>void;\n\n  /**\n   * Remove all css classes defined by the {@link StateCSSMap}\n   */\n  removeAll: ()=>void;\n\n  /**\n   * Add the css class defined by the {@link StateCSSMap} \n   * for the given state.\n   */\n  add: (state:string)=> void;\n\n  /**\n   * Release the references used by the closure.\n   */\n  destroy: ()=> void;\n}\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateCssMapperService.html":{"url":"injectables/StateCssMapperService.html","title":"injectable - StateCssMapperService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StateCssMapperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts\n        \n\n            \n                Description\n            \n            \n                This service creates a closure that handles \nadding and removing css classes form a given element\nbased on the StateCSSMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStateCSSMapper\n                            \n                            \n                                getCSSClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                    RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStateCSSMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStateCSSMapper(element: any, map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Create the StateCSSMapper to apply to the given element.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The element to apply the css classes to.\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The StateCSSMap that defines the css classes and states.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCSSClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCSSClass(state: string, map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Get the css class for the given state.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The state.\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The StateCSSMap to look the state up in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, RendererFactory2 } from '@angular/core';\nimport { StateCSSMapper } from './state-css-mapper.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * This service creates a closure that handles \n * adding and removing css classes form a given element\n * based on the {@link StateCSSMap}.\n */\n@Injectable()\nexport class StateCssMapperService {\n\n  constructor(private rendererFactory: RendererFactory2) {\n  }\n\n  /**\n   * Get the css class for the given state.\n   * \n   * @param state The state.\n   * @param map The StateCSSMap to look the state up in.\n   */\n  getCSSClass(state:string, map: StateCSSMap) {\n    return map && map[state];\n  }\n\n  /**\n   * Create the {@link StateCSSMapper} to apply to the given element.\n   * \n   * @param element The element to apply the css classes to.\n   * @param map The StateCSSMap that defines the css classes and states.\n   */\n  createStateCSSMapper(element: any, map: StateCSSMap) {\n    let renderer = this.rendererFactory.createRenderer(element,null);\n\n    return {\n      remove: (state:string)=> {\n        renderer.removeClass(element,this.getCSSClass(state,map));\n      },\n      add: (state:string)=> {\n        renderer.addClass(element,this.getCSSClass(state,map));\n      },\n      removeAll: ()=> {\n        Object.keys(map).forEach(entry=>renderer.removeClass(element, map[entry]));\n      },\n      destroy: ()=> {\n        renderer.destroy();\n        renderer = null;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts\n            \n            \n                interface\n            \n            \n                ContainersMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.model.ts\n            \n            \n                interface\n            \n            \n                ContentConductorConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.token.ts\n            \n            \n                variable\n            \n            \n                ContentConductorConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor.model.ts\n            \n            \n                interface\n            \n            \n                ContentConductor\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor.service.ts\n            \n            \n                injectable\n            \n            \n                ContentConductorService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts\n            \n            \n                directive\n            \n            \n                ContentContainerDirective\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-container/content-container.model.ts\n            \n            \n                interface\n            \n            \n                ContentContainer\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content/content.directive.ts\n            \n            \n                directive\n            \n            \n                ContentDirective\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts\n            \n            \n                class\n            \n            \n                DefaultContentConductorService\n            \n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.constructor.ts\n            \n            \n                interface\n            \n            \n                AnimationStateMachineConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.model.ts\n            \n            \n                interface\n            \n            \n                AnimationStateMachine\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.token.ts\n            \n            \n                variable\n            \n            \n                AnimationStateMachineConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts\n            \n            \n                injectable\n            \n            \n                AnimationStatesService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n            \n            \n                interface\n            \n            \n                AnimationStylesMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n            \n            \n                interface\n            \n            \n                AnimationTransitionsMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/default-animations-state-machine/default-animations-state-machine.service.ts\n            \n            \n                class\n            \n            \n                DefaultAnimationsStateMachine\n            \n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts\n            \n            \n                class\n            \n            \n                DefaultDynamicAnimationsHandlerService\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.constructor.ts\n            \n            \n                interface\n            \n            \n                DynamicAnimationsHandlerConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.model.ts\n            \n            \n                interface\n            \n            \n                DynamicAnimationsHandler\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.token.ts\n            \n            \n                variable\n            \n            \n                DynamicAnimationsHandlerConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts\n            \n            \n                directive\n            \n            \n                DynamicAnimationsDirective\n            \n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicAnimationsService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave-pseudo-animation/leave-pseudo-animation.ts\n            \n            \n                variable\n            \n            \n                dvkLeave\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                directive\n            \n            \n                LeaveDirective\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                function\n            \n            \n                dvkLeaveTiming\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                variable\n            \n            \n                dvkLeave\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts\n            \n            \n                injectable\n            \n            \n                NgStateService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts\n            \n            \n                injectable\n            \n            \n                NgTransitionService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts\n            \n            \n                interface\n            \n            \n                StateCSSMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.model.ts\n            \n            \n                interface\n            \n            \n                StateCSSMapper\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts\n            \n            \n                injectable\n            \n            \n                StateCssMapperService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/component-constructor/component-constructor.model.ts\n            \n            \n                interface\n            \n            \n                ComponentConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts\n            \n            \n                class\n            \n            \n                DefaultDynamicComponentSerializer\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-data/dynamic-component-data.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentData\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentsMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-model/dynamic-component-model.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentModel\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer-map/dynamic-component-serializer-map.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializerMap\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.constructor.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializerConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializer\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicComponentSerializerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.token.ts\n            \n            \n                variable\n            \n            \n                DynamicComponentSerializerConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts\n            \n            \n                directive\n            \n            \n                DynamicComponentDirective\n            \n            \n                62 %\n                (10/16)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.1\n        \n            @angular/common : ^6.1.1\n        \n            @angular/core : ^6.1.1\n        \n            @angular/compiler : ^6.1.1\n        \n            @angular/forms : ^6.1.1\n        \n            @angular/http : ^6.1.1\n        \n            @angular/platform-browser : ^6.1.1\n        \n            @angular/platform-browser-dynamic : ^6.1.1\n        \n            @angular/router : ^6.1.1\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgTransitionStates   (projects/.../ng-transition.states.ts)\n                        \n                        \n                            NgTransitionSymbols   (projects/.../ng-transition.symbols.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.states.ts\n    \n        \n            \n                \n                    \n                        \n                        NgTransitionStates\n                    \n                \n                    \n                        \n                            States predefined by the Angular animations.\n\n                        \n                    \n                        \n                            \n                                 WildCard\n                            \n                        \n                        \n                            \n                                Value: *\n                            \n                        \n                        \n                            \n                                 Void\n                            \n                        \n                        \n                            \n                                Value: void\n                            \n                        \n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.symbols.ts\n    \n        \n            \n                \n                    \n                        \n                        NgTransitionSymbols\n                    \n                \n                    \n                        \n                            Symbols used by the angular animations transition\nexpression definitions.\n\n                        \n                    \n                        \n                            \n                                 To\n                            \n                        \n                        \n                            \n                                Value: =>\n                            \n                        \n                        \n                            \n                                 Either\n                            \n                        \n                        \n                            \n                                Value: \n                            \n                        \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                Value: :enter\n                            \n                        \n                        \n                            \n                                 Leave\n                            \n                        \n                        \n                            \n                                Value: :leave\n                            \n                        \n                        \n                            \n                                 Inc\n                            \n                        \n                        \n                            \n                                Value: :increment\n                            \n                        \n                        \n                            \n                                 Dec\n                            \n                        \n                        \n                            \n                                Value: :decrement\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dvkLeaveTiming   (projects/.../leave.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeaveTiming\n                            \n                            \n                        \n                    \n                \n                \n                    \ndvkLeaveTiming(timing: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Stub function for setting the timing of a \n:leave transition\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timing\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The timing the animation should\nlast.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@UAT/DynamicViewKit\nThe Dynamic View Kit is a library for building components\nand directives with dynamic capabilities.\nThe goal is to provide a set of tools that allow component and\ndirective authors to create feature rich components whose \nfunctionality can be modified by end users.\nDocumentation\nThe documentation is available here.\nFeatures\nCurrently the dvk offers 3 features for building components and \ndirectives.\n\nContent Conductor\nDynamic Animations\nDynamic Components\n\nInstallation\nThe dvk can be installed from npm.\nnpm i @uat/dvkImportant\nThe dvk requires typescript 2.8 or higher.\nBuilding\nThe dvk library can be compiled with the command:\nng build dvkemo Application\nThe development environment and demo application can then be \nstarted with the command:\nng serveAngular CLI\nThis project was generated with Angular CLI version 6.1.2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 tme321\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ContentConductorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicAnimationsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicComponentsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentConductorModule\n\n\n\ncluster_ContentConductorModule_declarations\n\n\n\ncluster_ContentConductorModule_exports\n\n\n\ncluster_ContentConductorModule_providers\n\n\n\ncluster_DynamicAnimationsModule\n\n\n\ncluster_DynamicAnimationsModule_declarations\n\n\n\ncluster_DynamicAnimationsModule_exports\n\n\n\ncluster_DynamicAnimationsModule_providers\n\n\n\ncluster_DynamicComponentsModule\n\n\n\ncluster_DynamicComponentsModule_declarations\n\n\n\ncluster_DynamicComponentsModule_exports\n\n\n\ncluster_DynamicComponentsModule_providers\n\n\n\n\nContentContainerDirective\n\nContentContainerDirective\n\n\n\nContentConductorModule\n\nContentConductorModule\n\nContentConductorModule -->\n\nContentContainerDirective->ContentConductorModule\n\n\n\n\n\nContentDirective\n\nContentDirective\n\nContentConductorModule -->\n\nContentDirective->ContentConductorModule\n\n\n\n\n\nContentContainerDirective \n\nContentContainerDirective \n\nContentContainerDirective  -->\n\nContentConductorModule->ContentContainerDirective \n\n\n\n\n\nContentDirective \n\nContentDirective \n\nContentDirective  -->\n\nContentConductorModule->ContentDirective \n\n\n\n\n\nContentConductorService\n\nContentConductorService\n\nContentConductorModule -->\n\nContentConductorService->ContentConductorModule\n\n\n\n\n\nDynamicAnimationsDirective\n\nDynamicAnimationsDirective\n\n\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsDirective->DynamicAnimationsModule\n\n\n\n\n\nLeaveDirective\n\nLeaveDirective\n\nDynamicAnimationsModule -->\n\nLeaveDirective->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective  -->\n\nDynamicAnimationsModule->DynamicAnimationsDirective \n\n\n\n\n\nLeaveDirective \n\nLeaveDirective \n\nLeaveDirective  -->\n\nDynamicAnimationsModule->LeaveDirective \n\n\n\n\n\nAnimationStatesService\n\nAnimationStatesService\n\nDynamicAnimationsModule -->\n\nAnimationStatesService->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsService\n\nDynamicAnimationsService\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsService->DynamicAnimationsModule\n\n\n\n\n\nNgStateService\n\nNgStateService\n\nDynamicAnimationsModule -->\n\nNgStateService->DynamicAnimationsModule\n\n\n\n\n\nNgTransitionService\n\nNgTransitionService\n\nDynamicAnimationsModule -->\n\nNgTransitionService->DynamicAnimationsModule\n\n\n\n\n\nStateCssMapperService\n\nStateCssMapperService\n\nDynamicAnimationsModule -->\n\nStateCssMapperService->DynamicAnimationsModule\n\n\n\n\n\nDynamicComponentDirective\n\nDynamicComponentDirective\n\n\n\nDynamicComponentsModule\n\nDynamicComponentsModule\n\nDynamicComponentsModule -->\n\nDynamicComponentDirective->DynamicComponentsModule\n\n\n\n\n\nDynamicComponentDirective \n\nDynamicComponentDirective \n\nDynamicComponentDirective  -->\n\nDynamicComponentsModule->DynamicComponentDirective \n\n\n\n\n\nDynamicComponentSerializerService\n\nDynamicComponentSerializerService\n\nDynamicComponentsModule -->\n\nDynamicComponentSerializerService->DynamicComponentsModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            3 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InitialValues   (projects/.../initial-values.model.ts)\n                        \n                        \n                            InputStreams   (projects/.../input-streams.model.ts)\n                        \n                        \n                            NotTypedKeys   (projects/.../not-typed-keys.model.ts)\n                        \n                        \n                            OutputCallbacks   (projects/.../output-callbacks.model.ts)\n                        \n                        \n                            TypedKeys   (projects/.../typed-keys.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-components/initial-values/initial-values.model.ts\n    \n        \n            \n                \n                    \n                        \n                        InitialValues\n                    \n                \n                    \n                        \n                            A map of keys to values where \nthe keys are properties of \ntype T and the values are \nthe same as the property type.\n\n                        \n                    \n                \n                    \n                        InitialValues:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/dynamic-components/input-streams/input-streams.model.ts\n    \n        \n            \n                \n                    \n                        \n                        InputStreams\n                    \n                \n                    \n                        \n                            A map of Observables whose keys are \nany properties of type T that are not \n{@link EventEmitter}s.\n\n                        \n                    \n                \n                    \n                        InputStreams:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/common/not-typed-keys.model.ts\n    \n        \n            \n                \n                    \n                        \n                        NotTypedKeys\n                    \n                \n                    \n                        \n                            Constrain a set of keys from type T \nthat are not of type C.\n\n                        \n                    \n                \n                    \n                        NotTypedKeys:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/dynamic-components/output-callbacks/output-callbacks.model.ts\n    \n        \n            \n                \n                    \n                        \n                        OutputCallbacks\n                    \n                \n                    \n                        \n                            A map of call back functions whose keys are \nproperties of type T that are {@link EventEmitter}s.\n\n                        \n                    \n                \n                    \n                        OutputCallbacks:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/common/typed-keys.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TypedKeys\n                    \n                \n                    \n                        \n                            Constrain a set of keys from type T\nthat are of type C.\n\n                        \n                    \n                \n                    \n                        TypedKeys:     \n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimationStateMachineConstructorToken   (projects/.../animation-state-machine.token.ts)\n                        \n                        \n                            ContentConductorConstructorToken   (projects/.../content-conductor-constructor.token.ts)\n                        \n                        \n                            dvkLeave   (projects/.../leave.directive.ts)\n                        \n                        \n                            dvkLeave   (projects/.../leave-pseudo-animation.ts)\n                        \n                        \n                            DynamicAnimationsHandlerConstructorToken   (projects/.../dynamic-animations-handler.token.ts)\n                        \n                        \n                            DynamicComponentSerializerConstructorToken   (projects/.../dynamic-component-serializer.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AnimationStateMachineConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AnimationStateMachineConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AnimationStateMachineConstructorToken')\n                        \n                    \n\n                \n                    \n                        Token for the class to be constructed to act as the animation state machine.\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ContentConductorConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ContentConductorConstructorToken:     miscellaneou\n\n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('ContainersConductorConstructorToken')\n                        \n                    \n\n                \n                    \n                        An injection token representing an implementation of a \nconstructor in the shape of ContentConductorConstructor.\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dvkLeave:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  trigger(\"dvkLeave\", [\n    transition(\":leave\", \n      animate(\"{{ timing }}\"), \n        { params: { timing: \"0ms\" }})\n  ])\n]\n                        \n                    \n\n                \n                    \n                        Stub animation for the :leave transition\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/leave-pseudo-animation/leave-pseudo-animation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dvkLeave:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('dvkLeave', [\n    transition('enabled => void', \n      animate('{{ leaveTiming }}', \n      style({ /* empty */ })))\n  ])\n                        \n                    \n\n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DynamicAnimationsHandlerConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DynamicAnimationsHandlerConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DynamicAnimationsHandlerConstructorToken')\n                        \n                    \n\n                \n                    \n                        Token for injecting the constructor for an object that can\nact as the Animations Handler\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DynamicComponentSerializerConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DynamicComponentSerializerConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DynamicComponentSerializerConstructorToken')\n                        \n                    \n\n                \n                    \n                        This token represents the specific instance used for the\ncomponent serializer.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/content-conductor.html":{"url":"additional-documentation/content-conductor.html","title":"additional-page - Content Conductor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCondent Conductor\nThe Condent Conductor module provides the functionality for moving \nTemplateRefs between multiple ViewContainerRefs referenced with\nstring name values.\nCreating Containers\nContainers can be defined inside a Component template with the \nContentContainerDirective.\n\nThe string names provided to the directive can be used to reference\nthat container through an instance of ContentConductor.\nCreating a Conductor\nThe ContentConductor can be created by injecting the ContentConductorService into a component's constructor.\n  constructor(private ccService: ContentConductorService) { }And then calling the createContentConductor method with the QueryLists for the ContentContainerDirectives and the TemplateRefs.  These QueryLists should both be available during ngAfterViewInit.\nThe init method specifies which container any initial content should\nbe in.\n  @ContentChildren(ContentDirective,{ read: TemplateRef, descendants: true }) \n  contents: QueryList>;\n\n  @ViewChildren(ContentContainerDirective)\n  containers: QueryList;\n\n  conductor: ContentConductor;\n\n  ngAfterViewInit() {\n    this.conductor = this.ccService\n      .createContentConductor(this.containers, this.contents);\n\n    this.conductor.init('one');\n  }Using the Conductor\nThen content can be moved from one container to another by specifying\nthe container string names.\nthis.conductor.moveViews('one','two');The ContentConductor also provides the ability to move single views from one container to another based on their index inside the container.\nthis.conductor.moveView('one','two',3);Detach a single view from any container returning the ViewRef.\nconst vRef: ViewRef = this.conductor.detachView('one',2);Attach a view to the end of a specified container.\nthis.conductor.attachView('two',vRef);Detach all views from a specified container.\nconst views: ViewRef[] = this.conductor.detachViews('one');And attach an array of views to a specified container.\nthis.conductor.attachViews('two',views);Finally the content conductor should be destroyed inside the components\nngOnDestroy method in order to free up the resources it uses.\nngOnDestroy() {\n  this.conductor.destroy();\n}Note\nAll of the methods that insert views into containers also have an optional index parameter at the end that is the index to insert at.\nIf it is not specified the items are inserted to the end of the containers views.\nContent\nContent is added to the containers by creating it inside the element that has containers in it's view and creates the conductor.  The pieces of content should be marked with the structural directive ContentDirective.\n\n    Some Content To Display In A Container\n    \n    \n        \n        \n    \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/content-conductor/example.html":{"url":"additional-documentation/content-conductor/example.html","title":"additional-page - Example","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Your browser does not support iframes.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-animations.html":{"url":"additional-documentation/dynamic-animations.html","title":"additional-page - Dynamic Animations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDynamic Animations\nThe Dynamic Animations module provides a directive that allow animations to be specified in the same format as standard Angular animations.  These animations are supplied at run time instead of statically in the Component decorator so a component developer can expose the animations specification and a consumer of the component can supply their own animations.\nDefining a set of Animations\nAnimations are defined using the same functions that normal Angular animations use with a few exceptions.  The animations are defined as an array containing state and transition definitions from @angular/animations.  A trigger definition is not recognized as the DynamicAnimationsDirective supplies an @Input member state that works in the same way as a trigger does.\nOther constraints are that no part of an animation can refer to a defined trigger, such as some forms of query, and no part can refer to a specific state.  The concept of states is implemented fully by the AnimationStateMachine as the Angular AnimationBuilder does not have the same concept of states as the standard static Angular animations.\nA simple animation looks like this.\nanimations = [\n    state('open',style({\n        'transform': `scaleY(1.0)`,\n        'transform-origin': 'top'\n    })),\n    state('closed',style({\n        'transform': `scaleY(0.0)`,\n        'transform-origin': 'top'\n    })),\n    transition('openclosed',animate('200ms'))\n];Currently supported abilities include the wild card for transitions like *=>open or closed=>* as well as :enter.  The :leave state has limited support at the moment.  Please refer to the section below.\nNote\nMore complex animations as defined normally by Angular are supported but have not all been fully tested at this time.  If you find any animations that work statically but do not work dynamically outside of the constraints listed above please submit a bug report with the animation that does not work included.\nAnimation States\nThe state itself can be represented by a string member that can be bound to the state @Input of the directive.  \ncurrentState = 'closed';The animation directive will automatically transition from the void state to the value of the bound state during initalization.  It will play any :enter or *=>void transitions that match the conditions as were definined in the animations.\nNote\nCurrently only string states are supported; numerical values will not work and neither will :increment or :decrement transition styles.  Support is planned but not yet implemented.\nUsing the DynamicAnimationsDirective\nThe dynamic animations directive can be attached to an element and passed the animations and the state binding.\n\nTransitioning the State\nThe state can be transitioned simply by changing the value of the bound member to the next desired state.\nthis.currentState = 'open';The transition that matches the change in state with the most specificity will be played when the value of the bound state is changed.\nLeave Transition\nThe leave transition is partially supported at the moment.\nIf a :leave animation, or *=>void, is specified you must also both\nadd the @dvkLeave directive to the element and add dvkLeave to \nthe component as a static animation.  This step is only necessary\nfor the leave animation. \nThis is due to the fact that Angular will remove an element before a dynamic animation has a chance to play.  A static leave animation must be used to keep the element around long enough for the dynamic animation to actually play.\nCurrently the dvkLeave directive is set to a constant time of 500ms.  In the future this value will be made dynamic to match the dynamic animation supplied.\nSo in order to use a leave animation first attach the animation to the component metadata.\n@Component({\n    animations: [dvkLeave]\n})Then add it as a trigger to the element containing the DynamicAnimationsDirective.\n\nAnd define a leave transition inside the animations supplied to the directive.\ntransition(':leave',animate('200ms',\n    style({ 'background-color': 'red' }))\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-animations/example.html":{"url":"additional-documentation/dynamic-animations/example.html","title":"additional-page - Example","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Your browser does not support iframes.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-components.html":{"url":"additional-documentation/dynamic-components.html","title":"additional-page - Dynamic Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDynamic Components\nThe Dynamic Components module provides a directive that will instantiate components dynamically with the ability to hook up their inputs to observable streams and provide callbacks for the instantiated components output emitters.\nCreating a Serializer\nA DynamicComponentSerializer is used to translate between a string name and a Component class instance.  This allows the string name to be stored inside an ngrx store, transmitted to a server, or any other use that might be desired and the data can be used later to instantiate the same dynamic component.  \nA serializer can be created with the createSerializer method of the DynamicComponentSerializerService.  \nFirst inject the service into a components constructor.\nconstructor(private dcsService :DynamicComponentSerializerService) {} And then pass the createSerializer method a DynamicComponentsMap of string names to component class instances.\nserializer: DynamicComponentSerializer;\n\nngOnInit() {\n    this.serializer = this.dcsService.createSerializer({\n        'textComponent': TextComponent,\n        'numberComponent': NumberComponent\n    });\n}This serializer is stateless other than the map and can be reused for any number of instances of DynamicComponentDirectives.\nCreating a DynamicComponentModel\nA DynamicComponentModel is the model that the DynamicComponentDirective uses to instantiate a component and hook up any streams specified.\nA DynamicComponentModel extends the DynamicComponentData interface.  The DynamicComponentData interface was designed to be serializable so it can be stored or transferred as desired.  It consists of a name string and an initialValues object.  The name is the serialized name of the component that should be instantiated.  The initializedValues should be a map of fields inside the component class type to the desired initial values for those fields.  As long as the field values are serializable this entire data structure can be safely stored and used for any purpose.\n@Component({\n    template: `\n        \n        {{text}}\n        \n    `\n})\nclass TextComponent {\n    @Input() text: string;\n    @Output() textClicked = new EventEmitter();\n}\n\nconst data: DynamicComponentData = {\n    name: 'textComponent',\n    initialValues: {\n        'text': 'The initial text for this component'\n    }\n}This data structure can be combined with the other fields of the DynamicComponentModel before it is applied to the directive.\ntext$ = new Subject();\n\nonClick = (e: MouseEvent) => {\n    console.log('Dynamic component was clicked');\n}\n\nconst model: DynamicComponentModel = {\n    ...this.data,\n    inputs$: {\n        text: this.text$.asObservable()\n    },\n    outputCallbacks: {\n        textClicked: this.onClick\n    },\n    providers: [\n    /* Any custom providers for the component can be supplied here */\n    ]\n}Note\nThe context of this inside callbacks will be the dynamic component and not the class where the callback is defined unless the callback method is defined as an arrow function or the value of this is bound before passing the result to the dynamic component.  This example uses an arrow function to preserve the context of this inside the onClick callback.\nCreating a DynamicComponentDirective\nWith the model set up and a serializer created those two pieces can now be passed off to an instance of the DynamicComponentDirectives inside the template of a component.\n\nThe DynamicComponentDirective will use the serializer to resolve the string name to a component and create an instance of it.  It will apply any specified initial values during instantiation.  Then it will hook up any specified input streams and output callbacks to the members of the component.\nThe directive will track and properly dispose of the subscriptions for the streams and will trigger change detection manually when new values are emited from the input streams.  The input streams also have a distinct until changed operator applied.  The directive should manage these streams in the same way that the async pipe does for other components.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-components/example.html":{"url":"additional-documentation/dynamic-components/example.html","title":"additional-page - Example","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Your browser does not support iframes.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
