var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/AnimationStateMachine.html",[0,0.204,1,1.836]],["body/interfaces/AnimationStateMachine.html",[0,0.286,1,2.572,2,0.407,3,0.407,4,0.349,5,0.532,6,2.202,7,2.016,8,2.202,9,3.427,10,0.377,11,2.737,12,1.657,13,4.704,14,1.586,15,1.17,16,1.363,17,1.668,18,1.363,19,0.5,20,2.166,21,3.075,22,4.042,23,5.18,24,2.028,25,0.949,26,0.02,27,4.05,28,3.134,29,5.304,30,2.424,31,1.668,32,2.922,33,2.928,34,0.954,35,1.668,36,3.381,37,2.737,38,2.922,39,0.946,40,0.5,41,2.361,42,2.062,43,3.051,44,0.377,45,2.771,46,5.304,47,3.996,48,3.051,49,0.674,50,3.996,51,1.632,52,0.014,53,0.014]],["title/interfaces/AnimationStateMachineConstructor.html",[0,0.204,54,2.414]],["body/interfaces/AnimationStateMachineConstructor.html",[0,0.328,1,2.391,2,0.502,3,0.502,4,0.43,5,0.657,6,2.716,7,1.903,8,2.716,10,0.465,11,3.13,12,1.675,13,4.207,26,0.02,34,0.913,35,1.55,40,0.822,44,0.465,52,0.016,53,0.016,54,3.867,55,4.228,56,1.338,57,4.632,58,3.765,59,2.253,60,4.228,61,2.618,62,2.618,63,2.128,64,2.544,65,2.013,66,1.907,67,2.013,68,4.228,69,4.93]],["title/injectables/AnimationStatesService.html",[70,0.973,71,1.954]],["body/injectables/AnimationStatesService.html",[1,2.893,2,0.351,3,0.351,4,0.301,5,0.735,6,3.041,7,1.888,8,2.644,10,0.453,11,2.477,12,1.627,13,4.138,19,0.431,25,0.765,26,0.02,30,2.194,31,1.876,34,0.519,35,2.169,37,2.477,38,3.577,39,0.856,40,0.784,44,0.326,52,0.012,53,0.012,54,3.804,56,1.059,58,4.556,59,1.577,61,2.932,62,2.932,63,1.489,64,1.78,65,1.409,66,2.628,67,2.561,68,4.116,70,1.533,71,2.477,72,3.261,73,2.959,74,3.06,75,1.696,76,5.116,77,2.836,78,1.533,79,3.45,80,5.52,81,3.45,82,1.297,83,0.856,84,1.173,85,3.45,86,3.45,87,1.409,88,1.335,89,0.843,90,2.393,91,2.959,92,2.959,93,3.45,94,3.45,95,1.613,96,2.194,97,3.45,98,2.382,99,3.45,100,3.45]],["title/interfaces/AnimationStylesMap.html",[0,0.204,62,1.634]],["body/interfaces/AnimationStylesMap.html",[0,0.338,2,0.452,3,0.452,4,0.388,5,0.757,6,3.13,7,1.918,10,0.419,12,1.085,19,0.555,24,1.699,26,0.02,31,1.787,35,1.97,37,2.292,39,1.013,40,0.555,44,0.536,49,1.213,52,0.015,53,0.015,59,2.03,61,1.917,62,2.452,63,2.452,67,2.32,101,3.392,102,1.873,103,5.853,104,4.442,105,5.043,106,3.08,107,3.809,108,4.339,109,3.13,110,2.624,111,3.809,112,3.392,113,3.392,114,4.339,115,2.624,116,3.94,117,3.08,118,3.809]],["title/interfaces/AnimationTransitionsMap.html",[0,0.204,61,1.634]],["body/interfaces/AnimationTransitionsMap.html",[0,0.33,2,0.429,3,0.429,4,0.368,5,0.732,6,3.025,7,1.921,10,0.398,12,1.341,19,0.527,24,1.259,25,0.672,26,0.02,31,1.325,35,2.165,37,2.833,39,1.089,40,0.527,44,0.518,49,1.213,52,0.014,53,0.014,59,1.925,61,2.37,62,1.818,63,2.37,67,1.72,101,3.216,102,1.826,103,5.238,105,5.126,106,3.808,107,4.708,108,4.943,109,3.566,110,3.244,111,4.708,112,4.193,113,4.193,114,4.943,115,3.244,116,4.236,117,3.808,118,4.708,119,4.212,120,4.212]],["title/interfaces/ComponentConstructor.html",[0,0.204,121,1.836]],["body/interfaces/ComponentConstructor.html",[0,0.353,2,0.569,3,0.569,4,0.488,5,0.745,10,0.528,15,1.233,26,0.019,44,0.528,52,0.017,53,0.017,56,1.233,121,3.173,122,4.795,123,2.885,124,4.27,125,3.877,126,5.592]],["title/interfaces/ContainersMap.html",[0,0.204,127,2.626]],["body/interfaces/ContainersMap.html",[0,0.338,2,0.528,3,0.528,4,0.453,10,0.49,19,0.649,26,0.019,39,0.925,40,0.649,44,0.49,49,1.134,52,0.016,53,0.016,83,1.198,89,1.267,102,1.87,127,4.339,128,2.701,129,5.365,130,4.778,131,3.306,132,3.447,133,3.034,134,3.97,135,4.448,136,5.187]],["title/interfaces/ContentConductor.html",[0,0.204,137,1.836]],["body/interfaces/ContentConductor.html",[0,0.158,2,0.183,3,0.378,4,0.157,10,0.524,11,1.514,15,0.647,19,0.843,21,1.8,22,1.87,25,0.848,26,0.02,30,1.341,31,0.923,32,2.356,36,1.87,39,0.989,40,0.367,44,0.17,49,1.182,51,2.061,52,0.008,53,0.008,70,0.754,75,1.216,77,1.734,78,1.581,82,1.438,83,1.194,84,1.3,89,0.44,95,1.438,98,2.839,115,3.887,128,2.475,132,3.766,133,3.315,134,1.734,137,1.423,138,2.959,139,1.546,140,1.514,141,1.617,142,2.475,143,2.241,144,1.734,145,2.035,146,1.87,147,4.184,148,2.527,149,2.241,150,2.241,151,3.667,152,4.037,153,4.327,154,1.546,155,5.666,156,5.583,157,1.803,158,3.716,159,3.808,160,4.327,161,5.545,162,4.234,163,1.546,164,1.803,165,3.055,166,1.803,167,2.516,168,1.617,169,1.514,170,2.934,171,1.87,172,1.87,173,1.546,174,1.803,175,4.277,176,1.954,177,3.667,178,3.055,179,3.278,180,2.241,181,2.516,182,1.803,183,2.516,184,1.803,185,2.516,186,1.546,187,5.173,188,3.182,189,1.803,190,2.241,191,2.241,192,2.726,193,3.667,194,4.562,195,4.277,196,2.934,197,2.934,198,4.327,199,2.035,200,1.546,201,1.803,202,1.87,203,0.93,204,0.93,205,1.149,206,1.803,207,1.803,208,1.803,209,1.546,210,4.277,211,1.546,212,1.803,213,1.803,214,1.803,215,1.803]],["title/interfaces/ContentConductorConstructor.html",[0,0.204,216,2.237]],["body/interfaces/ContentConductorConstructor.html",[0,0.319,2,0.481,3,0.481,4,0.412,10,0.446,26,0.02,40,0.806,44,0.446,52,0.015,53,0.015,56,1.303,65,1.928,78,1.518,89,1.154,95,1.276,98,2.549,109,2.602,124,3.606,128,2.038,132,2.602,133,2.864,137,3.275,138,2.437,142,2.782,144,3.49,146,4.432,172,3.01,178,2.602,203,2.437,204,2.437,205,3.01,216,3.49,217,3.048,218,3.01,219,2.549,220,3.606,221,4.51,222,4.049,223,4.51]],["title/modules/ContentConductorModule.html",[224,1.465,225,2.626]],["body/modules/ContentConductorModule.html",[0,0.229,2,0.294,3,0.294,4,0.252,10,0.273,14,1.265,17,2.189,24,2.01,26,0.02,31,1.331,34,0.753,39,0.755,40,0.791,44,0.52,49,0.714,52,0.011,53,0.011,66,1.638,78,0.744,82,1.144,83,0.755,84,1.034,87,2.044,89,0.707,95,1.489,113,3.232,128,1.249,132,2.332,133,3.261,137,2.671,138,1.493,140,3.346,141,2.332,142,3.029,145,2.936,147,3.82,148,2.501,159,3.797,169,2.184,204,1.493,216,2.501,217,3.16,218,2.698,224,2.369,225,4.827,226,1.71,227,2.007,228,3.471,229,2.007,230,2.481,231,2.481,232,2.481,233,2.481,234,3.797,235,2.936,236,2.007,237,1.844,238,2.894,239,3.232,240,2.936,241,4.233,242,2.936,243,3.63,244,4.206,245,2.501,246,4.233,247,2.053,248,2.936,249,4.233,250,4.233,251,3.232,252,3.63,253,4.233,254,4.233,255,3.232,256,2.936,257,3.232,258,3.82,259,3.82,260,2.936,261,3.232,262,4.233,263,2.209,264,3.63,265,2.698,266,2.481,267,3.822,268,3.232,269,2.894,270,2.894,271,1.493,272,1.71,273,2.894,274,2.209,275,2.481]],["title/injectables/ContentConductorService.html",[70,0.973,140,1.954]],["body/injectables/ContentConductorService.html",[2,0.341,3,0.341,4,0.293,10,0.444,14,1.002,15,1.038,19,0.419,25,0.939,26,0.02,31,1.853,34,0.504,39,0.839,40,0.805,44,0.317,52,0.012,53,0.012,56,1.038,65,1.369,70,1.654,74,3.465,75,1.545,78,1.515,82,1.469,83,0.839,84,1.15,89,0.819,95,1.469,96,1.533,98,2.031,128,2.346,137,3.324,138,2.805,140,3.041,142,2.777,144,3.212,146,4.212,147,3.263,179,1.73,203,2.805,204,1.73,205,2.138,216,3.482,217,3.041,218,2.999,220,2.561,221,4.5,223,4.739,242,3.263,265,2.138,266,2.876,271,1.73,275,4.035,276,2.836,277,2.561,278,3.263,279,3.593,280,4.706,281,3.593,282,4.706,283,2.592,284,4.706,285,5.053,286,3.354,287,3.354,288,3.354,289,3.354,290,2.138,291,3.593,292,2.78,293,5.053,294,5.053,295,3.354,296,3.354,297,2.876,298,3.354,299,2.138,300,2.561,301,3.354,302,3.354,303,3.354,304,1.73,305,1.533,306,1.981]],["title/interfaces/ContentContainer.html",[0,0.204,203,1.954]],["body/interfaces/ContentContainer.html",[0,0.329,2,0.506,3,0.506,4,0.434,10,0.469,19,0.622,20,2.49,25,0.972,26,0.02,40,0.622,44,0.469,49,1.191,52,0.016,53,0.016,83,1.087,89,1.215,128,2.146,134,4.244,138,2.565,191,4.656,203,3.146,204,2.565,291,4.656,307,4.263,308,6.098,309,5.896,310,5.896,311,6.098]],["title/directives/ContentContainerDirective.html",[16,0.973,159,2.086]],["body/directives/ContentContainerDirective.html",[2,0.383,3,0.383,4,0.328,10,0.355,14,1.85,16,1.806,19,0.47,25,0.812,26,0.02,28,3.656,31,1.601,34,0.566,39,1.03,40,0.722,44,0.355,49,1.125,52,0.013,53,0.013,56,1.123,78,0.967,82,1.017,83,1.03,84,0.919,89,0.919,95,1.377,96,2.327,128,2.671,133,3.477,134,3.938,137,2.47,138,3.193,140,3.193,142,3.033,158,3.409,159,2.806,172,3.247,203,2.979,204,3.193,205,2.398,219,2.198,234,2.806,264,3.225,276,2.327,309,3.225,310,4.367,312,3.225,313,2.198,314,1.941,315,3.247,316,3.945,317,3.181,318,3.225,319,4.951,320,5.093,321,4.367,322,3.762,323,2.872,324,3.762,325,3.225,326,3.762]],["title/directives/ContentDirective.html",[16,0.973,234,2.086]],["body/directives/ContentDirective.html",[2,0.488,3,0.488,4,0.419,10,0.453,14,1.783,16,1.856,25,0.765,26,0.02,34,0.722,39,0.856,40,0.6,44,0.453,52,0.015,53,0.015,56,1.058,70,1.533,82,1.297,83,0.856,84,1.172,89,1.172,128,2.575,133,2.893,142,2.931,144,4.311,172,3.803,234,3.286,276,2.726,283,2.643,314,2.476,315,3.803,316,3.803,327,4.115,328,4.555,329,4.799,330,4.799]],["title/classes/DefaultContentConductorService.html",[34,0.57,259,2.626]],["body/classes/DefaultContentConductorService.html",[2,0.192,3,0.192,4,0.164,10,0.178,17,0.956,19,0.549,20,1.242,21,2.129,22,1.939,25,1.037,26,0.02,34,0.66,39,1.16,40,0.602,44,0.178,49,1.174,51,2.103,52,0.008,53,0.008,56,0.671,75,0.864,78,1.601,82,1.616,83,1.039,84,1.423,87,1.562,88,0.729,89,0.46,95,0.822,96,3.108,102,0.563,115,3.923,127,3.91,128,2.838,130,1.439,132,2.985,133,2.965,137,2.336,142,3.111,144,2.846,146,3.454,151,3.764,152,4.13,153,4.13,154,2.608,155,4.138,156,5.693,160,4.13,163,1.616,173,1.616,181,2.608,183,2.608,185,1.616,186,1.616,187,4.13,188,4.13,194,3.279,200,2.608,203,0.972,204,0.972,205,1.201,209,1.616,211,1.616,219,1.894,220,1.439,221,2.322,223,2.92,257,2.322,259,2.109,261,2.322,263,5.475,265,1.939,277,1.439,290,3.712,292,2.593,331,2.322,332,3.041,333,4.389,334,4.389,335,3.824,336,1.884,337,1.884,338,1.884,339,1.884,340,4.138,341,1.884,342,1.884,343,1.884,344,1.884,345,1.884,346,1.884,347,1.884,348,1.884,349,1.884,350,1.884,351,1.884,352,1.884,353,1.884,354,1.439,355,0.861,356,1.884,357,1.884,358,1.884,359,3.824,360,1.884,361,4.389,362,1.884,363,3.041,364,3.041,365,3.041,366,3.041,367,1.939,368,1.884,369,1.439,370,3.041,371,3.041,372,1.884,373,1.884,374,1.884,375,1.884,376,1.884,377,1.884,378,1.884,379,1.884,380,1.884,381,1.884,382,1.884,383,3.712,384,3.041,385,2.985,386,5.639,387,2.608,388,1.884,389,1.884,390,1.884,391,1.884,392,3.041,393,1.884,394,3.041,395,1.884,396,1.884,397,1.884,398,3.041,399,3.041,400,1.616,401,3.041]],["title/classes/DefaultDynamicAnimationsHandlerService.html",[34,0.57,402,2.626]],["body/classes/DefaultDynamicAnimationsHandlerService.html",[1,2.397,2,0.237,3,0.237,4,0.204,5,0.848,7,1.642,8,1.285,10,0.22,12,1.77,17,1.132,18,1.82,19,0.292,20,1.47,21,2.397,25,0.969,26,0.02,33,2.436,34,0.542,35,1.911,39,1.112,40,0.736,41,2.92,42,1.858,43,1.781,44,0.22,48,2.749,49,0.901,51,2.305,52,0.009,53,0.009,56,0.794,60,2,61,2.749,62,2.749,63,1.007,64,1.204,66,1.393,67,2.647,71,2.55,72,1.378,75,1.023,76,2,78,1.451,82,1.526,83,1.007,84,1.379,87,1.795,88,0.902,95,0.973,96,3.202,102,1.478,116,3.049,219,2.133,355,1.066,383,2.802,402,2.496,403,5.461,404,4.863,405,2,406,2.756,407,1.858,408,3.087,409,4.943,410,4.943,411,3.6,412,4.396,413,3.087,414,3.087,415,2,416,3.049,417,2.91,418,3.357,419,2.55,420,3.357,421,3.6,422,2.333,423,3.6,424,2.333,425,2.333,426,2.333,427,2.333,428,2.333,429,2.333,430,3.6,431,2.333,432,3.6,433,2.333,434,1.204,435,1.618,436,1.204,437,1.618,438,1.618,439,2.333,440,2.333,441,2.333,442,2.333,443,2.333,444,2.333,445,4.238,446,3.6,447,2.333,448,4.943,449,2.333,450,3.6,451,3.6,452,3.087,453,3.77,454,2.333,455,3.6,456,2,457,2.333,458,2.333,459,2.333,460,2.333,461,2.333,462,2,463,2.333,464,2.333]],["title/classes/DefaultDynamicComponentSerializer.html",[34,0.57,465,2.626]],["body/classes/DefaultDynamicComponentSerializer.html",[2,0.394,3,0.394,4,0.338,5,0.835,10,0.366,15,1.611,17,1.634,18,1.836,19,0.485,25,0.999,26,0.02,34,0.782,39,1.046,40,0.733,44,0.366,49,0.989,52,0.013,53,0.013,56,0.855,75,1.78,78,1.61,82,1.693,83,1.046,84,1.432,87,2.122,95,1.405,121,3.168,123,2,176,2.375,219,2.704,271,2,283,2.135,290,2.47,355,1.771,465,3.603,466,5.371,467,4.783,468,3.323,469,3.37,470,2.704,471,3.973,472,4.456,473,4.456,474,3.875,475,3.875,476,4.456,477,4.456,478,3.875,479,3.323,480,4.456,481,3.875,482,2.29,483,2,484,2.959,485,5.196,486,3.875,487,3.875]],["title/directives/DynamicAnimationsDirective.html",[16,0.973,407,1.954]],["body/directives/DynamicAnimationsDirective.html",[0,0.14,2,0.157,3,0.157,4,0.135,5,0.836,7,1.896,10,0.368,12,1.743,15,1.033,16,1.476,18,1.001,19,0.193,20,1.056,24,1.296,25,0.956,26,0.02,33,2.022,34,0.705,35,1.848,37,2.691,38,1.425,39,1.185,40,0.677,44,0.146,49,1.059,51,1.913,52,0.007,53,0.007,56,0.571,59,0.707,66,2.017,67,1.056,75,0.735,78,1.34,82,1.172,83,1.069,84,1.324,87,0.632,88,1.813,89,0.378,96,3.113,102,1.165,105,3.798,106,1.794,109,1.425,110,1.529,115,2.302,158,1.425,165,2.388,169,1.335,171,2.483,176,1.182,179,1.335,192,2.125,199,1.794,202,2.483,219,1.117,224,1.001,240,1.794,244,1.975,272,1.529,276,1.78,292,1.529,304,0.798,305,0.707,306,0.914,313,1.117,314,2.566,315,1.649,316,1.649,317,3.081,323,1.182,355,0.707,367,3.565,406,2.01,407,1.335,415,1.327,416,2.312,417,1.523,434,0.798,435,1.073,436,0.798,445,1.327,452,1.327,453,1.327,488,3.458,489,1.327,490,2.587,491,1.975,492,2.587,493,1.794,494,1.975,495,2.74,496,2.587,497,1.649,498,2.561,499,2.587,500,1.975,501,3.171,502,2.218,503,2.218,504,2.587,505,1.975,506,1.975,507,3.334,508,2.859,509,2.587,510,3.896,511,3.896,512,3.896,513,2.587,514,2.587,515,3.341,516,3.896,517,3.334,518,2.302,519,3.334,520,2.302,521,3.334,522,2.302,523,2.302,524,2.587,525,2.587,526,3.334,527,2.587,528,2.587,529,1.548,530,4.265,531,2.587,532,1.548,533,4.265,534,1.548,535,1.548,536,1.548,537,1.548,538,1.548,539,1.548,540,1.548,541,1.548,542,1.548,543,1.327,544,2.312,545,1.649,546,1.327,547,1.182,548,1.327,549,1.327,550,1.073,551,1.327,552,1.548,553,1.548,554,1.548,555,3.31,556,1.548,557,1.327,558,3.341,559,1.327,560,2.218,561,1.327,562,1.327,563,1.327,564,1.548,565,2.218,566,2.218,567,1.548,568,1.327,569,1.327,570,1.548,571,2.546,572,1.548,573,1.548,574,2.587,575,1.548,576,1.548,577,1.548,578,1.548,579,2.587,580,1.548,581,1.548,582,1.548,583,1.548,584,1.548,585,1.548,586,1.548,587,1.548,588,1.548,589,1.548,590,1.548,591,1.548,592,1.548,593,1.327,594,1.548,595,1.548,596,1.182,597,1.548]],["title/interfaces/DynamicAnimationsHandler.html",[0,0.204,406,1.954]],["body/interfaces/DynamicAnimationsHandler.html",[0,0.335,2,0.386,3,0.386,4,0.331,5,0.505,7,1.846,10,0.358,12,1.669,14,1.531,15,1.13,16,1.316,17,1.611,19,0.474,20,2.092,21,3.011,23,3.911,24,2.077,25,0.99,26,0.02,27,3.911,28,3.026,33,2.68,34,0.77,35,2.039,38,2.822,40,0.64,44,0.358,48,4.742,49,0.864,51,2.536,52,0.013,53,0.013,61,2.211,62,2.211,63,1.637,64,1.957,67,1.549,102,1.734,169,2.643,171,3.265,176,2.341,245,3.026,313,2.68,355,1.734,406,2.643,413,5.325,414,5.325,417,2.341,434,1.957,436,1.957,488,2.09,598,3.253,599,4.392,600,3.911,601,3.265,602,5.122,603,5.122,604,5.122,605,5.122,606,3.911,607,3.794]],["title/interfaces/DynamicAnimationsHandlerConstructor.html",[0,0.204,608,2.414]],["body/interfaces/DynamicAnimationsHandlerConstructor.html",[0,0.315,2,0.471,3,0.471,4,0.404,5,0.616,7,1.576,10,0.437,11,3.008,12,1.75,18,1.189,26,0.02,30,2.664,33,2.893,35,1.454,40,0.864,42,2.386,44,0.437,49,0.78,52,0.015,53,0.015,56,1.286,57,4.452,61,2.516,62,2.516,63,1.996,64,2.386,65,1.889,66,1.789,67,1.889,71,2.386,72,2.733,355,2.114,406,2.386,416,3.207,417,2.664,418,3.532,419,3.008,420,3.532,434,2.386,435,3.207,436,2.386,437,3.207,438,3.207,488,2.548,608,3.716,609,3.966,610,4.452,611,3.966,612,4.625]],["title/modules/DynamicAnimationsModule.html",[224,1.465,613,2.626]],["body/modules/DynamicAnimationsModule.html",[1,1.965,2,0.277,3,0.277,4,0.238,5,0.363,7,1.678,8,2.232,10,0.257,12,1.71,14,1.211,16,1.041,17,2.085,18,1.704,24,1.211,26,0.02,33,1.749,34,0.41,40,0.868,42,1.407,44,0.566,52,0.011,53,0.011,54,2.583,71,3.093,72,1.611,75,1.152,78,0.701,87,2.186,89,0.666,90,2.81,91,2.338,92,2.338,95,1.546,141,2.232,169,2.09,219,2.31,224,2.071,226,1.611,227,1.891,228,3.353,229,1.891,235,2.81,236,1.891,237,1.738,242,2.81,247,2.596,248,2.81,251,3.094,255,3.692,260,2.81,267,3.692,268,3.094,272,2.857,274,3.094,305,1.852,314,2.09,331,3.094,402,3.712,404,2.082,406,2.09,407,3.583,419,3.093,434,2.09,437,1.891,438,1.891,488,1.502,495,2.232,497,2.583,518,3.541,520,3.541,522,3.541,523,4.024,543,2.338,544,2.81,545,1.738,546,2.338,549,2.338,550,1.891,551,2.338,599,3.474,608,2.583,613,5.015,614,2.338,615,2.338,616,2.338,617,2.338,618,2.726,619,4.052,620,4.59,621,4.052,622,2.583,623,2.338,624,2.726,625,2.81,626,2.338,627,2.338,628,2.726,629,2.726,630,3.474,631,4.052]],["title/injectables/DynamicAnimationsService.html",[70,0.973,518,2.237]],["body/injectables/DynamicAnimationsService.html",[1,3.124,2,0.287,3,0.287,4,0.247,5,0.658,7,1.641,10,0.393,12,1.708,14,1.628,15,0.917,16,1.069,18,1.269,19,0.353,24,0.845,25,0.663,26,0.02,31,1.712,32,2.292,33,2.35,34,0.425,35,1.974,39,0.742,40,0.822,42,1.458,44,0.267,49,0.833,52,0.011,53,0.011,56,0.917,61,2.621,62,2.621,63,1.219,64,1.458,65,1.154,66,2.654,67,2.37,70,1.4,71,2.81,72,1.669,74,2.652,75,1.548,77,2.458,78,1.269,82,1.124,83,0.742,84,1.016,87,1.154,88,1.093,89,0.69,95,1.641,96,2.256,98,2.505,117,2.884,158,2.292,168,2.292,176,2.489,245,2.458,247,2.641,276,1.901,279,3.176,281,3.176,297,2.422,299,1.801,300,2.157,355,1.291,406,3.393,416,4.025,417,2.775,418,3.77,419,2.81,420,3.77,434,2.547,435,1.959,436,1.458,437,1.959,438,1.959,456,2.422,462,2.422,488,2.72,506,2.157,518,3.43,608,3.471,610,3.176,611,4.977,623,2.422,625,1.959,626,2.422,630,3.567,632,2.422,633,3.567,634,3.567,635,5.446,636,2.825,637,2.825,638,2.825,639,2.825,640,2.157,641,2.825,642,2.825,643,2.825,644,2.825]],["title/interfaces/DynamicComponentData.html",[0,0.204,645,2.414]],["body/interfaces/DynamicComponentData.html",[0,0.313,2,0.467,3,0.467,4,0.4,5,0.611,10,0.433,14,1.734,15,1.474,18,1.491,19,0.574,20,2.369,25,0.925,26,0.02,32,2.528,40,0.574,44,0.433,49,1.073,52,0.015,53,0.015,83,1.192,84,1.417,109,3.196,178,3.196,222,4.975,239,4.43,240,4.023,470,2.885,645,3.698,646,1.981,647,3.505,648,3.935,649,4.975,650,5.802,651,4.023,652,5.802,653,4.975,654,5.802,655,4.975,656,5.017,657,3.505,658,3.935]],["title/directives/DynamicComponentDirective.html",[16,0.973,659,2.237]],["body/directives/DynamicComponentDirective.html",[0,0.119,2,0.131,3,0.131,4,0.112,5,0.807,10,0.429,14,1.435,15,1.522,16,1.509,17,1.736,18,1.452,19,0.161,20,2.049,21,1.071,25,0.919,26,0.02,31,1.51,32,2.505,34,0.193,39,1.094,40,0.628,44,0.121,51,1.96,52,0.006,53,0.006,56,0.937,65,1.409,66,0.855,75,0.628,77,1.305,78,1.509,82,1.357,83,1.064,84,1.226,87,0.902,88,1.942,89,0.314,95,1.658,96,1.941,98,1.963,102,1.27,121,2.205,123,0.663,134,2.51,141,1.217,149,1.687,158,2.765,165,1.901,167,1.894,168,1.217,171,2.2,176,1.941,178,1.217,190,1.687,192,1.408,219,0.954,247,1.071,248,1.532,256,2.697,271,0.663,276,0.587,283,1.217,292,1.305,299,2.479,304,0.663,305,0.587,306,0.759,313,1.678,314,0.663,315,1.408,316,2.708,317,2.869,318,1.102,321,1.894,323,0.981,325,1.102,340,4.683,354,0.981,367,2.2,385,0.708,469,2.006,470,1.678,483,0.663,484,0.981,495,1.217,497,2.2,506,1.687,508,2.492,555,2.635,571,1.687,622,2.2,646,2.613,651,3.153,656,2.945,657,0.981,658,1.102,659,2.837,660,1.102,661,2.209,662,1.894,663,3.612,664,2.96,665,2.393,666,1.687,667,1.894,668,2.492,669,1.901,670,2.209,671,1.894,672,2.209,673,2.209,674,3.199,675,4.117,676,1.687,677,2.96,678,1.894,679,1.894,680,1.894,681,1.894,682,1.894,683,2.945,684,1.894,685,1.894,686,1.532,687,2.209,688,1.894,689,2.209,690,3.452,691,1.894,692,2.51,693,1.532,694,2.209,695,2.209,696,2.209,697,3.889,698,6.662,699,3.452,700,3.452,701,3.452,702,2.209,703,2.209,704,2.209,705,2.907,706,2.209,707,3.452,708,2.209,709,2.209,710,3.452,711,1.285,712,2.209,713,1.285,714,2.209,715,2.635,716,1.285,717,2.393,718,3.452,719,1.894,720,1.894,721,2.209,722,1.285,723,1.894,724,2.969,725,2.209,726,1.285,727,2.209,728,2.209,729,1.285,730,5.208,731,3.889,732,1.285,733,2.209,734,2.209,735,1.285,736,2.209,737,1.285,738,2.209,739,1.285,740,2.209,741,1.285,742,2.209,743,1.285,744,2.907,745,3.452,746,1.285,747,1.285,748,1.285,749,1.285,750,1.285,751,2.635,752,1.285,753,0.981,754,1.285,755,0.981,756,1.102,757,0.891,758,0.981,759,1.102,760,1.285,761,1.285,762,1.285,763,1.285,764,1.285,765,1.285,766,1.285,767,1.285,768,1.285,769,2.209,770,2.209,771,1.285,772,1.285,773,1.285,774,1.285,775,1.285,776,1.285,777,2.209,778,1.285,779,1.285,780,1.285,781,1.285,782,1.285,783,1.285,784,1.285,785,2.209,786,1.285,787,1.285,788,1.285,789,1.285,790,1.285,791,1.285,792,1.285,793,1.285,794,1.285,795,1.285,796,1.285,797,1.285,798,1.285,799,1.285,800,1.285,801,1.285,802,1.285,803,1.285,804,1.285,805,1.285,806,1.285,807,1.285,808,1.285]],["title/interfaces/DynamicComponentModel.html",[0,0.204,674,2.414]],["body/interfaces/DynamicComponentModel.html",[0,0.297,2,0.431,3,0.431,4,0.369,5,0.564,10,0.4,15,1.52,17,2.238,18,1.574,19,0.529,20,2.249,25,0.976,26,0.02,31,1.732,40,0.811,44,0.4,52,0.014,53,0.014,84,1.739,89,1.034,95,1.144,313,2.377,317,3.866,645,4.286,646,1.827,647,3.232,651,3.819,663,3.819,674,3.511,683,4.935,715,4.952,717,3.819,724,4.205,751,4.205,753,3.232,755,3.232,756,3.629,757,2.935,758,3.232,759,3.629,809,3.629,810,4.723,811,6.485,812,4.723,813,4.232]],["title/interfaces/DynamicComponentSerializer.html",[0,0.204,469,1.954]],["body/interfaces/DynamicComponentSerializer.html",[0,0.31,2,0.46,3,0.46,4,0.394,5,0.842,10,0.427,15,1.606,19,0.565,25,1.007,26,0.019,39,1.025,40,0.565,44,0.427,49,1.183,52,0.015,53,0.015,56,1.267,75,1.633,78,1.477,82,1.707,83,1.185,84,1.404,121,3.401,123,2.332,148,3.395,247,2.786,271,2.332,290,2.881,469,2.965,470,2.48,472,4.927,473,4.927,477,4.927,479,3.876,480,4.927,483,3.259,646,2.726,814,3.876,815,4.52,816,4.52,817,4.52]],["title/interfaces/DynamicComponentSerializerConstructor.html",[0,0.204,818,2.414]],["body/interfaces/DynamicComponentSerializerConstructor.html",[0,0.336,2,0.522,3,0.522,4,0.447,5,0.683,10,0.484,15,1.615,18,1.597,26,0.02,40,0.777,44,0.484,52,0.016,53,0.016,56,1.37,125,4.309,355,2.343,469,2.646,470,3,471,3.03,482,3.03,483,2.646,484,3.915,646,2.213,818,3.961,819,4.397,820,5.128,821,5.128]],["title/interfaces/DynamicComponentSerializerMap.html",[0,0.204,471,2.237]],["body/interfaces/DynamicComponentSerializerMap.html",[0,0.322,2,0.488,3,0.488,4,0.419,5,0.639,10,0.453,11,3.078,15,1.541,19,0.6,20,2.436,25,0.951,26,0.02,30,2.726,34,0.897,40,0.6,44,0.453,49,1.007,52,0.015,53,0.015,83,1.064,102,2.129,121,2.327,123,2.476,131,3.059,148,3.525,247,2.893,271,2.476,470,2.931,471,3.525,482,2.835,646,2.071,692,3.525,822,5.824,823,5.824]],["title/injectables/DynamicComponentSerializerService.html",[70,0.973,669,2.086]],["body/injectables/DynamicComponentSerializerService.html",[2,0.399,3,0.399,4,0.342,5,0.785,10,0.37,15,1.629,18,1.734,19,0.49,25,0.834,26,0.02,31,1.646,34,0.589,39,0.933,40,0.843,44,0.37,49,0.883,52,0.014,53,0.014,56,1.154,65,2.407,70,1.617,75,1.488,78,1.345,82,1.415,83,1.169,84,1.279,89,0.957,96,1.79,102,1.762,121,1.9,123,2.021,271,2.021,299,3.337,355,2.392,385,2.158,470,2.715,471,3.093,476,3.359,482,3.093,483,3.041,646,2.544,669,2.884,818,4.01,822,3.359,823,3.359,824,3.359,825,4.488,826,3.918,827,3.918,828,5.234,829,5.234,830,4.01,831,3.918,832,2.717,833,3.359,834,3.359,835,3.918,836,3.918,837,3.918,838,3.918,839,3.918,840,3.918]],["title/interfaces/DynamicComponentsMap.html",[0,0.204,830,2.414]],["body/interfaces/DynamicComponentsMap.html",[0,0.334,2,0.519,3,0.519,4,0.445,5,0.825,10,0.481,15,1.613,19,0.637,26,0.019,39,0.909,40,0.637,44,0.481,49,1.125,52,0.016,53,0.016,56,1.366,83,1.104,102,1.851,121,3.234,123,2.631,131,3.25,135,4.372,271,2.631,482,3.659,646,2.673,830,3.947,841,5.099,842,5.099]],["title/modules/DynamicComponentsModule.html",[224,1.465,843,2.626]],["body/modules/DynamicComponentsModule.html",[2,0.33,3,0.33,4,0.283,5,0.431,10,0.306,14,1.372,15,1.596,16,1.18,17,2.057,18,1.772,26,0.02,31,1.444,34,0.802,40,0.836,44,0.601,49,0.775,52,0.012,53,0.012,75,1.305,78,0.832,83,0.819,87,2.178,89,0.791,95,1.442,102,1.372,168,2.529,169,2.369,219,2.746,224,2.245,226,1.913,227,2.246,228,3.698,229,2.246,235,3.184,236,2.246,237,2.064,247,2.226,255,4.073,256,3.184,258,3.184,260,3.184,267,4.073,268,3.506,272,1.913,274,2.473,278,3.184,317,2.529,331,3.506,465,4.024,467,2.473,469,2.369,470,1.398,483,2.752,494,3.506,622,2.927,633,3.937,646,1.398,659,4.225,663,3.184,669,3.505,692,2.712,757,3.184,818,2.927,832,3.184,833,2.777,834,2.777,843,4.781,844,2.777,845,2.777,846,2.777,847,2.777,848,3.239,849,4.591,850,4.591,851,4.591,852,2.777,853,3.239,854,3.239,855,4.591]],["title/directives/LeaveDirective.html",[16,0.973,523,2.237]],["body/directives/LeaveDirective.html",[2,0.323,3,0.323,4,0.277,5,0.702,10,0.299,12,1.714,16,1.562,18,1.764,19,0.396,24,1.352,25,0.721,26,0.02,34,0.477,35,1.657,36,2.882,37,2.333,39,1.025,40,0.565,44,0.498,49,0.889,51,1.846,52,0.012,53,0.012,59,1.449,66,1.749,67,1.294,75,1.285,78,1.162,82,0.857,83,0.565,84,0.774,87,1.294,88,1.749,89,0.774,95,0.857,98,2.275,176,2.626,179,2.333,180,2.42,192,2.882,245,2.671,247,2.193,258,3.135,272,2.671,279,3.453,281,3.453,313,1.368,314,1.635,315,2.882,383,3.36,385,1.746,407,2.333,493,2.198,495,2.491,498,3.928,501,4.027,523,2.671,600,3.453,601,4.509,640,3.453,655,3.877,693,3.135,856,2.198,857,4.824,858,6.648,859,4.522,860,4.522,861,4.522,862,4.522,863,4.522,864,4.522,865,3.877,866,3.453,867,4.522,868,4.522,869,4.522,870,4.522,871,5.747,872,4.522,873,5.271,874,3.17,875,4.522,876,3.17,877,3.17,878,3.17,879,3.17,880,3.877,881,2.718,882,2.718,883,2.718]],["title/injectables/NgStateService.html",[70,0.973,522,2.237]],["body/injectables/NgStateService.html",[2,0.442,3,0.442,4,0.379,5,0.826,7,1.514,10,0.529,12,1.062,19,0.543,25,0.693,26,0.02,30,2.56,34,0.654,39,0.999,40,0.775,44,0.41,52,0.015,53,0.015,56,1.367,59,1.986,62,3.048,63,1.875,64,2.242,70,1.593,75,1.592,78,1.593,82,1.174,83,0.775,84,1.062,89,1.062,95,1.514,98,1.875,102,1.299,165,3.086,314,3.38,522,3.31,530,5.952,550,4.3,884,4.3,885,3.726,886,5.952,887,5.602,888,4.345,889,5.602,890,4.345,891,4.345,892,4.345,893,4.345]],["title/injectables/NgTransitionService.html",[70,0.973,520,2.237]],["body/injectables/NgTransitionService.html",[2,0.293,3,0.293,4,0.252,5,0.733,7,1.142,10,0.472,12,0.705,17,1.328,19,0.361,25,0.673,26,0.02,30,1.93,34,0.434,35,2.187,39,0.891,40,0.732,44,0.272,49,0.487,52,0.011,53,0.011,56,1.102,59,1.318,61,2.853,63,1.245,64,1.488,70,1.284,75,1.2,78,1.572,82,1.142,83,0.753,84,1.032,89,0.705,95,1.351,96,2.514,98,1.823,114,3.225,116,2,165,3.03,305,1.93,383,1.839,385,3.481,387,2.473,520,2.495,533,6.134,544,2.929,545,3.506,547,2.202,548,2.473,593,2.473,884,3.814,886,5.556,894,2.473,895,2.929,896,4.223,897,4.223,898,2.884,899,4.223,900,2.884,901,3.621,902,4.223,903,2.884,904,4.223,905,4.223,906,4.2,907,4.223,908,4.223,909,2.473,910,2.884,911,2.884,912,2.884,913,2.884,914,2.884,915,2.884,916,4.223,917,2.884,918,2.884,919,2.884,920,2.884,921,2.884,922,2.884,923,2.884,924,2.884,925,4.223,926,4.223,927,4.223,928,4.223,929,2.884,930,2.884,931,2.884,932,2.884,933,2.884,934,2.884,935,2.884,936,2.884,937,2.884,938,2.884,939,2.884,940,2.884,941,2.884,942,2.884,943,2.884,944,2.884,945,4.223,946,2.884,947,2.884,948,2.884,949,4.223]],["title/interfaces/StateCSSMap.html",[0,0.204,417,1.73]],["body/interfaces/StateCSSMap.html",[0,0.334,2,0.517,3,0.517,4,0.444,5,0.824,7,1.671,10,0.48,12,1.627,19,0.636,26,0.018,33,3.065,34,1.002,35,1.944,37,2.623,38,3.405,39,0.907,44,0.48,45,3.526,49,1.124,52,0.016,53,0.016,65,2.076,66,1.967,102,1.52,112,3.882,131,3.241,179,2.623,417,2.825,436,3.19,950,4.287,951,5.084,952,3.882,953,5.084,954,5.084]],["title/interfaces/StateCSSMapper.html",[0,0.204,41,2.237]],["body/interfaces/StateCSSMapper.html",[0,0.294,2,0.424,3,0.424,4,0.363,5,0.555,7,1.808,10,0.393,11,2.148,14,1.629,19,0.521,20,2.225,21,3.125,24,2.12,25,1.027,26,0.02,27,4.161,28,3.219,30,1.903,33,3.095,34,1.052,39,1.224,41,3.219,42,2.148,44,0.393,45,2.887,49,0.702,51,2.48,52,0.014,53,0.014,77,3.807,83,0.743,95,1.642,102,1.245,179,3.659,202,4.374,417,3.136,950,2.887,955,3.57,956,5.526,957,4.672,958,4.163]],["title/injectables/StateCssMapperService.html",[70,0.973,419,1.954]],["body/injectables/StateCssMapperService.html",[2,0.327,3,0.327,4,0.281,5,0.771,7,1.901,10,0.502,19,0.402,21,1.559,25,0.847,26,0.02,31,1.819,33,3.161,34,1.021,38,3.186,39,1.09,40,0.664,41,3.139,42,2.984,43,2.455,44,0.304,45,3.167,49,0.771,52,0.012,53,0.012,56,0.709,66,2.581,70,1.365,74,2.912,75,1.298,77,3.75,78,1.486,82,1.436,83,0.947,84,1.298,89,0.786,95,1.235,98,2.496,102,2.029,143,3.488,168,2.516,179,2.741,199,3.167,202,2.05,245,2.699,247,2.215,283,1.771,355,1.469,383,2.05,417,3.241,419,2.357,436,1.659,950,4.011,956,2.757,957,3.917,959,2.757,960,4.568,961,4.568,962,3.215,963,5.784,964,3.215,965,4.568,966,4.568,967,3.215,968,3.215,969,3.215,970,3.917,971,3.215,972,3.215,973,4.568,974,3.215,975,3.215,976,3.215,977,3.215,978,3.215,979,3.215]],["title/coverage.html",[980,4.387]],["body/coverage.html",[0,0.381,1,1.188,4,0.214,5,0.984,6,3.171,7,1.668,8,2.497,9,2.101,12,1.577,15,1.548,16,1.404,18,1.304,24,0.733,25,0.391,26,0.019,33,2.485,34,0.763,41,1.448,42,1.929,52,0.01,53,0.01,54,1.562,55,2.101,61,1.058,62,1.058,63,1.614,65,1.001,70,1.539,71,1.264,72,1.448,73,2.101,90,1.699,101,2.855,121,1.188,122,2.101,123,1.264,124,2.855,127,1.699,128,2.73,129,2.101,130,1.871,131,3.233,137,1.188,138,2.97,139,2.101,140,1.264,142,1.614,159,1.35,191,1.871,203,1.264,204,1.929,216,1.448,217,2.617,218,2.383,234,1.35,259,1.699,263,2.855,265,1.562,277,2.855,307,2.101,312,2.101,327,2.101,400,2.101,402,1.699,403,3.206,404,1.871,405,2.101,406,1.264,407,1.264,417,1.12,419,1.264,434,2.339,436,1.264,465,1.699,466,2.101,467,1.871,468,2.101,469,1.264,470,1.614,471,1.448,482,2.209,483,2.617,488,3.009,489,2.101,501,2.383,518,1.448,520,1.448,522,1.448,523,1.448,545,1.562,550,1.699,598,2.101,608,1.562,609,2.101,620,2.101,625,1.699,627,2.101,632,2.101,645,1.562,646,2.73,647,1.871,648,2.101,659,1.448,660,2.101,669,1.35,674,1.562,753,1.871,809,2.101,814,2.101,818,1.562,819,2.101,824,2.101,830,1.562,832,1.699,856,3.144,884,2.593,885,2.101,894,2.101,950,3.144,955,2.101,959,2.101,980,2.101,981,1.871,982,2.451,983,7.097,984,6.924,985,2.101,986,4.396,987,2.451,988,5.462,989,5.462,990,5.757,991,5.757,992,2.451,993,2.451,994,2.451,995,2.451,996,2.451,997,2.101,998,2.451,999,2.451,1000,2.451,1001,2.451,1002,2.451,1003,3.739,1004,2.101,1005,2.451,1006,2.451,1007,2.101,1008,3.206,1009,2.101,1010,2.101,1011,2.451,1012,2.101,1013,3.739,1014,3.739,1015,3.739,1016,3.739,1017,2.101,1018,2.451,1019,2.451,1020,2.451,1021,2.451]],["title/dependencies.html",[226,2.682,1022,3.188]],["body/dependencies.html",[18,1.345,26,0.02,52,0.016,53,0.016,59,2.391,89,1.278,226,3.092,304,3.245,354,3.995,852,4.487,1023,7.464,1024,5.233,1025,5.233,1026,5.233,1027,6.29,1028,5.233,1029,5.233,1030,5.233,1031,5.233,1032,5.233,1033,5.233,1034,5.233]],["title/miscellaneous/enumerations.html",[1035,1.645,1036,3.893]],["body/miscellaneous/enumerations.html",[5,0.824,7,1.374,12,1.51,14,1.52,19,0.636,26,0.018,35,1.599,51,2.524,52,0.016,53,0.016,88,2.853,125,3.526,495,3.405,498,3.652,545,3.94,547,4.72,596,4.72,884,4.287,906,3.882,909,5.301,1035,2.623,1036,4.36,1037,6.182,1038,6.182,1039,6.182,1040,5.084,1041,5.084,1042,5.084,1043,5.084,1044,4.36,1045,5.084,1046,4.36]],["title/miscellaneous/functions.html",[24,1.357,1035,1.645]],["body/miscellaneous/functions.html",[5,0.731,10,0.518,12,1.341,19,0.686,24,1.935,25,0.875,26,0.018,35,1.726,52,0.017,53,0.017,82,1.484,83,0.979,84,1.341,180,4.191,313,2.369,498,3.243,601,4.387,856,3.806,857,4.191,880,4.706,1012,5.549,1035,2.832,1047,4.706]],["title/index.html",[19,0.399,110,1.883,1048,2.734]],["body/index.html",[12,1.169,15,1.539,16,1.666,17,1.505,18,1.744,24,1.431,26,0.015,31,1.505,36,3.051,52,0.015,53,0.015,110,2.827,132,2.636,141,2.636,142,2.066,162,3.654,217,2.469,243,4.104,261,3.654,300,3.654,313,2.066,316,3.797,408,4.104,495,2.636,544,4.13,693,3.319,901,5.818,981,4.548,1049,4.786,1050,4.786,1051,5.956,1052,4.786,1053,4.786,1054,4.104,1055,6.485,1056,4.786,1057,4.104,1058,4.104,1059,4.104,1060,4.104,1061,4.786,1062,4.104,1063,4.786,1064,4.786,1065,4.786,1066,5.956,1067,4.786,1068,5.956,1069,4.786,1070,4.786,1071,4.786,1072,5.956,1073,4.786,1074,4.786,1075,4.786]],["title/license.html",[110,1.883,1048,2.734,1076,2.734]],["body/license.html",[4,0.397,14,1.726,17,1.432,26,0.015,52,0.015,53,0.015,117,3.158,150,4.409,237,2.903,369,3.478,503,3.905,640,4.84,676,3.478,906,3.478,981,3.478,1054,3.905,1058,3.905,1076,3.905,1077,4.555,1078,6.339,1079,4.555,1080,4.555,1081,5.774,1082,4.555,1083,4.555,1084,3.905,1085,4.555,1086,5.774,1087,4.555,1088,6.666,1089,7.292,1090,4.555,1091,5.774,1092,4.555,1093,5.436,1094,4.555,1095,4.555,1096,4.555,1097,4.555,1098,4.555,1099,4.555,1100,4.555,1101,4.555,1102,4.555,1103,4.555,1104,3.905,1105,3.905,1106,5.774,1107,5.774,1108,4.555,1109,4.555,1110,5.774,1111,4.555,1112,4.555,1113,4.555,1114,4.555,1115,3.905,1116,4.555,1117,4.555,1118,4.555,1119,4.555,1120,4.555,1121,4.555,1122,4.555,1123,4.555,1124,4.555,1125,4.555,1126,4.555,1127,4.555,1128,4.555]],["title/modules.html",[224,1.979]],["body/modules.html",[26,0.017,52,0.017,53,0.017,224,2.184,225,3.914,304,3.593,305,3.182,613,3.914,843,3.914,1129,6.963,1130,6.963]],["title/overview.html",[1131,4.387]],["body/overview.html",[0,0.218,16,1.039,17,1.271,26,0.019,34,0.608,44,0.382,52,0.014,53,0.014,70,1.039,71,3.089,140,3.089,159,3.824,224,2.067,225,4.992,226,2.388,227,2.802,228,2.802,229,2.802,230,3.465,231,3.465,232,3.465,233,3.465,234,3.824,235,3.705,236,2.802,237,2.576,407,3.581,419,3.089,518,3.537,520,3.537,522,3.537,523,4.101,613,5.193,614,3.465,615,3.465,616,3.465,617,3.465,659,4.101,669,3.298,843,4.813,844,3.465,845,3.465,846,3.465,847,3.465,1062,3.465,1131,3.465,1132,4.041,1133,4.041,1134,4.041,1135,4.041]],["title/miscellaneous/typealiases.html",[1035,1.645,1136,4.54]],["body/miscellaneous/typealiases.html",[5,0.845,19,0.569,20,2.722,24,1.362,25,1.178,26,0.015,52,0.015,53,0.015,88,2.234,95,1.561,102,1.895,108,5.366,169,2.35,290,4.384,313,2.492,369,4.409,656,4.396,657,3.478,665,3.158,683,4.396,715,4.84,717,3.158,723,4.951,755,3.478,758,3.478,1035,2.35,1057,4.951,1137,4.555,1138,4.555,1139,5.774,1140,4.555,1141,5.774,1142,6.339,1143,4.555,1144,6.666,1145,4.555,1146,5.774,1147,6.339,1148,4.555,1149,4.555,1150,4.555,1151,4.555,1152,5.774,1153,4.555,1154,4.555,1155,4.555]],["title/miscellaneous/variables.html",[986,3.467,1035,1.645]],["body/miscellaneous/variables.html",[5,0.868,6,2.121,7,1.689,8,2.121,11,1.987,12,1.703,13,2.67,14,1.151,15,1.378,19,0.481,25,0.825,26,0.02,30,1.76,34,0.579,35,1.211,51,1.572,52,0.013,53,0.013,56,1.141,57,3.951,65,2.551,67,1.572,70,1.33,87,2.741,88,2.597,90,4.052,98,1.662,109,2.85,128,1.662,138,1.987,216,2.275,217,3.015,218,2.454,219,1.662,257,4.77,265,3.725,434,1.987,470,1.662,483,1.987,488,2.121,498,2.275,501,4.278,601,3.298,606,2.94,610,2.94,625,4.052,646,1.662,692,2.275,832,4.052,856,2.67,857,2.94,881,3.302,882,3.302,883,3.302,985,4.436,986,2.94,997,4.436,1004,4.436,1007,3.302,1008,5.011,1009,3.302,1010,4.436,1017,4.436,1035,3.015,1047,3.302,1156,3.851,1157,3.851,1158,3.851,1159,5.174,1160,3.851,1161,3.851,1162,3.851,1163,3.851,1164,3.851,1165,3.851,1166,3.851,1167,3.851,1168,3.851]],["title/additional-documentation/content-conductor.html",[142,1.188,217,1.42,1169,1.626,1170,1.626]],["body/additional-documentation/content-conductor.html",[14,1.695,15,1.097,16,1.278,17,1.783,19,0.709,21,1.761,22,2.315,24,1.086,26,0.018,28,2.146,31,2.009,32,2.001,39,0.648,49,0.957,52,0.013,53,0.013,56,0.801,66,1.405,70,0.933,75,1.734,78,0.933,82,0.982,83,1.011,84,0.887,88,1.405,132,3.843,133,3.589,134,2.146,137,2.957,140,2.566,142,2.968,144,3.35,146,3.888,147,3.932,148,2.146,149,2.773,155,4.33,158,2.001,159,2.74,162,4.33,165,2.001,168,2.001,169,1.874,171,3.17,172,2.315,176,3.015,177,3.114,178,3.36,190,3.797,192,3.17,193,4.264,198,4.863,199,2.519,217,3.485,224,1.405,234,2.001,242,2.519,245,2.146,248,2.519,278,2.519,283,2.001,285,3.114,292,2.146,319,3.114,328,2.773,385,2.74,500,2.773,686,2.519,692,2.146,720,3.114,895,2.519,1059,3.114,1084,3.114,1171,4.973,1172,3.632,1173,2.773,1174,4.973,1175,3.632,1176,3.632,1177,3.632,1178,3.632,1179,3.632,1180,3.632,1181,3.632,1182,3.632,1183,3.632,1184,3.632,1185,3.632,1186,3.632,1187,3.632,1188,3.632,1189,3.632,1190,3.632,1191,3.632,1192,3.632,1193,3.632,1194,3.632,1195,3.114]],["title/additional-documentation/content-conductor/example.html",[276,1.457,1169,1.883,1170,1.883]],["body/additional-documentation/content-conductor/example.html",[26,0.017,52,0.017,53,0.017,304,3.037,305,2.689,306,3.477]],["title/additional-documentation/dynamic-animations.html",[12,0.673,18,0.707,1169,1.626,1170,1.626]],["body/additional-documentation/dynamic-animations.html",[1,1.357,7,1.935,12,1.828,14,1.729,15,1.335,16,1.609,17,0.88,18,1.651,22,1.784,23,2.137,24,0.837,26,0.017,28,2.901,35,2.128,36,3.13,37,2.797,39,1.079,49,0.697,51,2.005,52,0.011,53,0.015,58,2.137,59,1.279,66,2.237,67,1.687,88,2.237,106,2.865,109,1.542,125,2.865,133,2.003,141,1.542,143,2.137,145,4.01,150,2.137,158,2.276,165,1.542,176,1.888,178,1.542,179,1.444,202,3.13,219,1.783,224,1.083,239,3.154,240,1.941,251,2.137,258,1.941,272,3.416,278,1.941,291,2.137,293,2.4,294,2.4,305,2.765,313,1.783,314,1.444,317,2.276,367,3.13,407,2.533,491,3.749,493,3.759,494,3.154,495,3.334,497,1.784,498,3.796,500,2.137,501,3.456,502,2.4,505,4.139,555,2.137,557,2.4,558,4.648,559,2.4,560,3.542,561,2.4,562,2.4,563,2.4,565,2.4,566,2.4,568,2.4,569,2.4,571,2.137,596,3.154,600,2.137,601,3.13,606,3.749,622,1.784,634,2.4,665,3.759,666,2.137,686,2.865,688,2.4,693,1.941,865,2.4,866,2.137,895,1.941,952,2.137,970,2.4,1044,2.4,1046,2.4,1093,3.542,1104,2.4,1105,2.4,1173,2.137,1196,2.799,1197,4.131,1198,2.799,1199,2.799,1200,2.799,1201,2.799,1202,2.799,1203,2.799,1204,5.783,1205,4.131,1206,2.799,1207,4.131,1208,4.131,1209,2.799,1210,2.799,1211,2.799,1212,2.799,1213,4.131,1214,4.131,1215,2.799,1216,2.799,1217,2.799,1218,2.799,1219,2.799,1220,2.799,1221,2.799,1222,2.799,1223,2.799,1224,2.799,1225,2.799,1226,2.799,1227,2.799,1228,2.799,1229,2.799,1230,2.799,1231,2.799,1232,2.799,1233,2.799,1234,2.799,1235,2.799,1236,2.799,1237,2.799,1238,2.799,1239,2.799,1240,2.799,1241,2.799,1242,2.799,1243,2.4]],["title/additional-documentation/dynamic-animations/example.html",[276,1.457,1169,1.883,1170,1.883]],["body/additional-documentation/dynamic-animations/example.html",[26,0.017,52,0.017,53,0.017,304,3.037,305,2.689,306,3.477]],["title/additional-documentation/dynamic-components.html",[15,0.607,18,0.707,1169,1.626,1170,1.626]],["body/additional-documentation/dynamic-components.html",[0,0.225,14,1.879,15,1.603,16,1.402,17,1.715,18,1.562,24,1.246,25,0.452,26,0.019,30,1.295,31,1.911,32,2.725,34,0.874,38,2.725,39,0.744,49,1.026,52,0.013,53,0.011,56,0.625,65,2.02,70,0.728,74,1.807,75,1.406,83,1.15,88,2.249,102,1.246,115,1.674,141,1.561,145,1.965,148,1.674,168,3.005,176,2.26,178,3.202,224,1.096,244,3.184,252,2.43,256,4.215,260,1.965,276,1.295,283,1.561,292,2.463,299,1.807,313,1.223,317,3.349,328,3.184,340,2.164,367,2.658,385,2.297,469,2.151,470,2.712,491,2.164,493,1.965,497,3.153,505,2.164,515,2.43,622,3.153,645,3.153,649,4.677,651,3.43,653,4.677,656,2.891,659,3.434,662,2.43,663,4.358,664,2.43,665,2.891,666,2.164,667,2.43,668,2.43,669,2.297,671,2.43,674,3.705,675,5.212,676,2.164,677,3.575,678,2.43,679,2.43,680,2.43,681,2.43,682,4.677,683,1.965,684,2.43,685,2.43,686,1.965,691,2.43,692,3.434,717,1.965,719,2.43,724,4.641,751,2.164,757,3.43,810,2.43,812,2.43,825,3.575,830,1.807,866,2.164,895,1.965,952,3.184,1060,2.43,1115,2.43,1173,2.164,1195,2.43,1243,2.43,1244,4.946,1245,2.834,1246,2.834,1247,2.834,1248,2.834,1249,2.834,1250,2.834,1251,2.834,1252,2.834,1253,4.169,1254,2.834,1255,2.834,1256,4.169,1257,2.834,1258,2.834,1259,2.834,1260,5.454,1261,2.834,1262,2.834,1263,4.169,1264,2.834,1265,4.169,1266,2.834,1267,4.169,1268,2.834,1269,2.834,1270,2.834,1271,2.834,1272,2.834,1273,2.834,1274,2.834,1275,2.834,1276,2.834]],["title/additional-documentation/dynamic-components/example.html",[276,1.457,1169,1.883,1170,1.883]],["body/additional-documentation/dynamic-components/example.html",[26,0.017,52,0.017,53,0.017,304,3.037,305,2.689,306,3.477]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["0",{"_index":400,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["0m",{"_index":883,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["10/16",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["14/19",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":1135,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1079,"title":{},"body":{"license.html":{}}}],["25",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1062,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3/4",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1134,"title":{},"body":{"overview.html":{}}}],["4/14",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1132,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["500m",{"_index":865,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["6",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["6.1.1",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":1075,"title":{},"body":{"index.html":{}}}],["6.2.2",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1133,"title":{},"body":{"overview.html":{}}}],["73",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["abil",{"_index":895,"title":{},"body":{"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["abov",{"_index":1105,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["abstract",{"_index":250,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["accessor",{"_index":323,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["act",{"_index":57,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":1124,"title":{},"body":{"license.html":{}}}],["actual",{"_index":258,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["ad",{"_index":199,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["add",{"_index":202,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["addit",{"_index":1169,"title":{"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}},"body":{}}],["alias",{"_index":1137,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alllow",{"_index":849,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["allow",{"_index":141,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["amount",{"_index":860,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["analog",{"_index":492,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["and/or",{"_index":1099,"title":{},"body":{"license.html":{}}}],["angular",{"_index":495,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["angular'",{"_index":249,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["angular/anim",{"_index":59,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"dependencies.html":{},"additional-documentation/dynamic-animations.html":{}}}],["angular/common",{"_index":852,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":89,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":12,"title":{"additional-documentation/dynamic-animations.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animation'",{"_index":870,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animation.t",{"_index":1010,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animation/leav",{"_index":1009,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationbuild",{"_index":58,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animationbuilder):animationstatemachin",{"_index":69,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{}}}],["animationmetadata",{"_index":105,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["animations(anim",{"_index":580,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.direct",{"_index":629,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animations.directive.t",{"_index":489,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"coverage.html":{}}}],["animations.directive.ts:102",{"_index":527,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:110",{"_index":540,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:111",{"_index":538,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:117",{"_index":525,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:130",{"_index":532,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:134",{"_index":529,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:142",{"_index":524,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:156",{"_index":535,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:169",{"_index":534,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:93",{"_index":537,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:94",{"_index":536,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:95",{"_index":539,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.foreach(anim",{"_index":581,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.module.t",{"_index":618,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animations.servic",{"_index":543,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["animations.service.t",{"_index":632,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["animations.service.ts:30",{"_index":637,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["animations.service.ts:55",{"_index":639,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["animations/anim",{"_index":6,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/default",{"_index":403,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"coverage.html":{}}}],["animations/dynam",{"_index":488,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/leav",{"_index":1007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/leave/leave.directive.t",{"_index":856,"title":{},"body":{"directives/LeaveDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["animations/leave/leave.directive.ts:22",{"_index":874,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animations/leave/leave.directive.ts:24",{"_index":876,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animations/ng",{"_index":884,"title":{},"body":{"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["animations/st",{"_index":950,"title":{},"body":{"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["animations:[dvkleav",{"_index":552,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationshandl",{"_index":510,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationshandlerconstructor",{"_index":630,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["animationsstatemachin",{"_index":409,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["animationsstatemachineconstructor",{"_index":631,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animationstatemachin",{"_index":1,"title":{"interfaces/AnimationStateMachine.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animationstatemachineconstructor",{"_index":54,"title":{"interfaces/AnimationStateMachineConstructor.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["animationstatemachineconstructortoken",{"_index":90,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationstatemetadata",{"_index":530,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgStateService.html":{}}}],["animationstatemetadata).styl",{"_index":587,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationstatesbuild",{"_index":420,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["animationstatesservic",{"_index":71,"title":{"injectables/AnimationStatesService.html":{}},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"overview.html":{}}}],["animationstatesservice#createanimationstatemachin",{"_index":94,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["animationstatesservice):dynamicanimationshandl",{"_index":612,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{}}}],["animationstylemetadata",{"_index":103,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["animationstylesmap",{"_index":62,"title":{"interfaces/AnimationStylesMap.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"coverage.html":{}}}],["animationtransitionmetadata",{"_index":533,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["animationtransitionmetadata).anim",{"_index":586,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationtransitionsmap",{"_index":61,"title":{"interfaces/AnimationTransitionsMap.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["anoth",{"_index":193,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["appli",{"_index":38,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-components.html":{}}}],["applic",{"_index":1068,"title":{},"body":{"index.html":{}}}],["aris",{"_index":1127,"title":{},"body":{"license.html":{}}}],["around",{"_index":291,"title":{},"body":{"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"additional-documentation/dynamic-animations.html":{}}}],["array",{"_index":165,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["arrow",{"_index":1267,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["assign",{"_index":246,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["associ",{"_index":1090,"title":{},"body":{"license.html":{}}}],["async",{"_index":667,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["attach",{"_index":158,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["attachinputstream",{"_index":702,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachinputstreams(stream",{"_index":714,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachoutputcallback",{"_index":703,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachoutputcallbacks(callback",{"_index":721,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachview",{"_index":151,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachview(contain",{"_index":154,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachview(container:str",{"_index":214,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["attachviews(contain",{"_index":163,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachviews(container:str",{"_index":215,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["author",{"_index":1054,"title":{},"body":{"index.html":{},"license.html":{}}}],["automat",{"_index":634,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["avail",{"_index":1059,"title":{},"body":{"index.html":{},"additional-documentation/content-conductor.html":{}}}],["back",{"_index":1154,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["background",{"_index":565,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["base",{"_index":245,"title":{},"body":{"modules/ContentConductorModule.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["bbdynamiccomponentdirective2}",{"_index":736,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["be",{"_index":112,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/StateCSSMap.html":{}}}],["befor",{"_index":952,"title":{},"body":{"interfaces/StateCSSMap.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["below",{"_index":1216,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["between",{"_index":148,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["bind",{"_index":1231,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["bootstrap",{"_index":229,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["both",{"_index":500,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["bound",{"_index":505,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["brows",{"_index":1130,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":304,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["bug",{"_index":1223,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["build",{"_index":901,"title":{},"body":{"injectables/NgTransitionService.html":{},"index.html":{}}}],["buildanimationtransit",{"_index":896,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["buildanimationtransitions(transit",{"_index":899,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["builder",{"_index":68,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{}}}],["c",{"_index":369,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["call",{"_index":169,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/content-conductor.html":{}}}],["callback",{"_index":724,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["callbacks.model",{"_index":759,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{}}}],["callbacks.model.t",{"_index":1146,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["callbacks/output",{"_index":758,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["callbacks[cb](ev",{"_index":801,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["capabl",{"_index":408,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"index.html":{}}}],["card",{"_index":1211,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["case",{"_index":654,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["caus",{"_index":526,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["ccservic",{"_index":319,"title":{},"body":{"directives/ContentContainerDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["chanc",{"_index":1238,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["chang",{"_index":367,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["charg",{"_index":1085,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1120,"title":{},"body":{"license.html":{}}}],["class",{"_index":34,"title":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["clean",{"_index":167,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{}}}],["cli",{"_index":1072,"title":{},"body":{"index.html":{}}}],["click",{"_index":681,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["close",{"_index":555,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["closeallsubscript",{"_index":704,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["closeallsubscriptions(subscript",{"_index":725,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["closed';th",{"_index":1227,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["closur",{"_index":957,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["cluster_contentconductormodul",{"_index":230,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_declar",{"_index":231,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_export",{"_index":232,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_provid",{"_index":233,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodul",{"_index":614,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_declar",{"_index":615,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_export",{"_index":616,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_provid",{"_index":617,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodul",{"_index":844,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_declar",{"_index":845,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_export",{"_index":846,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_provid",{"_index":847,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["code",{"_index":864,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["collect",{"_index":604,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["color",{"_index":566,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["combin",{"_index":810,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["come",{"_index":1064,"title":{},"body":{"index.html":{}}}],["command",{"_index":1066,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":851,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["compil",{"_index":300,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"index.html":{}}}],["complet",{"_index":953,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["complex",{"_index":1218,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["compmodel",{"_index":740,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["compon",{"_index":15,"title":{"additional-documentation/dynamic-components.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["component'",{"_index":242,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"additional-documentation/content-conductor.html":{}}}],["component.direct",{"_index":853,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["component.directive.t",{"_index":660,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"coverage.html":{}}}],["component.directive.ts:100",{"_index":713,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:107",{"_index":712,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:109",{"_index":711,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:115",{"_index":739,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:142",{"_index":735,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:155",{"_index":732,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:167",{"_index":743,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:186",{"_index":716,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:209",{"_index":722,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:226",{"_index":737,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:240",{"_index":726,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:250",{"_index":741,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:92",{"_index":746,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:93",{"_index":747,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:94",{"_index":748,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentconstructor",{"_index":121,"title":{"interfaces/ComponentConstructor.html":{}},"body":{"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["componentconstructor):str",{"_index":817,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["componentfactoryresolv",{"_index":710,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentmodel",{"_index":749,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentmodel(compmodel",{"_index":762,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentnam",{"_index":479,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["componentref",{"_index":745,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["components.module.t",{"_index":848,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["components/compon",{"_index":122,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"coverage.html":{}}}],["components/default",{"_index":466,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"coverage.html":{}}}],["components/dynam",{"_index":646,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/initi",{"_index":1149,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["components/input",{"_index":1150,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["components/output",{"_index":1153,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["compref",{"_index":699,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["concept",{"_index":1207,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["condent",{"_index":1171,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["condit",{"_index":1104,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["conductor",{"_index":217,"title":{"additional-documentation/content-conductor.html":{}},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["conductor.model",{"_index":220,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["conductor.model.t",{"_index":139,"title":{},"body":{"interfaces/ContentConductor.html":{},"coverage.html":{}}}],["conductor.model.ts:101",{"_index":164,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:22",{"_index":184,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:28",{"_index":166,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:41",{"_index":189,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:56",{"_index":174,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:70",{"_index":201,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:81",{"_index":182,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:91",{"_index":157,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.module.t",{"_index":238,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["conductor.servic",{"_index":264,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{}}}],["conductor.service.t",{"_index":277,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["conductor.service.ts:117",{"_index":348,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:12",{"_index":337,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:128",{"_index":345,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:139",{"_index":344,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:19",{"_index":338,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:20",{"_index":343,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:21",{"_index":339,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:22",{"_index":341,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:23",{"_index":342,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:25",{"_index":351,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:28",{"_index":287,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["conductor.service.ts:33",{"_index":349,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:41",{"_index":289,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["conductor.service.ts:58",{"_index":346,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:76",{"_index":352,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:90",{"_index":347,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:96",{"_index":353,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor/cont",{"_index":138,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conductor/contain",{"_index":129,"title":{},"body":{"interfaces/ContainersMap.html":{},"coverage.html":{}}}],["conductor/content/content.directive.t",{"_index":327,"title":{},"body":{"directives/ContentDirective.html":{},"coverage.html":{}}}],["conductor/content/content.directive.ts:13",{"_index":330,"title":{},"body":{"directives/ContentDirective.html":{}}}],["conductor/default",{"_index":263,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["conductorconstructor",{"_index":275,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{}}}],["conductorservic",{"_index":284,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["configur",{"_index":869,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["conform",{"_index":262,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["connect",{"_index":1128,"title":{},"body":{"license.html":{}}}],["consist",{"_index":1258,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["console.error(`${compmodel.nam",{"_index":766,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["console.error(`${express",{"_index":945,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["console.log('dynam",{"_index":680,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["const",{"_index":385,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constant",{"_index":1241,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["constrain",{"_index":1152,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constraint",{"_index":1205,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["construct",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constructor(animationshandlerconstructor",{"_index":636,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["constructor(build",{"_index":79,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["constructor(conductorconstructor",{"_index":286,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["constructor(containersquerylist",{"_index":336,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["constructor(el",{"_index":415,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["constructor(priv",{"_index":283,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constructor(protect",{"_index":764,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["constructor(rendererfactori",{"_index":962,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["constructor(serializerconstructor",{"_index":826,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["constructor(serializermap",{"_index":474,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["constructor(templateref",{"_index":329,"title":{},"body":{"directives/ContentDirective.html":{}}}],["constructor(vcref",{"_index":318,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["constructor.model",{"_index":271,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{}}}],["constructor.model.t",{"_index":124,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductorConstructor.html":{},"coverage.html":{}}}],["constructor.token",{"_index":266,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{}}}],["constructor.token.t",{"_index":985,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor/compon",{"_index":123,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["constructor/cont",{"_index":218,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consum",{"_index":1200,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["contain",{"_index":133,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["container.direct",{"_index":270,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["container.directive.t",{"_index":312,"title":{},"body":{"directives/ContentContainerDirective.html":{},"coverage.html":{}}}],["container.directive.ts:24",{"_index":322,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["container.directive.ts:29",{"_index":320,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["container.model",{"_index":205,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{}}}],["container.model.t",{"_index":307,"title":{},"body":{"interfaces/ContentContainer.html":{},"coverage.html":{}}}],["container.viewcontain",{"_index":358,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["container/cont",{"_index":204,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["container:str",{"_index":211,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["containernam",{"_index":309,"title":{},"body":{"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{}}}],["containers.reduce((map,contain",{"_index":356,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["containersmap",{"_index":127,"title":{"interfaces/ContainersMap.html":{}},"body":{"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["containersquerylist",{"_index":221,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["containerssub",{"_index":333,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["content",{"_index":142,"title":{"additional-documentation/content-conductor.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["content/content.direct",{"_index":269,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["contentchildren(contentdirect",{"_index":1175,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["contentconductor",{"_index":137,"title":{"interfaces/ContentConductor.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"additional-documentation/content-conductor.html":{}}}],["contentconductorconstructor",{"_index":216,"title":{"interfaces/ContentConductorConstructor.html":{}},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentconductorconstructortoken",{"_index":265,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentconductormodul",{"_index":225,"title":{"modules/ContentConductorModule.html":{}},"body":{"modules/ContentConductorModule.html":{},"modules.html":{},"overview.html":{}}}],["contentconductorservic",{"_index":140,"title":{"injectables/ContentConductorService.html":{}},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentcontain",{"_index":203,"title":{"interfaces/ContentContainer.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["contentcontainerdirect",{"_index":159,"title":{"directives/ContentContainerDirective.html":{}},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentcontainerdirective'",{"_index":195,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["contentdirect",{"_index":234,"title":{"directives/ContentDirective.html":{}},"body":{"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentsquerylist",{"_index":223,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["contentssub",{"_index":334,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["context",{"_index":1265,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["contract",{"_index":1125,"title":{},"body":{"license.html":{}}}],["convert",{"_index":886,"title":{},"body":{"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{}}}],["copi",{"_index":1088,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1078,"title":{},"body":{"license.html":{}}}],["core",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["correctli",{"_index":301,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["coverag",{"_index":980,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":31,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"injectables/StateCssMapperService.html":{},"index.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["create(injector",{"_index":783,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createanimationshandl",{"_index":635,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["createanimationshandler(el",{"_index":638,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["createanimationstatemachin",{"_index":76,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createanimationstatemachine(el",{"_index":85,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["createanimationstatemachine]{@link",{"_index":93,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["createcompon",{"_index":705,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createcomponent(constructor",{"_index":729,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createcontentconductor",{"_index":285,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["createcontentconductor(containersquerylist",{"_index":288,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["createcontentconductor(this.contain",{"_index":1182,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["createcssmapp",{"_index":411,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createcssmapper(map",{"_index":423,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createembeddedview(templ",{"_index":376,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["createinjector",{"_index":706,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createinjector(provid",{"_index":734,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createseri",{"_index":825,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-components.html":{}}}],["createserializer(map",{"_index":829,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["createstatecssmapp",{"_index":960,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["createstatecssmapper(el",{"_index":966,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["createstatecssmapper(this.element,this.cssmap",{"_index":463,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createstatemachin",{"_index":412,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createstatemachine(transit",{"_index":425,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["css",{"_index":33,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["cssmap",{"_index":416,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["cssmapper",{"_index":410,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["cssmapperservic",{"_index":418,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["current",{"_index":36,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"directives/LeaveDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["currentst",{"_index":1226,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["custom",{"_index":260,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["da",{"_index":509,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["damag",{"_index":1121,"title":{},"body":{"license.html":{}}}],["daservic",{"_index":517,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["data",{"_index":649,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-components.html":{}}}],["data.model",{"_index":813,"title":{},"body":{"interfaces/DynamicComponentModel.html":{}}}],["data.model.t",{"_index":648,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"coverage.html":{}}}],["data/dynam",{"_index":647,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["dc",{"_index":697,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["dcsservic",{"_index":1251,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["deal",{"_index":1091,"title":{},"body":{"license.html":{}}}],["dec",{"_index":1045,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declar",{"_index":228,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["decor",{"_index":1198,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["decrement",{"_index":1046,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["default",{"_index":87,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["defaultanimationsstatemachin",{"_index":620,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["defaultcontentconductorservic",{"_index":259,"title":{"classes/DefaultContentConductorService.html":{}},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["defaultdynamicanimationshandlerservic",{"_index":402,"title":{"classes/DefaultDynamicAnimationsHandlerService.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["defaultdynamiccomponentseri",{"_index":465,"title":{"classes/DefaultDynamicComponentSerializer.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["defin",{"_index":39,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["definin",{"_index":1228,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["definit",{"_index":125,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["demo",{"_index":1070,"title":{},"body":{"index.html":{}}}],["depend",{"_index":226,"title":{"dependencies.html":{}},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descend",{"_index":1177,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["describ",{"_index":599,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{}}}],["descript",{"_index":10,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{}}}],["deseri",{"_index":768,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["deserializemap",{"_index":822,"title":{},"body":{"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["deserializemap.get(componentnam",{"_index":486,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["design",{"_index":1255,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["desir",{"_index":622,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["destin",{"_index":197,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["destroy",{"_index":21,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["destroy():void",{"_index":207,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["destroycomp",{"_index":707,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["detach",{"_index":175,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["detachedview",{"_index":397,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["detachview",{"_index":152,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detachview(contain",{"_index":173,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detachviews(contain",{"_index":181,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detail",{"_index":280,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["detect",{"_index":664,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["develop",{"_index":693,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["differ",{"_index":332,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["direct",{"_index":16,"title":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["directive'",{"_index":170,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["display",{"_index":172,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["dispos",{"_index":1272,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["distinct",{"_index":1274,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["distinctuntilchang",{"_index":718,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["distribut",{"_index":1097,"title":{},"body":{"license.html":{}}}],["docs/examples/index.html#/contentconductor",{"_index":282,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["docs/examples/index.html#/dynamicanim",{"_index":575,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["docs/examples/index.html#/dynamiccompon",{"_index":696,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["document",{"_index":981,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":254,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["dsservic",{"_index":670,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["due",{"_index":1236,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["dure",{"_index":1173,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["dvk",{"_index":316,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"index.html":{}}}],["dvkdemo",{"_index":1067,"title":{},"body":{"index.html":{}}}],["dvkleav",{"_index":501,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["dvkleavetim",{"_index":1012,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dvkleavetiming(tim",{"_index":880,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{}}}],["dynam",{"_index":18,"title":{"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamicanimationsdirect",{"_index":407,"title":{"directives/DynamicAnimationsDirective.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-animations.html":{}}}],["dynamicanimationshandl",{"_index":406,"title":{"interfaces/DynamicAnimationsHandler.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["dynamicanimationshandlerconstructor",{"_index":608,"title":{"interfaces/DynamicAnimationsHandlerConstructor.html":{}},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["dynamicanimationshandlerconstructortoken",{"_index":625,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamicanimationsmodul",{"_index":613,"title":{"modules/DynamicAnimationsModule.html":{}},"body":{"modules/DynamicAnimationsModule.html":{},"modules.html":{},"overview.html":{}}}],["dynamicanimationsservic",{"_index":518,"title":{"injectables/DynamicAnimationsService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicanimationsservice#createanimationshandl",{"_index":642,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["dynamiccomponentdata",{"_index":645,"title":{"interfaces/DynamicComponentData.html":{}},"body":{"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentdirect",{"_index":659,"title":{"directives/DynamicComponentDirective.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentmodel",{"_index":674,"title":{"interfaces/DynamicComponentModel.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentseri",{"_index":469,"title":{"interfaces/DynamicComponentSerializer.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentserializerconstructor",{"_index":818,"title":{"interfaces/DynamicComponentSerializerConstructor.html":{}},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["dynamiccomponentserializerconstructortoken",{"_index":832,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamiccomponentserializermap",{"_index":471,"title":{"interfaces/DynamicComponentSerializerMap.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"coverage.html":{}}}],["dynamiccomponentserializermap):dynamiccomponentseri",{"_index":821,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["dynamiccomponentserializerservic",{"_index":669,"title":{"injectables/DynamicComponentSerializerService.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentsmap",{"_index":830,"title":{"interfaces/DynamicComponentsMap.html":{}},"body":{"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentsmodul",{"_index":843,"title":{"modules/DynamicComponentsModule.html":{}},"body":{"modules/DynamicComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["e",{"_index":678,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["each",{"_index":113,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{}}}],["element",{"_index":66,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["elementref",{"_index":516,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["emit",{"_index":1273,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["emitt",{"_index":1245,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["empti",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":162,"title":{},"body":{"interfaces/ContentConductor.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["enough",{"_index":1240,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["enter",{"_index":596,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["entir",{"_index":1261,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["entri",{"_index":908,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["enumer",{"_index":1036,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1069,"title":{},"body":{"index.html":{}}}],["even",{"_index":295,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["event",{"_index":1117,"title":{},"body":{"license.html":{}}}],["eventemitt",{"_index":751,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["eventemitter}",{"_index":723,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{}}}],["eventu",{"_index":868,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["exampl",{"_index":276,"title":{"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}},"body":{"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["except",{"_index":1202,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["execut",{"_index":793,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"overview.html":{}}}],["exportas:'dynamiccomp2",{"_index":761,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["expos",{"_index":1199,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["express",{"_index":906,"title":{},"body":{"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["expression.length",{"_index":949,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expression.split(ngtransitionsymbols.eith",{"_index":924,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expression.split(ngtransitionsymbols.to",{"_index":934,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expressions.split(',').foreach(express",{"_index":922,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["extend",{"_index":812,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["fact",{"_index":1237,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["fail",{"_index":641,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["featur",{"_index":1055,"title":{},"body":{"index.html":{}}}],["feed",{"_index":695,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["few",{"_index":1201,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["field",{"_index":1260,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"license.html":{}}}],["find",{"_index":1220,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["finish",{"_index":496,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["fire",{"_index":794,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["first",{"_index":1243,"title":{},"body":{"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["fit",{"_index":1114,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1103,"title":{},"body":{"license.html":{}}}],["fomrindex",{"_index":208,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["for(let",{"_index":394,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["form",{"_index":143,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["format",{"_index":1196,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["forroot",{"_index":255,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["forroot(conductorconstructor",{"_index":273,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["found",{"_index":767,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["free",{"_index":1084,"title":{},"body":{"license.html":{},"additional-documentation/content-conductor.html":{}}}],["fromindex",{"_index":188,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["fromresolvedprovid",{"_index":778,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["fromstat",{"_index":114,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"injectables/NgTransitionService.html":{}}}],["fulli",{"_index":1208,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["function",{"_index":24,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["furnish",{"_index":1102,"title":{},"body":{"license.html":{}}}],["futur",{"_index":1242,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["garbag",{"_index":603,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["gener",{"_index":1074,"title":{},"body":{"index.html":{}}}],["get",{"_index":1048,"title":{"index.html":{},"license.html":{}},"body":{}}],["getcompon",{"_index":472,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getcomponent(componentnam",{"_index":477,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getcssclass",{"_index":961,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getcssclass(st",{"_index":968,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getcssclass(state:str",{"_index":971,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getnam",{"_index":473,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getname(componentconstructor",{"_index":480,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getviewcontain",{"_index":324,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["given",{"_index":77,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["goal",{"_index":1052,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1083,"title":{},"body":{"license.html":{}}}],["green",{"_index":567,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["handl",{"_index":247,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/StateCssMapperService.html":{}}}],["handler",{"_index":610,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"miscellaneous/variables.html":{}}}],["handler.constructor",{"_index":623,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.constructor.t",{"_index":609,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"coverage.html":{}}}],["handler.model",{"_index":435,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.model.t",{"_index":598,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"coverage.html":{}}}],["handler.servic",{"_index":624,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["handler.service.t",{"_index":405,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:16",{"_index":422,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:17",{"_index":421,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:32",{"_index":433,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:36",{"_index":429,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:48",{"_index":431,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:52",{"_index":427,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:60",{"_index":426,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:83",{"_index":424,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.token",{"_index":626,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.token.t",{"_index":1004,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler/default",{"_index":404,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["handler/dynam",{"_index":434,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hard",{"_index":863,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["held",{"_index":29,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["here",{"_index":1060,"title":{},"body":{"index.html":{},"additional-documentation/dynamic-components.html":{}}}],["herebi",{"_index":1082,"title":{},"body":{"license.html":{}}}],["holder",{"_index":1118,"title":{},"body":{"license.html":{}}}],["hook",{"_index":1244,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["hostbind",{"_index":873,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["hostbinding(\"@dvkleav",{"_index":877,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["html",{"_index":760,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["i=0",{"_index":395,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["identifi",{"_index":191,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentContainer.html":{},"coverage.html":{}}}],["if(!sub.clos",{"_index":807,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(callback",{"_index":795,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(expression.includes(ngtransitionsymbols.dec",{"_index":946,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.eith",{"_index":923,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.ent",{"_index":937,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.inc",{"_index":944,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.leav",{"_index":940,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.to",{"_index":933,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(initialcontain",{"_index":373,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(stream",{"_index":788,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(subscript",{"_index":805,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(this.animationshandl",{"_index":578,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.animationsstatemachin",{"_index":446,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.containerssub",{"_index":377,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(this.contentssub",{"_index":380,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(this.cssmap",{"_index":459,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.cssmapp",{"_index":460,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.isstring(express",{"_index":921,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(this.istransition(anim",{"_index":582,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.myst",{"_index":573,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.st",{"_index":444,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.transit",{"_index":454,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["ifram",{"_index":306,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["ignor",{"_index":947,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["implement",{"_index":219,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["impli",{"_index":1112,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}}}],["inc",{"_index":1043,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["includ",{"_index":1093,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["increment",{"_index":1044,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["individu",{"_index":905,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["init",{"_index":22,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["init(initialcontain",{"_index":183,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["initi",{"_index":32,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["initialcontain",{"_index":185,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["initializecompon",{"_index":708,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initializecomponent(compmodel",{"_index":738,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initializedvalu",{"_index":1259,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["initialst",{"_index":611,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["initialvalu",{"_index":656,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["initvalu",{"_index":744,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initvalues[input",{"_index":786,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["inject",{"_index":70,"title":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["inject(animationstatemachineconstructortoken",{"_index":97,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["inject(contentconductorconstructortoken",{"_index":302,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["inject(dynamicanimationshandlerconstructortoken",{"_index":643,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["inject(dynamiccomponentserializerconstructortoken",{"_index":835,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["injectiontoken('animationstatemachineconstructortoken",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('containersconductorconstructortoken",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dynamicanimationshandlerconstructortoken",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dynamiccomponentserializerconstructortoken",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":730,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["inner",{"_index":111,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["input",{"_index":317,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["input('dvk",{"_index":325,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["inputstream",{"_index":715,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["inputsubscript",{"_index":700,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["insert",{"_index":198,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["insertindex",{"_index":386,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["insid",{"_index":178,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["instal",{"_index":1063,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":692,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["instanti",{"_index":256,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["instead",{"_index":251,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"additional-documentation/dynamic-animations.html":{}}}],["intention",{"_index":687,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/ContentContainer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"interfaces/ContentContainer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["intern",{"_index":689,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["isstat",{"_index":513,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["isstate(metadata",{"_index":528,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["isstring(express",{"_index":948,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["istransit",{"_index":514,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["istransition(metadata",{"_index":531,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["it'",{"_index":177,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["item",{"_index":1194,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["itself",{"_index":1225,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["js",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":1239,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["key",{"_index":108,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"miscellaneous/typealiases.html":{}}}],["keys.model.t",{"_index":1144,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["kind",{"_index":1111,"title":{},"body":{"license.html":{}}}],["kit",{"_index":1050,"title":{},"body":{"index.html":{}}}],["last",{"_index":180,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{}}}],["later",{"_index":1250,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["leav",{"_index":498,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["leave/leave.direct",{"_index":549,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["leavedirect",{"_index":523,"title":{"directives/LeaveDirective.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"overview.html":{}}}],["leavetim",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":227,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["length",{"_index":392,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["level",{"_index":107,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["liabil",{"_index":1122,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1119,"title":{},"body":{"license.html":{}}}],["librari",{"_index":1051,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1076,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycl",{"_index":661,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["limit",{"_index":150,"title":{},"body":{"interfaces/ContentConductor.html":{},"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["link",{"_index":95,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/typealiases.html":{}}}],["list",{"_index":294,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["liter",{"_index":119,"title":{},"body":{"interfaces/AnimationTransitionsMap.html":{}}}],["locat",{"_index":196,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["long",{"_index":866,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["look",{"_index":970,"title":{},"body":{"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["machin",{"_index":13,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"miscellaneous/variables.html":{}}}],["machine.constructor",{"_index":92,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{}}}],["machine.constructor.t",{"_index":55,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"coverage.html":{}}}],["machine.model",{"_index":60,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["machine.model.t",{"_index":9,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"coverage.html":{}}}],["machine.servic",{"_index":628,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["machine.service.t",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["machine.token",{"_index":91,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{}}}],["machine.token.t",{"_index":997,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["machine/anim",{"_index":8,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["machine/default",{"_index":627,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["made",{"_index":688,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["main",{"_index":490,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["manag",{"_index":1276,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["manual",{"_index":252,"title":{},"body":{"modules/ContentConductorModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["map",{"_index":102,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"injectables/NgStateService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["map(cb",{"_index":798,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["map.model",{"_index":355,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/StateCssMapperService.html":{}}}],["map.model.t",{"_index":131,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{}}}],["map.model.ts:18",{"_index":954,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["map.model.ts:6",{"_index":135,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/DynamicComponentsMap.html":{}}}],["map/contain",{"_index":130,"title":{},"body":{"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["map/dynam",{"_index":482,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["map/stat",{"_index":436,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["map[container.containernam",{"_index":357,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["map[entri",{"_index":978,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["map[nam",{"_index":839,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["map[stat",{"_index":972,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["map[state.nam",{"_index":892,"title":{},"body":{"injectables/NgStateService.html":{}}}],["mapcontain",{"_index":335,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["mapcontainers(contain",{"_index":350,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["mapper",{"_index":46,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["mapper.model",{"_index":43,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/StateCssMapperService.html":{}}}],["mapper.model.t",{"_index":955,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"coverage.html":{}}}],["mapper.servic",{"_index":438,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["mapper.service.t",{"_index":959,"title":{},"body":{"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["mapper.service.ts:11",{"_index":964,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper.service.ts:22",{"_index":969,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper.service.ts:32",{"_index":967,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper/st",{"_index":42,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["mark",{"_index":720,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["match",{"_index":53,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["matter",{"_index":655,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/LeaveDirective.html":{}}}],["member",{"_index":491,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["merchant",{"_index":1113,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1095,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":314,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["method",{"_index":75,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["miscellan",{"_index":1035,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1077,"title":{},"body":{"license.html":{}}}],["model",{"_index":651,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["model.model",{"_index":754,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["model.model.t",{"_index":809,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["model/dynam",{"_index":753,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["modifi",{"_index":1058,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":224,"title":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"modules.html":{}},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["modulewithprovid",{"_index":268,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["moment",{"_index":1213,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["more",{"_index":1217,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["mouseev",{"_index":679,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["move",{"_index":147,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["moveview",{"_index":153,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["moveview(previouscontain",{"_index":186,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["moveviews(previouscontain",{"_index":200,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["multipl",{"_index":149,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["myaniamt",{"_index":556,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mycompon",{"_index":553,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mycssmap",{"_index":570,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mystat",{"_index":554,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["name",{"_index":83,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["name:str",{"_index":136,"title":{},"body":{"interfaces/ContainersMap.html":{}}}],["necessari",{"_index":240,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-animations.html":{}}}],["need",{"_index":861,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["new",{"_index":65,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["new(...args):ani",{"_index":126,"title":{},"body":{"interfaces/ComponentConstructor.html":{}}}],["new(serializermap",{"_index":820,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["newtransit",{"_index":912,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["newtransitions[fromstate][tost",{"_index":918,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["next",{"_index":23,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/DynamicAnimationsHandler.html":{},"additional-documentation/dynamic-animations.html":{}}}],["nextcontain",{"_index":187,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["nextcontainer:str",{"_index":209,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["nextstat",{"_index":48,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["nextstate(tost",{"_index":428,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["nextstate(tostate:str",{"_index":443,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["ng",{"_index":544,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1174,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["ngmodul",{"_index":267,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["ngondestroy",{"_index":171,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["ngoninit",{"_index":515,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["ngrx",{"_index":1247,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["ngstateservic",{"_index":522,"title":{"injectables/NgStateService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgStateService.html":{},"coverage.html":{},"overview.html":{}}}],["ngtransitionservic",{"_index":520,"title":{"injectables/NgTransitionService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"overview.html":{}}}],["ngtransitionst",{"_index":547,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{}}}],["ngtransitionstates.void",{"_index":593,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.void]:transition.anim",{"_index":943,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.wildcard",{"_index":941,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.wildcard]:transition.anim",{"_index":939,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionsymbol",{"_index":909,"title":{},"body":{"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{}}}],["noninfring",{"_index":1116,"title":{},"body":{"license.html":{}}}],["normal",{"_index":494,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{}}}],["note",{"_index":686,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["noth",{"_index":859,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["notic",{"_index":1106,"title":{},"body":{"license.html":{}}}],["nottypedkey",{"_index":1142,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["now",{"_index":1270,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["null",{"_index":383,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}}}],["number",{"_index":115,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["number):viewref",{"_index":212,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["number):void",{"_index":210,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["numbercompon",{"_index":1253,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["numer",{"_index":1229,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["object",{"_index":30,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["object.keys(callback",{"_index":797,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["object.keys(initvalues).map",{"_index":784,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["object.keys(map).foreach(entry=>renderer.removeclass(el",{"_index":977,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["object.keys(map).foreach(nam",{"_index":836,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["object.keys(newtransitions).foreach(fromst",{"_index":914,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["object.keys(newtransitions[fromstate]).foreach(tost",{"_index":915,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["object.keys(streams).map(input",{"_index":790,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["observ",{"_index":717,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["observable}",{"_index":787,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["obtain",{"_index":1087,"title":{},"body":{"license.html":{}}}],["occur",{"_index":118,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["offer",{"_index":1061,"title":{},"body":{"index.html":{}}}],["old",{"_index":951,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["ommit",{"_index":161,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["on",{"_index":192,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["onclick",{"_index":677,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["ondestroy",{"_index":508,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["oninit",{"_index":507,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["open",{"_index":571,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["open';th",{"_index":1234,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["oper",{"_index":719,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["option",{"_index":84,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{}}}],["order",{"_index":278,"title":{},"body":{"injectables/ContentConductorService.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["origin",{"_index":560,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["otherwis",{"_index":503,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"license.html":{}}}],["out",{"_index":237,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":757,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["outputcallback",{"_index":683,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["outputsubscript",{"_index":701,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["outsid",{"_index":1221,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["overriden",{"_index":331,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["overview",{"_index":1131,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1022,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1170,"title":{"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}},"body":{}}],["param",{"_index":98,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/variables.html":{}}}],["paramet",{"_index":82,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{}}}],["pars",{"_index":904,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["parsest",{"_index":887,"title":{},"body":{"injectables/NgStateService.html":{}}}],["parsestates(st",{"_index":889,"title":{},"body":{"injectables/NgStateService.html":{}}}],["parsetransitionexpress",{"_index":897,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["parsetransitionexpression(transit",{"_index":902,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["part",{"_index":239,"title":{},"body":{"modules/ContentConductorModule.html":{},"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-animations.html":{}}}],["partial",{"_index":1235,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["particular",{"_index":117,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"injectables/DynamicAnimationsService.html":{},"license.html":{}}}],["pass",{"_index":497,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["permiss",{"_index":1081,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1101,"title":{},"body":{"license.html":{}}}],["person",{"_index":1086,"title":{},"body":{"license.html":{}}}],["piec",{"_index":1195,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["pipe",{"_index":668,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["plan",{"_index":1230,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["play",{"_index":37,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"additional-documentation/dynamic-animations.html":{}}}],["pleas",{"_index":1214,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["point",{"_index":694,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["portion",{"_index":1109,"title":{},"body":{"license.html":{}}}],["potenti",{"_index":728,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["predefin",{"_index":1040,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["preserv",{"_index":1268,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["previouscontain",{"_index":194,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["privat",{"_index":96,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgTransitionService.html":{}}}],["project",{"_index":1073,"title":{},"body":{"index.html":{}}}],["projects/.../anim",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../cont",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dynam",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../initi",{"_index":1138,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../input",{"_index":1140,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../leav",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../leave.directive.t",{"_index":1047,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../ng",{"_index":1037,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../not",{"_index":1143,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../output",{"_index":1145,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../typ",{"_index":1148,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/common/not",{"_index":1151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/common/typ",{"_index":1155,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/cont",{"_index":128,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/dvk/src/lib/dynam",{"_index":5,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properli",{"_index":1271,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["properti",{"_index":20,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentContainer.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/typealiases.html":{}}}],["protect",{"_index":698,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["provid",{"_index":17,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"injectables/NgTransitionService.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["pseudo",{"_index":1008,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":871,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["publish",{"_index":1096,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1115,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-components.html":{}}}],["put",{"_index":222,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"interfaces/DynamicComponentData.html":{}}}],["queri",{"_index":293,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["querylist",{"_index":146,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["read",{"_index":1176,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["readonli",{"_index":311,"title":{},"body":{"interfaces/ContentContainer.html":{}}}],["recogn",{"_index":1203,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["red",{"_index":569,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["refer",{"_index":28,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"directives/ContentContainerDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMapper.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["referenc",{"_index":1172,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["reflectiveinjector",{"_index":731,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["reflectiveinjector.resolve(provid",{"_index":779,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["releas",{"_index":27,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMapper.html":{}}}],["remov",{"_index":179,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["removeal",{"_index":956,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["render",{"_index":973,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.addclass(element,this.getcssclass(state,map",{"_index":976,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.destroy",{"_index":979,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.removeclass(element,this.getcssclass(state,map",{"_index":975,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["rendererfactori",{"_index":965,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["rendererfactory2",{"_index":963,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["report",{"_index":1224,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["repres",{"_index":109,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductorConstructor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicComponentData.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["request",{"_index":733,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["requir",{"_index":297,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["reset",{"_index":236,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["resolv",{"_index":299,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-components.html":{}}}],["resolvecomponentfactory(constructor",{"_index":782,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["resourc",{"_index":1192,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["respect",{"_index":621,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["restrict",{"_index":1092,"title":{},"body":{"license.html":{}}}],["result",{"_index":52,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["return",{"_index":78,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["reus",{"_index":691,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["rich",{"_index":1056,"title":{},"body":{"index.html":{}}}],["right",{"_index":1094,"title":{},"body":{"license.html":{}}}],["run",{"_index":600,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["runtim",{"_index":619,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["rxj",{"_index":354,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":752,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["safe",{"_index":1262,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["same",{"_index":665,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["scaley(0.0",{"_index":562,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["scaley(1.0",{"_index":559,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["section",{"_index":1215,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["see",{"_index":279,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{}}}],["selector",{"_index":315,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{}}}],["sell",{"_index":1100,"title":{},"body":{"license.html":{}}}],["separ",{"_index":652,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["seri",{"_index":602,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["serial",{"_index":470,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["serializ",{"_index":1256,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["serializednam",{"_index":841,"title":{},"body":{"interfaces/DynamicComponentsMap.html":{}}}],["serializedname:str",{"_index":842,"title":{},"body":{"interfaces/DynamicComponentsMap.html":{}}}],["serializemap",{"_index":823,"title":{},"body":{"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializemap.get(componentconstructor",{"_index":487,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.constructor",{"_index":834,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{}}}],["serializer.constructor.t",{"_index":819,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{},"coverage.html":{}}}],["serializer.model",{"_index":484,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["serializer.model.t",{"_index":814,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{},"coverage.html":{}}}],["serializer.model.ts:7",{"_index":815,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["serializer.model.ts:8",{"_index":816,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["serializer.servic",{"_index":854,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["serializer.service.t",{"_index":824,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"coverage.html":{}}}],["serializer.service.ts:13",{"_index":827,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.service.ts:20",{"_index":831,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.t",{"_index":468,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"coverage.html":{}}}],["serializer.token",{"_index":833,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{}}}],["serializer.token.t",{"_index":1017,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializer.ts:10",{"_index":475,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.ts:14",{"_index":478,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.ts:19",{"_index":481,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer/default",{"_index":467,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["serializer/dynam",{"_index":483,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializerconstructor",{"_index":828,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializerconstrutor",{"_index":855,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["serializermap",{"_index":476,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializermap.deserializemap.set(nam",{"_index":838,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializermap.serializemap.set(map[nam",{"_index":837,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serialz",{"_index":690,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["serveangular",{"_index":1071,"title":{},"body":{"index.html":{}}}],["server",{"_index":1249,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["servic",{"_index":74,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-components.html":{}}}],["set",{"_index":313,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["setanim",{"_index":413,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["setanimations(anim",{"_index":542,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["setanimations(transit",{"_index":430,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["setcomponentmodel(compmodel",{"_index":750,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setcssmap",{"_index":414,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["setcssmap(map",{"_index":432,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["setinitialvalu",{"_index":709,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setinitialvalues(initvalu",{"_index":742,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setleavetim",{"_index":872,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["setleavetiming(tim",{"_index":875,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["setstate(st",{"_index":541,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["shall",{"_index":1107,"title":{},"body":{"license.html":{}}}],["shape",{"_index":11,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":850,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["simpl",{"_index":1209,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["simpli",{"_index":1232,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["singl",{"_index":190,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["skip",{"_index":504,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["softwar",{"_index":1089,"title":{},"body":{"license.html":{}}}],["soon",{"_index":1065,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["specif",{"_index":606,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["specifi",{"_index":176,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["specii",{"_index":499,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["standard",{"_index":1197,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["start",{"_index":110,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"index.html":{}}}],["state",{"_index":7,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state('closed',styl",{"_index":561,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state('open',styl",{"_index":557,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state(state:str",{"_index":576,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["state.servic",{"_index":551,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["state.service.t",{"_index":885,"title":{},"body":{"injectables/NgStateService.html":{},"coverage.html":{}}}],["state.service.ts:10",{"_index":888,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state.service.ts:17",{"_index":890,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state.styl",{"_index":893,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state/ng",{"_index":550,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgStateService.html":{},"coverage.html":{}}}],["state1",{"_index":925,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state1]:transition.anim",{"_index":932,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state2",{"_index":927,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state2]:transition.anim",{"_index":930,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state:str",{"_index":45,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["state:string)=>void",{"_index":958,"title":{},"body":{"interfaces/StateCSSMapper.html":{}}}],["statecssmap",{"_index":417,"title":{"interfaces/StateCSSMap.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["statecssmapp",{"_index":41,"title":{"interfaces/StateCSSMapper.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["statecssmapper)=>str",{"_index":50,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["statecssmapper)=>void",{"_index":47,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["statecssmapperservic",{"_index":419,"title":{"injectables/StateCssMapperService.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{}}}],["stateless",{"_index":1254,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["statemachineconstructor",{"_index":80,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["statement",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["statemod",{"_index":511,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["states.reduce((map,st",{"_index":891,"title":{},"body":{"injectables/NgStateService.html":{}}}],["states.servic",{"_index":437,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["states.service.t",{"_index":73,"title":{},"body":{"injectables/AnimationStatesService.html":{},"coverage.html":{}}}],["states.service.ts:18",{"_index":81,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["states.service.ts:32",{"_index":86,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["states/anim",{"_index":72,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["states[0].trim",{"_index":926,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["states[1].trim",{"_index":928,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["statesservic",{"_index":521,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["static",{"_index":272,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["step",{"_index":502,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["still",{"_index":727,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["store",{"_index":653,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-components.html":{}}}],["stream",{"_index":663,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["streams.model",{"_index":756,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{}}}],["streams.model.t",{"_index":1141,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["streams/input",{"_index":755,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["streams[input",{"_index":791,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["string",{"_index":49,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["string):viewref",{"_index":213,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["string):void",{"_index":206,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["strstate",{"_index":512,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["structur",{"_index":328,"title":{},"body":{"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["stub",{"_index":857,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":67,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["sub.unsubscrib",{"_index":808,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subject",{"_index":676,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"license.html":{},"additional-documentation/dynamic-components.html":{}}}],["sublicens",{"_index":1098,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1222,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["subscribe((c",{"_index":368,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["subscribe((t",{"_index":372,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["subscribe(ev",{"_index":800,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subscribe(valu",{"_index":792,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subscript",{"_index":340,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["subscriptions.foreach(sub",{"_index":806,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["substanti",{"_index":1108,"title":{},"body":{"license.html":{}}}],["such",{"_index":1206,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["suitabl",{"_index":650,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["suppli",{"_index":145,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["support",{"_index":305,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"injectables/NgTransitionService.html":{},"modules.html":{},"additional-documentation/content-conductor/example.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-animations/example.html":{},"additional-documentation/dynamic-components/example.html":{}}}],["svg",{"_index":1129,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1042,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":290,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{},"miscellaneous/typealiases.html":{}}}],["tabl",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":867,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["templat",{"_index":292,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["templateref",{"_index":144,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["test",{"_index":1219,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["text",{"_index":675,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["textclick",{"_index":1263,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["textcompon",{"_index":682,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["textcomponent':textcompon",{"_index":673,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.animationshandl",{"_index":590,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandler.nextstate(ngtransitionstates.void",{"_index":597,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandler.nextstate(this.strst",{"_index":579,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandlerconstructor",{"_index":644,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["this.animationsstatemachin",{"_index":455,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.destroy",{"_index":450,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.init",{"_index":458,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.next",{"_index":447,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationstatesbuild",{"_index":456,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["this.attachinputstreams(compmodel.input",{"_index":774,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.attachoutputcallbacks(compmodel.outputcallback",{"_index":775,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.build",{"_index":100,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["this.ccservic",{"_index":1181,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.closeallsubscriptions(this.inputsubscript",{"_index":803,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.closeallsubscriptions(this.outputsubscript",{"_index":802,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref",{"_index":770,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.changedetectorref.markforcheck",{"_index":777,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.destroy",{"_index":804,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.instance[cb",{"_index":799,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.instance[input",{"_index":785,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.conductor",{"_index":1180,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.attachview('two',vref);detach",{"_index":1189,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.attachviews('two',views);fin",{"_index":1191,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.destroy",{"_index":1193,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.detachview('one',2);attach",{"_index":1188,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.detachviews('one');and",{"_index":1190,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.init('on",{"_index":1184,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.moveview('one','two',3);detach",{"_index":1186,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.moveviews('one','two');th",{"_index":1185,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductorconstructor",{"_index":303,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["this.cont",{"_index":1183,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.contain",{"_index":359,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap",{"_index":363,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].detach(index",{"_index":391,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].insert(view",{"_index":401,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].length",{"_index":398,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[initialcontain",{"_index":375,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].insert",{"_index":396,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].insert(view",{"_index":390,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].length",{"_index":388,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[previouscontainer].detach(fromindex",{"_index":389,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[previouscontainer].length",{"_index":384,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersquerylist",{"_index":366,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersquerylist.toarray",{"_index":360,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub",{"_index":365,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub.clos",{"_index":378,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub.unsubscrib",{"_index":379,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentsquerylist",{"_index":371,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentsquerylist.toarray",{"_index":362,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub",{"_index":370,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub.clos",{"_index":381,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub.unsubscrib",{"_index":382,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.createcompon",{"_index":771,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.createcssmapper(cssmap",{"_index":439,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createcssmapper(map",{"_index":442,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createinjector(compmodel.provid",{"_index":772,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.createstatemachine(this.transit",{"_index":440,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createstatemachine(transit",{"_index":449,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmap",{"_index":452,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.cssmapp",{"_index":448,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.add(this.st",{"_index":464,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.destroy",{"_index":451,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.removeal",{"_index":461,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapperservic",{"_index":462,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["this.currentst",{"_index":1233,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["this.daservice.createanimationshandl",{"_index":591,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.data",{"_index":1264,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["this.dcsservice.createseri",{"_index":1252,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["this.destroycomp",{"_index":769,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.dsservice.createseri",{"_index":672,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.dvkleav",{"_index":588,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.dvkleave.setleavetiming(\"500m",{"_index":589,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.el",{"_index":457,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.element.nativeel",{"_index":592,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.initializecomponent(compmodel",{"_index":763,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.inputsubscript",{"_index":789,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.isst",{"_index":584,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.mapcontainers(this.contain",{"_index":364,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.myst",{"_index":574,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.onclick",{"_index":684,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.outputsubscript",{"_index":796,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.parsetransitionexpression(transit",{"_index":913,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["this.rendererfactory.createrenderer(element,nul",{"_index":974,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["this.resolv",{"_index":781,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.seri",{"_index":671,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.serializer.getcomponent(compmodel.nam",{"_index":765,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.serializerconstructor(serializermap",{"_index":840,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["this.serializermap",{"_index":485,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["this.setinitialvalues(compmodel.initialvalu",{"_index":773,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.stat",{"_index":445,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.statemachineconstructor",{"_index":99,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["this.states.push(anim",{"_index":585,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.statesservice.parsestates(this.st",{"_index":595,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.strstat",{"_index":577,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.styl",{"_index":441,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.templ",{"_index":361,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.templates.map(templ",{"_index":374,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.text$.asobserv",{"_index":685,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.timingparam",{"_index":879,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["this.transervice.buildanimationtransitions(this.transit",{"_index":594,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.transit",{"_index":453,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.transitions.push(anim",{"_index":583,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.vcref",{"_index":326,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["this.vcref.insert(this.compref.hostview",{"_index":776,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.vcref.parentinjector",{"_index":780,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["those",{"_index":244,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["though",{"_index":296,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["through",{"_index":248,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["tie",{"_index":811,"title":{},"body":{"interfaces/DynamicComponentModel.html":{}}}],["time",{"_index":601,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["timingparam",{"_index":878,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["tme321",{"_index":1080,"title":{},"body":{"license.html":{}}}],["togglest",{"_index":572,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["toindex",{"_index":156,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["token",{"_index":257,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":1053,"title":{},"body":{"index.html":{}}}],["top",{"_index":106,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["tort",{"_index":1126,"title":{},"body":{"license.html":{}}}],["tostat",{"_index":116,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/NgTransitionService.html":{}}}],["tostate:str",{"_index":607,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["tostate]:transition.anim",{"_index":936,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["track",{"_index":662,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["transervic",{"_index":519,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["transfer",{"_index":1257,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["transform",{"_index":558,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transit",{"_index":35,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition(\":leav",{"_index":882,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["transition(':enter',animate('200m",{"_index":564,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["transition(':leave',animate('200m",{"_index":568,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition('en",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('openclosed',animate('200m",{"_index":563,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition.expr",{"_index":920,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.servic",{"_index":546,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["transition.service.t",{"_index":894,"title":{},"body":{"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["transition.service.ts:12",{"_index":898,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.service.ts:22",{"_index":900,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.service.ts:41",{"_index":903,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.st",{"_index":548,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["transition.states.t",{"_index":1038,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transition.symbol",{"_index":910,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.symbols.t",{"_index":1039,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transition/ng",{"_index":545,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["transitions.model",{"_index":64,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{}}}],["transitions.model.t",{"_index":101,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"coverage.html":{}}}],["transitions.model.ts:12",{"_index":120,"title":{},"body":{"interfaces/AnimationTransitionsMap.html":{}}}],["transitions.model.ts:22",{"_index":104,"title":{},"body":{"interfaces/AnimationStylesMap.html":{}}}],["transitions.reduce((transmap",{"_index":911,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions/anim",{"_index":63,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["transitions[fromst",{"_index":935,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[ngtransitionstates.void",{"_index":938,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[ngtransitionstates.wildcard",{"_index":942,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[state1",{"_index":929,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[state2",{"_index":931,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["translat",{"_index":1246,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["transmap",{"_index":919,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmap[fromst",{"_index":916,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmap[fromstate][tost",{"_index":917,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmit",{"_index":1248,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["trigger",{"_index":493,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["trigger(\"dvkleav",{"_index":881,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["trigger('dvkleav",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":1178,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["ts",{"_index":506,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{}}}],["twiddl",{"_index":253,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["two",{"_index":1269,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["type",{"_index":25,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["typealias",{"_index":1136,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedkey",{"_index":1147,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":298,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["uat/dynamicviewkit",{"_index":1049,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":387,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"injectables/NgTransitionService.html":{}}}],["under",{"_index":862,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["unless",{"_index":1266,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["until",{"_index":1275,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["up",{"_index":168,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["us",{"_index":14,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["usag",{"_index":281,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{}}}],["user",{"_index":243,"title":{},"body":{"modules/ContentConductorModule.html":{},"index.html":{}}}],["usevalu",{"_index":274,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["usual",{"_index":605,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["valid",{"_index":907,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["valu",{"_index":88,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["values.model",{"_index":658,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{}}}],["values.model.t",{"_index":1139,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values/initi",{"_index":657,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{}}}],["variabl",{"_index":986,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vcref",{"_index":321,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["version",{"_index":261,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"index.html":{}}}],["view",{"_index":132,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["viewchildren(contentcontainerdirect",{"_index":1179,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["viewcontain",{"_index":310,"title":{},"body":{"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{}}}],["viewcontainerref",{"_index":134,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["viewref",{"_index":155,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["viewscach",{"_index":393,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["void",{"_index":51,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["vref",{"_index":1187,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["wait",{"_index":858,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["warranti",{"_index":1110,"title":{},"body":{"license.html":{}}}],["way",{"_index":666,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["well",{"_index":1212,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["whether",{"_index":1123,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1057,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["wild",{"_index":1210,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["wildcard",{"_index":1041,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wire",{"_index":633,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"modules/DynamicComponentsModule.html":{}}}],["within",{"_index":241,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["without",{"_index":640,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"license.html":{}}}],["work",{"_index":1204,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["wrapper",{"_index":308,"title":{},"body":{"interfaces/ContentContainer.html":{}}}],["x",{"_index":399,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["ye",{"_index":160,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["zone.j",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":235,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AnimationStateMachine.html":{"url":"interfaces/AnimationStateMachine.html","title":"interface - AnimationStateMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStateMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an animation state machine to be used by a component or\ndirective that wants to provide dynamic animations.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destroy\n                                \n                                \n                                        init\n                                \n                                \n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references held by the object created for \nthe state machine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                    \n                                \n                                \n                                    \n                                        init:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Initialize the state and css class of the state machine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transition the state from the current state to the next state, \nplaying any animations and applying any css classes as defined.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateCSSMapper } from \"../state-css-mapper/state-css-mapper.model\";\n\n/**\n * The shape of an animation state machine to be used by a component or\n * directive that wants to provide dynamic animations.\n * \n */\nexport interface AnimationStateMachine {\n\n  /**\n   * Initialize the state and css class of the state machine.\n   */\n  init: (state:string, mapper?: StateCSSMapper)=>void;\n\n  /**\n   * Transition the state from the current state to the next state, \n   * playing any animations and applying any css classes as defined.\n   */\n  next: (nextState: string, mapper?: StateCSSMapper)=>string;\n\n  /**\n   * Release the references held by the object created for \n   * the state machine.\n   */\n  destroy: ()=>void;\n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationStateMachineConstructor.html":{"url":"interfaces/AnimationStateMachineConstructor.html","title":"interface - AnimationStateMachineConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStateMachineConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.constructor.ts\n        \n\n            \n                Description\n            \n            \n                The shape of a class constructor that can act as the animation state machine.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { AnimationBuilder } from '@angular/animations';\nimport { AnimationStateMachine } from './animation-state-machine.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\n\n/**\n * The shape of a class constructor that can act as the animation state machine.\n */\nexport interface AnimationStateMachineConstructor {\n    new( \n        element: any, \n        transitions: AnimationTransitionsMap,\n        styles: AnimationStylesMap,\n        builder: AnimationBuilder):AnimationStateMachine;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationStatesService.html":{"url":"injectables/AnimationStatesService.html","title":"injectable - AnimationStatesService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AnimationStatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts\n        \n\n            \n                Description\n            \n            \n                This service creates an animation transition \nstate machine with the method \ncreateAnimationStateMachine \nfrom given AnimationTransitionsMap\nand AnimationStylesMap objects.\nThe returned state machine is in the shape of \nAnimationStateMachine.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimationStateMachine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: AnimationBuilder, stateMachineConstructor: AnimationStateMachineConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    AnimationBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateMachineConstructor\n                                                  \n                                                        \n                                                                    AnimationStateMachineConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createAnimationStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateAnimationStateMachine(element: any, transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Create an AnimationStateMachine to apply to an\nelement when the state is transitioned.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to apply the animations to.\n\n                                                        \n                                                \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The AnimationTransitionsMap to play. \n\n                                                        \n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationStylesMap to apply.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { AnimationBuilder } from '@angular/animations';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { AnimationStateMachineConstructorToken } from '../animation-state-machine/animation-state-machine.token';\nimport { AnimationStateMachineConstructor } from '../animation-state-machine/animation-state-machine.constructor';\n\n/**\n * This service creates an animation transition \n * state machine with the method \n * [createAnimationStateMachine]{@link AnimationStatesService#createAnimationStateMachine} \n * from given {@link AnimationTransitionsMap}\n * and {@link AnimationStylesMap} objects.\n * \n * The returned state machine is in the shape of \n * {@link AnimationStateMachine}.\n */\n@Injectable()\nexport class AnimationStatesService {\n\n  constructor(\n    private builder: AnimationBuilder,\n    @Inject(AnimationStateMachineConstructorToken)\n    private stateMachineConstructor: AnimationStateMachineConstructor) {}\n\n  /**\n   * Create an {@link AnimationStateMachine} to apply to an\n   * element when the state is transitioned.\n   * @param element The element to apply the animations to.\n   * @param transitions The AnimationTransitionsMap to play. \n   * @param styles The AnimationStylesMap to apply.\n   */\n  createAnimationStateMachine(\n    element: any, \n    transitions: AnimationTransitionsMap = {},\n    styles: AnimationStylesMap) {\n\n    return new this.stateMachineConstructor(\n      element,\n      transitions,\n      styles,\n      this.builder\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationStylesMap.html":{"url":"interfaces/AnimationStylesMap.html","title":"interface - AnimationStylesMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStylesMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n        \n\n            \n                Description\n            \n            \n                A mapping of state strings to AnimationStyleMetadata\ncreated with the style function. \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [state: string]:    AnimationStyleMetadata\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts:22\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AnimationMetadata, AnimationStyleMetadata } from \"@angular/animations\";\n\n/**\n * A map of states and AnimationMetadata. \n * The top level keys are the strings representing the states\n * a transition starts from.  The inner keys are the strings \n * representing the state being transitioned to.  Each fromState \n * can have an animation defined for any number of toStates \n * to play when that particular transition occurs.\n * \n */\nexport interface AnimationTransitionsMap {\n  [fromState: string]: {\n    [toState: string]: AnimationMetadata | AnimationMetadata[];\n  }\n} \n\n/**\n * A mapping of state strings to AnimationStyleMetadata\n * created with the style function. \n */\nexport interface AnimationStylesMap {\n  [state: string]: AnimationStyleMetadata; \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationTransitionsMap.html":{"url":"interfaces/AnimationTransitionsMap.html","title":"interface - AnimationTransitionsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationTransitionsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of states and AnimationMetadata. \nThe top level keys are the strings representing the states\na transition starts from.  The inner keys are the strings \nrepresenting the state being transitioned to.  Each fromState \ncan have an animation defined for any number of toStates \nto play when that particular transition occurs.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [fromState: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts:12\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AnimationMetadata, AnimationStyleMetadata } from \"@angular/animations\";\n\n/**\n * A map of states and AnimationMetadata. \n * The top level keys are the strings representing the states\n * a transition starts from.  The inner keys are the strings \n * representing the state being transitioned to.  Each fromState \n * can have an animation defined for any number of toStates \n * to play when that particular transition occurs.\n * \n */\nexport interface AnimationTransitionsMap {\n  [fromState: string]: {\n    [toState: string]: AnimationMetadata | AnimationMetadata[];\n  }\n} \n\n/**\n * A mapping of state strings to AnimationStyleMetadata\n * created with the style function. \n */\nexport interface AnimationStylesMap {\n  [state: string]: AnimationStyleMetadata; \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentConstructor.html":{"url":"interfaces/ComponentConstructor.html","title":"interface - ComponentConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/component-constructor/component-constructor.model.ts\n        \n\n            \n                Description\n            \n            \n                Component constructor definition.\n\n            \n\n\n\n\n\n    \n\n\n    \n        export interface ComponentConstructor {\n    new(...args):any;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainersMap.html":{"url":"interfaces/ContainersMap.html","title":"interface - ContainersMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainersMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of string names to view containers.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    ViewContainerRef\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\n\n/**\n * A map of string names to view containers.\n */\nexport interface ContainersMap { \n    [name:string]: ViewContainerRef \n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentConductor.html":{"url":"interfaces/ContentConductor.html","title":"interface - ContentConductor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentConductor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.model.ts\n        \n\n            \n                Description\n            \n            \n                This is the shape of the object returned by the injectable\nContentConductorService that allows content in the\nform of TemplateRefs supplied by a QueryList to\nbe moved between multiple containers. \nThe number of containers and the number of views to move between\nthem is not limited.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    attachView\n                                \n                                \n                                    attachViews\n                                \n                                \n                                    destroy\n                                \n                                \n                                    detachView\n                                \n                                \n                                    detachViews\n                                \n                                \n                                    init\n                                \n                                \n                                    moveView\n                                \n                                \n                                    moveViews\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachView\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachView(container: string, view: ViewRef, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:91\n                            \n                        \n\n\n                \n                    \n                            Attach a ViewRef to a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto attach the ViewRef to.\n\n                                                        \n                                                \n                                                \n                                                        view\n                                                        \n                                                                    ViewRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ViewRef to attach.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index in the container to attach the view.\nIf ommitted the view is attached to the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachViews(container: string, views?: ViewRef[], toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:101\n                            \n                        \n\n\n                \n                    \n                            Attach an array of ViewRefs to a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto attach the ViewRefs array to.\n\n                                                        \n                                                \n                                                \n                                                        views\n                                                        \n                                                                    ViewRef[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The ViewRefs array to attach.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index in the container to attach the views.\nIf ommitted the views are attached to the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:28\n                            \n                        \n\n\n                \n                    \n                            Clean up, should be called by the component or directive's\nngOnDestroy method that is displaying the content. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachView\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachView(container: string, index?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:56\n                            \n                        \n\n\n                \n                    \n                            Detach a ViewRef from a ContentContainerDirective\nspecified by it's index inside the ViewContainerRef\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string name of the ContentContainerDirective\nto remove the ViewRef from.\n\n                                                        \n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the ViewRef to remove. If ommitted the\nlast ViewRef is removed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ViewRef\n\n                            \n                                \n                                    The detached ViewRef.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachViews(container: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:81\n                            \n                        \n\n\n                \n                    \n                            Remove all ViewRefs from a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The name of the ContentContainerDirective \nto remove the ViewRefs from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ViewRef[]\n\n                            \n                                \n                                    An array of the ViewRefs removed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(initialContainer: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:22\n                            \n                        \n\n\n                \n                    \n                            Initialize the content into the container of the given\nstring name.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initialContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the string name of the container\nto create the content initially inside of.  \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveView\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveView(previousContainer: string, nextContainer: string, fromIndex: number, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:41\n                            \n                        \n\n\n                \n                    \n                            Move a single ViewRef identified by it's index \nfrom one ContentContainerDirective to the another.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The source ContentContainerDirective's name\nwhere the ViewRef is currently located.\n\n                                                        \n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The destination ContentContainerDirective's name\nwhere the ViewRef will be moved to.\n\n                                                        \n                                                \n                                                \n                                                        fromIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index inside the nextContainer to insert the ViewRef.\nIf not specified the ViewRef is added to the end of the container.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveViews(previousContainer: string, nextContainer: string, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:70\n                            \n                        \n\n\n                \n                    \n                            Move all of the ViewRefs from one ContentContainerDirective\nto another.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto remove the ViewRef from.\n\n                                                        \n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto add the ViewRef to.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index inside nextContainer to insert\nthe views, if ommitted the views are inserted at the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ViewRef } from '@angular/core';\nimport { ContentContainer } from './content-container/content-container.model';\n\n/**\n * This is the shape of the object returned by the injectable\n * {@link ContentConductorService} that allows content in the\n * form of TemplateRefs supplied by a QueryList to\n * be moved between multiple containers. \n * \n * The number of containers and the number of views to move between\n * them is not limited.\n * \n */\nexport interface ContentConductor {\n\n    /**\n     * Initialize the content into the container of the given\n     * string name.\n     * @param initialContainer the string name of the container\n     * to create the content initially inside of.  \n     */\n    init(initialContainer: string):void;\n\n    /**\n     *  Clean up, should be called by the component or directive's\n     *  ngOnDestroy method that is displaying the content. \n     */\n    destroy():void;\n\n    /**\n     * Move a single ViewRef identified by it's index \n     * from one {@link ContentContainerDirective} to the another.\n     * @param previousContainer The source ContentContainerDirective's name\n     * where the ViewRef is currently located.\n     * @param nextContainer The destination ContentContainerDirective's name\n     * where the ViewRef will be moved to.\n     * @param fomrIndex The index of the ViewRef to move from previousContainer.\n     * @param toIndex The index inside the nextContainer to insert the ViewRef.\n     * If not specified the ViewRef is added to the end of the container.\n     */\n    moveView( \n        previousContainer: string,\n        nextContainer:string, \n        fromIndex: number,\n        toIndex?: number):void;\n\n    /**\n     * Detach a ViewRef from a {@link ContentContainerDirective}\n     * specified by it's index inside the ViewContainerRef\n     * @param container The string name of the ContentContainerDirective\n     * to remove the ViewRef from.\n     * @param index The index of the ViewRef to remove. If ommitted the\n     * last ViewRef is removed.\n     * @returns The detached ViewRef.\n     */\n    detachView(\n        container:string,\n        index?: number):ViewRef;\n\n    /**\n     * Move all of the ViewRefs from one {@link ContentContainerDirective}\n     * to another.\n     * @param previousContainer The ContentContainerDirective \n     * to remove the ViewRef from.\n     * @param nextContainer The ContentContainerDirective \n     * to add the ViewRef to.\n     * @param toIndex The index inside nextContainer to insert\n     * the views, if ommitted the views are inserted at the end.\n     */\n    moveViews(\n        previousContainer: string, \n        nextContainer: string,\n        toIndex?: number):void;\n\n    /**\n     * Remove all ViewRefs from a {@link ContentContainerDirective}.\n     * @param container The name of the ContentContainerDirective \n     * to remove the ViewRefs from.\n     * @returns An array of the ViewRefs removed.\n     */\n    detachViews(container: string):ViewRef[];\n\n    /**\n     * Attach a ViewRef to a {@link ContentContainerDirective}.\n     * @param container The ContentContainerDirective \n     * to attach the ViewRef to.\n     * @param view The ViewRef to attach.\n     * @param toIndex The index in the container to attach the view.\n     * If ommitted the view is attached to the end.\n     */\n    attachView(container:string, view: ViewRef, toIndex?: number):void;\n\n    /**\n     * Attach an array of ViewRefs to a {@link ContentContainerDirective}.\n     * @param container The ContentContainerDirective \n     * to attach the ViewRefs array to.\n     * @param views The ViewRefs array to attach.\n     * @param toIndex The index in the container to attach the views.\n     * If ommitted the views are attached to the end.\n     */\n    attachViews(container:string, views?: ViewRef[], toIndex?: number):void;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentConductorConstructor.html":{"url":"interfaces/ContentConductorConstructor.html","title":"interface - ContentConductorConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentConductorConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.model.ts\n        \n\n            \n                Description\n            \n            \n                A constructor that returns an implementation \nof ContentConductor.  \n\n            \n\n\n\n\n\n    \n\n\n    \n        import { QueryList, TemplateRef } from '@angular/core';\nimport { ContentConductor } from \"../content-conductor.model\";\nimport { ContentContainer } from '../content-container/content-container.model';\n\n/**\n * A constructor that returns an implementation \n * of {@link ContentConductor}.  \n * \n * @param containersQueryList Should be a QueryList \n * of containers that views can be put into.  \n * \n * @param contentsQueryList Should be a QueryList of \n * the TemplateRefs representing the content to \n * display inside the containers.\n */\nexport interface ContentConductorConstructor {\n  new(\n    containersQueryList: QueryList,\n    contentsQueryList : QueryList>\n  ):ContentConductor;\n}\n  \n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentConductorModule.html":{"url":"modules/ContentConductorModule.html","title":"module - ContentConductorModule","body":"\n                   \n\n\n\n\n  Modules\n  ContentConductorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentConductorModule\n\n\n\ncluster_ContentConductorModule_declarations\n\n\n\ncluster_ContentConductorModule_exports\n\n\n\ncluster_ContentConductorModule_providers\n\n\n\n\nContentContainerDirective\n\nContentContainerDirective\n\n\n\nContentConductorModule\n\nContentConductorModule\n\nContentConductorModule -->\n\nContentContainerDirective->ContentConductorModule\n\n\n\n\n\nContentDirective\n\nContentDirective\n\nContentConductorModule -->\n\nContentDirective->ContentConductorModule\n\n\n\n\n\nContentContainerDirective \n\nContentContainerDirective \n\nContentContainerDirective  -->\n\nContentConductorModule->ContentContainerDirective \n\n\n\n\n\nContentDirective \n\nContentDirective \n\nContentDirective  -->\n\nContentConductorModule->ContentDirective \n\n\n\n\n\nContentConductorService\n\nContentConductorService\n\nContentConductorModule -->\n\nContentConductorService->ContentConductorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Content Conductor Module contains the parts necessary to define \ncontainers within a component's view, allow users to provide content\nfor those containers, and move the content between those containers \nbased on string names assigned to each container.\nThis functionality is handled through Angular's own abstractions \ninstead of manually twiddling DOM elements.\nThe forRoot function instantiates the module with a token \nfor the ContentConductorService to actually create the \nContentConductor that provides the functionality and must \nbe called for the provided functionality.  The optional parameter \nis the class that actually provides the functionality for moving\ncontent.  By default the DefaultContentConductorService is\nused but a custom version can be supplied that conforms to the\nContentConductor interface.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContentContainerDirective\n                            \n                            \n                                ContentDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ContentConductorService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ContentContainerDirective\n                            \n                            \n                                    ContentDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { DefaultContentConductorService } from './default-content-conductor/default-content-conductor.service';\nimport { ContentConductorConstructorToken } from './content-conductor-constructor/content-conductor-constructor.token';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ContentConductorService } from './content-conductor.service';\nimport { ContentDirective } from './content/content.directive';\nimport { ContentContainerDirective } from './content-container/content-container.directive';\nimport { ContentConductorConstructor } from './content-conductor-constructor/content-conductor-constructor.model';\n\n/**\n * The Content Conductor Module contains the parts necessary to define \n * containers within a component's view, allow users to provide content\n * for those containers, and move the content between those containers \n * based on string names assigned to each container.\n * \n * This functionality is handled through Angular's own abstractions \n * instead of manually twiddling DOM elements.\n * \n * The forRoot function instantiates the module with a token \n * for the {@link ContentConductorService} to actually create the \n * {@link ContentConductor} that provides the functionality and must \n * be called for the provided functionality.  The optional parameter \n * is the class that actually provides the functionality for moving\n * content.  By default the {@link DefaultContentConductorService} is\n * used but a custom version can be supplied that conforms to the\n * {@link ContentConductor} interface.\n */\n@NgModule({\n  declarations: [\n    ContentDirective, \n    ContentContainerDirective \n  ],\n  exports: [\n    ContentDirective, \n    ContentContainerDirective\n  ],\n  providers: [\n    ContentConductorService\n  ]\n})\nexport class ContentConductorModule {\n  static forRoot(conductorConstructor: ContentConductorConstructor = DefaultContentConductorService): ModuleWithProviders {\n    return {\n      ngModule: ContentConductorModule,\n      providers: [\n        { \n          provide: ContentConductorConstructorToken, \n          useValue: conductorConstructor  \n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentConductorService.html":{"url":"injectables/ContentConductorService.html","title":"injectable - ContentConductorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ContentConductorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.service.ts\n        \n\n            \n                Description\n            \n            \n                This service can be injected into a component in order to\ncreate a ContentConductor.\nSee ContentConductor for the details.\nExample of usage:\n../../docs/examples/index.html#/ContentConductor\n\n            \n\n            \n                Example\n            \n            \n                        \n                            constructor(private conductorService: ContentConductorService) {}\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createContentConductor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(conductorConstructor: ContentConductorConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content-conductor.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conductorConstructor\n                                                  \n                                                        \n                                                                    ContentConductorConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createContentConductor\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateContentConductor(containersQueryList: QueryList, contentsQueryList: QueryList>)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.service.ts:41\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Create a ContentConductor\nfor moving content around a component's template.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        containersQueryList\n                                                        \n                                                                    QueryList\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A query list of ContentContainers\n\n                                                        \n                                                \n                                                \n                                                        contentsQueryList\n                                                        \n                                                                    QueryList>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A query list of TemplateRefs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The ContentConductor\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, QueryList, TemplateRef, Inject } from '@angular/core';\nimport { ContentContainer } from './content-container/content-container.model';\nimport { ContentConductorConstructorToken } from './content-conductor-constructor/content-conductor-constructor.token';\nimport { ContentConductorConstructor } from './content-conductor-constructor/content-conductor-constructor.model';\n\n/*\n * Even though this import is not used it is required for typescript\n * to resolve the return type of the createContentConductor method.\n * If it is removed this service will not compile correctly.\n */\nimport { ContentConductor } from './content-conductor.model';\n\n/**\n * This service can be injected into a component in order to\n * create a {@link ContentConductor}.\n * \n * See {@link ContentConductor} for the details.\n * \n *  \n * Example of usage:\n * ../../docs/examples/index.html#/ContentConductor\n *\n * \n * @example\n * constructor(private conductorService: ContentConductorService) {}\n */\n@Injectable()\nexport class ContentConductorService {\n \n  constructor(\n    @Inject(ContentConductorConstructorToken) \n    private conductorConstructor: ContentConductorConstructor) { }\n\n  /**\n   * Create a {@link ContentConductor}\n   * for moving content around a component's template.\n   * @param containersQueryList A query list of ContentContainers\n   * @param contentsQueryList A query list of TemplateRefs.\n   * @return The ContentConductor\n   */\n  createContentConductor(\n    containersQueryList: QueryList,\n    contentsQueryList : QueryList>) {\n    \n    return  new this.conductorConstructor(\n      containersQueryList,\n      contentsQueryList\n    );\n  }\n  \n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainer.html":{"url":"interfaces/ContentContainer.html","title":"interface - ContentContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-container/content-container.model.ts\n        \n\n            \n                Description\n            \n            \n                A wrapper around a ViewContainerRef\nand a string name identifier.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        containerName\n                                \n                                \n                                        viewContainer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        containerName\n                                    \n                                \n                                \n                                    \n                                        containerName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewContainer\n                                    \n                                \n                                \n                                    \n                                        viewContainer:     ViewContainerRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ViewContainerRef\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\n\n/**\n * A wrapper around a ViewContainerRef\n * and a string name identifier.\n */\nexport interface ContentContainer {\n    readonly viewContainer: ViewContainerRef;\n    readonly containerName: string;\n  }\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentContainerDirective.html":{"url":"directives/ContentContainerDirective.html","title":"directive - ContentContainerDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContentContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive that can be attached to create a container \nwhere content with an attached ContentDirective\ncan be displayed.\nThe string set to the directive name is used to refer to\nthis container by the ContentConductor.\n\n            \n\n            \n                Implements\n            \n            \n                        ContentContainer\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-content-container]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-content-container\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vcRef: ViewContainerRef, ccService: ContentConductorService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vcRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ccService\n                                                  \n                                                        \n                                                                    ContentConductorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-content-container\n                    \n                    \n                        The string used to refer to this container.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewContainer\n                    \n                \n\n                \n                    \n                        getviewContainer()\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:29\n                                \n                            \n                    \n                        \n                                The ViewContainerRef of this directive.\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, Input } from '@angular/core';\nimport { ContentConductorService } from '../content-conductor.service';\nimport { ContentContainer } from './content-container.model';\n\n/**\n * A directive that can be attached to create a container \n * where content with an attached {@link ContentDirective}\n * can be displayed.\n * \n * The string set to the directive name is used to refer to\n * this container by the {@link ContentConductor}.\n * \n * @example\n * \n */\n@Directive({\n  selector: '[dvk-content-container]'\n})\nexport class ContentContainerDirective implements ContentContainer {\n\n  /**\n   * The string used to refer to this container.\n   */\n  @Input('dvk-content-container') containerName: string;\n\n  /**\n   * The ViewContainerRef of this directive.\n   */\n  get viewContainer() { return this.vcRef; }\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private ccService: ContentConductorService) {}\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentDirective.html":{"url":"directives/ContentDirective.html","title":"directive - ContentDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content/content.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive that must be used as a structural \ndirective so that the TemplateRef is injected.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            Some Content To Display In A Container\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-content]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content/content.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * A directive that must be used as a structural \n * directive so that the TemplateRef is injected.\n * \n * @example\n * Some Content To Display In A Container\n */\n@Directive({\n  selector: '[dvk-content]'\n})\nexport class ContentDirective {\n  constructor(private templateRef: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultContentConductorService.html":{"url":"classes/DefaultContentConductorService.html","title":"class - DefaultContentConductorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultContentConductorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of a ContentConductor.\nThis version can be overriden by providing a different class\nfor the ContentConductorConstructorToken token.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ContentConductor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                containers\n                            \n                            \n                                    Private\n                                containersMap\n                            \n                            \n                                    Private\n                                containersSub\n                            \n                            \n                                    Private\n                                contentsSub\n                            \n                            \n                                    Private\n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachView\n                            \n                            \n                                attachViews\n                            \n                            \n                                destroy\n                            \n                            \n                                detachView\n                            \n                            \n                                detachViews\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                mapContainers\n                            \n                            \n                                moveView\n                            \n                            \n                                moveViews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(containersQueryList: QueryList, contentsQueryList: QueryList>)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containersQueryList\n                                                  \n                                                        \n                                                                    QueryList\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentsQueryList\n                                                  \n                                                        \n                                                                    QueryList>\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containers:     T[]\n\n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containersMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containersMap:     ContainersMap\n\n                    \n                \n                    \n                        \n                            Type :     ContainersMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containersSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containersSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            contentsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contentsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templates:     TemplateRef[]\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachView\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachView(container: string, view: ViewRef, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        view\n                                                        \n                                                                    ViewRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachViews(container: string, views: ViewRef[], toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        views\n                                                        \n                                                                    ViewRef[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachView\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachView(container: string, index?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachViews(container: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(initialContainer: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapContainers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapContainers(containers: T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:25\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containers\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveView\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveView(previousContainer: string, nextContainer: string, fromIndex: number, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveViews(previousContainer: string, nextContainer: string, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryList, TemplateRef, ViewRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ContentConductor } from '../content-conductor.model';\nimport { ContentContainer } from '../content-container/content-container.model';\nimport { ContainersMap } from '../containers-map/containers-map.model';\n\n/**\n * The default implementation of a {@link ContentConductor}.\n * This version can be overriden by providing a different class\n * for the {@link ContentConductorConstructorToken} token.\n */\nexport class DefaultContentConductorService implements ContentConductor {\n\n  constructor(\n    private containersQueryList: QueryList,\n    private contentsQueryList : QueryList>\n  ) {}\n    \n  private containers: T[];\n  private templates: TemplateRef[];\n  private containersMap: ContainersMap = {};\n  private containersSub: Subscription;\n  private contentsSub: Subscription;\n\n  private mapContainers(\n    containers: T[]) {\n      return containers.reduce((map,container)=>{\n        map[container.containerName] = container.viewContainer;\n        return map;\n      },{});\n  }\n  \n  init(initialContainer: string) {\n    this.containers = this.containersQueryList.toArray();\n    this.templates = this.contentsQueryList.toArray();\n\n    this.containersMap = this.mapContainers(this.containers);\n    this.containersSub = this.containersQueryList\n      .changes\n      .subscribe((c: T[])=>{\n        this.containers = c;\n        this.mapContainers(this.containers);\n      });\n\n    this.contentsSub = this.contentsQueryList\n      .changes\n      .subscribe((t: TemplateRef[])=>{\n        this.templates = t;\n      });\n\n    if(initialContainer && this.templates) {\n      this.templates.map(template=>\n        this.containersMap[initialContainer]\n          .createEmbeddedView(template));\n    }\n  }\n\n  destroy() {\n    if(this.containersSub && !this.containersSub.closed) { \n      this.containersSub.unsubscribe(); \n    }\n\n    if(this.contentsSub && !this.contentsSub.closed) {\n      this.contentsSub.unsubscribe();\n    }\n\n    this.containersQueryList = null;\n    this.contentsQueryList = null;\n    this.containers = null;\n    this.templates = null;\n    this.containersMap = null;\n    this.containersSub = null;\n    this.contentsSub = null;\n  }\n\n  moveView( \n    previousContainer: string,\n    nextContainer:string, \n    fromIndex: number,\n    toIndex?: number) {\n      fromIndex = fromIndex || this.containersMap[previousContainer].length;\n      const insertIndex = toIndex === null || toIndex === undefined? \n        this.containersMap[nextContainer].length : \n        toIndex;\n\n      const view = this.containersMap[previousContainer].detach(fromIndex);\n      this.containersMap[nextContainer].insert(view, insertIndex);\n  }\n\n  detachView(\n    container:string,\n    index?: number) {\n      return this.containersMap[container].detach(index);\n  }\n\n  moveViews(previousContainer: string, nextContainer: string, toIndex?: number) {\n    const length = this.containersMap[previousContainer].length;\n    const viewsCache: ViewRef[] = [];\n\n    for(let i=0; i{\n      this.containersMap[nextContainer].insert(\n        view,\n        insertIndex);\n      insertIndex++\n    });\n  }\n\n  detachViews(container: string) {\n    const detachedViews = [];\n    const length = this.containersMap[container].length;\n\n    for(let x = 0; x {\n      this.containersMap[container].insert(view, insertIndex);\n      insertIndex++;\n    });\n  }\n\n  attachView(container: string, view: ViewRef, toIndex?: number) {\n    const insertIndex = toIndex === null || toIndex === undefined? \n      this.containersMap[container].length : \n      toIndex;\n\n    this.containersMap[container].insert(view, insertIndex);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultDynamicAnimationsHandlerService.html":{"url":"classes/DefaultDynamicAnimationsHandlerService.html","title":"class - DefaultDynamicAnimationsHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultDynamicAnimationsHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of DynamicAnimationsHandler\nthat provides the DynamicAnimationsDirective with \nanimations capabllities.  \n\n            \n\n\n            \n                Implements\n            \n            \n                        DynamicAnimationsHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animationsStateMachine\n                            \n                            \n                                    Private\n                                cssMapper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCSSMapper\n                            \n                            \n                                    Private\n                                createStateMachine\n                            \n                            \n                                destroy\n                            \n                            \n                                nextState\n                            \n                            \n                                setAnimations\n                            \n                            \n                                setCSSMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: any, state: string, transitions: AnimationTransitionsMap, styles: AnimationStylesMap, cssMap: StateCSSMap, cssMapperService: StateCssMapperService, animationStatesBuilder: AnimationStatesService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        transitions\n                                                  \n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMap\n                                                  \n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMapperService\n                                                  \n                                                        \n                                                                    StateCssMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStatesBuilder\n                                                  \n                                                        \n                                                                    AnimationStatesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            animationsStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animationsStateMachine:     AnimationStateMachine\n\n                    \n                \n                    \n                        \n                            Type :     AnimationStateMachine\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cssMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cssMapper:     StateCSSMapper\n\n                    \n                \n                    \n                        \n                            Type :     StateCSSMapper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createCSSMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createCSSMapper(map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createStateMachine(transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextState\n                            \n                            \n                        \n                    \n                \n                \n                    \nnextState(toState: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toState\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setAnimations\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetAnimations(transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCSSMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCSSMap(map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicAnimationsHandler } from '../dynamic-animations-handler/dynamic-animations-handler.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\nimport { StateCSSMapper } from '../state-css-mapper/state-css-mapper.model';\nimport { AnimationStateMachine } from '../animation-state-machine/animation-state-machine.model';\nimport { AnimationStatesService } from '../animation-states/animation-states.service';\nimport { StateCssMapperService } from '../state-css-mapper/state-css-mapper.service';\n\n/**\n * The default implementation of {@link DynamicAnimationsHandler}\n * that provides the {@link DynamicAnimationsDirective} with \n * animations capabllities.  \n */\nexport class DefaultDynamicAnimationsHandlerService implements DynamicAnimationsHandler {\n\n  private animationsStateMachine: AnimationStateMachine;\n  private cssMapper: StateCSSMapper;\n\n  constructor(\n    private element: any,\n    private state: string,\n    private transitions: AnimationTransitionsMap,\n    private styles: AnimationStylesMap, \n    private cssMap: StateCSSMap,\n    private cssMapperService: StateCssMapperService,\n    private animationStatesBuilder: AnimationStatesService\n  ) {\n    this.createCSSMapper(cssMap);\n    this.createStateMachine(this.transitions, this.styles);\n  }\n  \n  setCSSMap(map: StateCSSMap) {\n    this.createCSSMapper(map);\n  }\n\n  nextState(toState:string) {\n    if(this.state !== toState) {\n      this.state = toState;\n\n      if(this.animationsStateMachine) {\n        this.animationsStateMachine.next(\n          this.state, \n          this.cssMapper);\n      }\n    }\n  }\n\n  setAnimations(transitions: AnimationTransitionsMap, styles: AnimationStylesMap) {\n    this.createStateMachine(transitions, styles);\n  }\n\n  destroy() {\n    this.animationsStateMachine.destroy();\n    this.cssMapper.destroy();\n    this.state = null;\n    this.cssMap = null;\n    this.transitions = null;\n  }\n\n  private createStateMachine(\n    transitions: AnimationTransitionsMap, \n    styles: AnimationStylesMap) {\n    if(this.animationsStateMachine) {\n      this.animationsStateMachine.destroy();\n    }\n\n    if(this.transitions !== transitions || !this.animationsStateMachine) {\n      this.transitions = transitions;\n\n      this.animationsStateMachine = \n        this.animationStatesBuilder\n          .createAnimationStateMachine(\n            this.element,\n            this.transitions,\n            styles);\n\n      this.animationsStateMachine.init(\n        this.state,\n        this.cssMapper);\n    }\n  }\n\n  private createCSSMapper(map: StateCSSMap = {}) {\n    if(this.cssMap !== map || !this.cssMapper) {\n      this.cssMap = map;\n\n      if(this.cssMapper) {\n        this.cssMapper.removeAll();\n        this.cssMapper.destroy();\n      }\n\n      this.cssMapper = this.cssMapperService\n        .createStateCSSMapper(this.element,this.cssMap);\n\n      this.cssMapper.add(this.state);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultDynamicComponentSerializer.html":{"url":"classes/DefaultDynamicComponentSerializer.html","title":"class - DefaultDynamicComponentSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultDynamicComponentSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of DynamicComponentSerializer that\nprovides the serialization methods for the specified \nDynamicComponentSerializerMap. \n\n            \n\n\n            \n                Implements\n            \n            \n                        DynamicComponentSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializerMap: DynamicComponentSerializerMap)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializerMap\n                                                  \n                                                        \n                                                                    DynamicComponentSerializerMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(componentName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:14\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName(componentConstructor: ComponentConstructor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicComponentSerializerMap } from '../dynamic-component-serializer-map/dynamic-component-serializer-map.model';\nimport { DynamicComponentSerializer } from '../dynamic-component-serializer/dynamic-component-serializer.model';\nimport { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * The default implementation of {@link DynamicComponentSerializer} that\n * provides the serialization methods for the specified \n * {@link DynamicComponentSerializerMap}. \n */\nexport class DefaultDynamicComponentSerializer implements DynamicComponentSerializer {\n\n    constructor(private serializerMap: DynamicComponentSerializerMap) {}\n\n    getComponent(componentName: string) {\n        return this.serializerMap\n            .deserializeMap.get(componentName);\n    }\n\n    getName(componentConstructor: ComponentConstructor) {\n        return this.serializerMap\n            .serializeMap.get(componentConstructor);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicAnimationsDirective.html":{"url":"directives/DynamicAnimationsDirective.html","title":"directive - DynamicAnimationsDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicAnimationsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is the main interface to dynamic animations.\nIt should be attached to the element that is to be animated.\nDirections\nIn a component define a string member to represent the state\nof the Animations.  This is analogous to a trigger in normal\nAngular animations.\nThen define the animations as an array of state and transition\nfunction calls from the Angular animations module.\nOptionally specify a map of state names to css class names that\nwill be added and removed from the element as the animations \nstart and finish.\nThen pass those values into this directives state and animations\nInputs.\nIf a :leave animation, or *=>void, is speciied you must also both\nadd the @dvkLeave directive to the element and add dvkLeave to \nthe component as a static animation.  This step is only necessary\nfor a :leave animation. Otherwise it can be skipped.\nThe animations can then be played by changing the string bound to\nthe state Input.\nExample\n`ts\n\\@Component({\n              template: `\n                  \n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-da]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animationsHandler\n                            \n                            \n                                    Private\n                                stateMode\n                            \n                            \n                                    Private\n                                states\n                            \n                            \n                                    Private\n                                strState\n                            \n                            \n                                    Private\n                                transitions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isState\n                            \n                            \n                                    Private\n                                isTransition\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animations\n                            \n                            \n                                cssMap\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, daService: DynamicAnimationsService, tranService: NgTransitionService, statesService: NgStateService, dvkLeave: LeaveDirective)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:142\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        daService\n                                                  \n                                                        \n                                                                    DynamicAnimationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        tranService\n                                                  \n                                                        \n                                                                    NgTransitionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        statesService\n                                                  \n                                                        \n                                                                    NgStateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dvkLeave\n                                                  \n                                                        \n                                                                    LeaveDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        animations\n                    \n                    \n                        The description of the animations to play as an array \nof state and transition Angular animation functions.\n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:117\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cssMap\n                    \n                    \n                        The map of state name to css class names to apply\nas the state changes.\n\n                            \n                            Type:    StateCSSMap\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:142\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                    \n                        Changing the value of state will cause a transition \nand play an animation if one is defined for that state\nchange.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:102\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isState(metaData: AnimationMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaData\n                                                        \n                                                                    AnimationMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationStateMetadata\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isTransition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isTransition(metaData: AnimationMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaData\n                                                        \n                                                                    AnimationMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationTransitionMetadata\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:169\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:156\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            animationsHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animationsHandler:     DynamicAnimationsHandler\n\n                    \n                \n                    \n                        \n                            Type :     DynamicAnimationsHandler\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stateMode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stateMode:     \"string\" | \"number\"\n\n                    \n                \n                    \n                        \n                            Type :     \"string\" | \"number\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'string'\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            states\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        states:     AnimationStateMetadata[]\n\n                    \n                \n                    \n                        \n                            Type :     AnimationStateMetadata[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            strState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        strState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transitions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transitions:     AnimationTransitionMetadata[]\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTransitionMetadata[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:110\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n\n                \n                    \n                        setstate(state: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:102\n                                \n                            \n                    \n                        \n                                Changing the value of state will cause a transition \nand play an animation if one is defined for that state\nchange.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            state\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        animations\n                    \n                \n\n\n                \n                    \n                        setanimations(animations: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:117\n                                \n                            \n                    \n                        \n                                The description of the animations to play as an array \nof state and transition Angular animation functions.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            animations\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, OnInit, OnDestroy, ElementRef, Optional } from '@angular/core';\nimport { AnimationTransitionMetadata, AnimationStateMetadata, AnimationMetadata } from '@angular/animations';\nimport { StateCSSMap } from './state-css-map/state-css-map.model';\nimport { DynamicAnimationsService } from './dynamic-animations.service';\nimport { NgTransitionService } from './ng-transition/ng-transition.service';\nimport { DynamicAnimationsHandler } from './dynamic-animations-handler/dynamic-animations-handler.model';\nimport { NgTransitionStates } from './ng-transition/ng-transition.states';\nimport { LeaveDirective } from './leave/leave.directive';\nimport { NgStateService } from './ng-state/ng-state.service';\n\n/**\n * This directive is the main interface to dynamic animations.\n * It should be attached to the element that is to be animated.\n * \n * ## Directions\n *\n * In a component define a string member to represent the state\n * of the Animations.  This is analogous to a trigger in normal\n * Angular animations.\n * \n * Then define the animations as an array of state and transition\n * function calls from the Angular animations module.\n * \n * Optionally specify a map of state names to css class names that\n * will be added and removed from the element as the animations \n * start and finish.\n * \n * Then pass those values into this directives state and animations\n * Inputs.\n *\n * If a :leave animation, or *=>void, is speciied you must also both\n * add the @dvkLeave directive to the element and add dvkLeave to \n * the component as a static animation.  This step is only necessary\n * for a :leave animation. Otherwise it can be skipped.\n * \n * The animations can then be played by changing the string bound to\n * the state Input.\n * \n * ## Example\n * \n * ```ts\n * \\@Component({\n *              template: `\n *                  \n *              `\n *              animations:[dvkLeave]\n * })\n * ```\n * class MyComponent {\n *              myState: string = 'closed';\n *              myAniamtions = [\n *                  state('open',style({\n *                      'transform': `scaleY(1.0)`,\n *                      'transform-origin': 'top'\n *                  })),\n *                  state('closed',style({\n *                      'transform': `scaleY(0.0)`,\n *                      'transform-origin': 'top'\n *                  })),\n *                  transition('openclosed',animate('200ms')),\n *                  transition(':enter',animate('200ms',\n *                      style({ 'background-color': 'green' })),\n *                  transition(':leave',animate('200ms',\n *                      style({ 'background-color': 'red' }))\n *              ]\n *              myCssMap = {\n *                  'open': 'is-open',\n *                  'closed': 'is-closed'\n *              }\n * \n *              toggleState() {\n *                  if(this.myState === 'closed') { \n *                      this.myState = 'open'; \n *                   }\n *                   else { \n *                       this.myState = 'closed'; \n *                   }\n *              }\n * }\n * ```\n * \n * ../../docs/examples/index.html#/DynamicAnimations\n */\n@Directive({\n  selector: '[dvk-da]'\n})\nexport class DynamicAnimationsDirective implements OnInit, OnDestroy {\n  private stateMode: 'string' | 'number' = 'string';\n  private animationsHandler: DynamicAnimationsHandler;\n  private strState: string;\n\n  /**\n   * Changing the value of state will cause a transition \n   * and play an animation if one is defined for that state\n   * change.\n   */\n  @Input() set state(state:string) { // | number)\n    this.strState = state;\n\n    if(this.animationsHandler) {\n      this.animationsHandler.nextState(this.strState);\n    }\n  }\n\n  private transitions: AnimationTransitionMetadata[];\n  private states: AnimationStateMetadata[];\n\n  /**\n   * The description of the animations to play as an array \n   * of state and transition Angular animation functions.\n   */\n  @Input() set animations(animations: (AnimationTransitionMetadata | AnimationStateMetadata)[]) {\n    this.transitions = [];\n    this.states = [];\n\n    animations.forEach(animation=>{\n      if(this.isTransition(animation)) {\n        this.transitions.push(animation);\n      } else if (this.isState) {\n        this.states.push(animation);\n      }\n    });\n  }\n\n  private isTransition(metaData: AnimationMetadata): metaData is AnimationTransitionMetadata {\n    return !!(metaData as AnimationTransitionMetadata).animation;\n  }\n\n  private isState(metaData: AnimationMetadata): metaData is AnimationStateMetadata {\n    return !!(metaData as AnimationStateMetadata).styles;\n  }\n\n  /**\n   * The map of state name to css class names to apply\n   * as the state changes.\n   */\n  @Input() cssMap: StateCSSMap;\n\n  constructor(\n    private element: ElementRef,\n    private daService: DynamicAnimationsService,\n    private tranService: NgTransitionService,\n    private statesService: NgStateService,\n    @Optional() \n    private dvkLeave: LeaveDirective) {\n      if (this.dvkLeave) {\n        this.dvkLeave.setLeaveTiming(\"500ms\");\n      }\n     }\n\n  ngOnInit() {\n\n    this.animationsHandler = this.daService.createAnimationsHandler(\n      this.element.nativeElement,\n      NgTransitionStates.Void,\n      this.tranService.buildAnimationTransitions(this.transitions),\n      this.statesService.parseStates(this.states),\n      this.cssMap);\n      \n    // enter\n    this.animationsHandler.nextState(this.strState);\n  }\n\n  ngOnDestroy() {\n\n    // leave\n    this.animationsHandler.nextState(NgTransitionStates.Void)\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicAnimationsHandler.html":{"url":"interfaces/DynamicAnimationsHandler.html","title":"interface - DynamicAnimationsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicAnimationsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.model.ts\n        \n\n            \n                Description\n            \n            \n                Describe the interface for providing a component \nor directive with run time specified animations \nbased on a series of string transitions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destroy\n                                \n                                \n                                        nextState\n                                \n                                \n                                        setAnimations\n                                \n                                \n                                        setCSSMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references for garbage collection.  Should \nusually be called in ngOnDestroy.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextState\n                                    \n                                \n                                \n                                    \n                                        nextState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transition to the next state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setAnimations\n                                    \n                                \n                                \n                                    \n                                        setAnimations:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set the animations and states to use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCSSMap\n                                    \n                                \n                                \n                                    \n                                        setCSSMap:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set the map of css classes to apply at specific states.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * Describe the interface for providing a component \n * or directive with run time specified animations \n * based on a series of string transitions.\n * \n */\nexport interface DynamicAnimationsHandler {\n\n    /**\n     * Set the map of css classes to apply at specific states.\n     */\n    setCSSMap: (map: StateCSSMap) =>void;\n\n    /**\n     * Transition to the next state.\n     */\n    nextState: (toState:string) => void;\n\n    /**\n     * Set the animations and states to use.\n     */\n    setAnimations: (transitions: AnimationTransitionsMap, styles: AnimationStylesMap) => void;\n\n    /**\n     * Release the references for garbage collection.  Should \n     * usually be called in ngOnDestroy.\n     */\n    destroy: () => void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicAnimationsHandlerConstructor.html":{"url":"interfaces/DynamicAnimationsHandlerConstructor.html","title":"interface - DynamicAnimationsHandlerConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicAnimationsHandlerConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.constructor.ts\n        \n\n            \n                Description\n            \n            \n                The shape of a constructor for an object that can act as the Animations Handler.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { DynamicAnimationsHandler } from './dynamic-animations-handler.model';\nimport { AnimationStatesService } from '../animation-states/animation-states.service';\nimport { StateCssMapperService } from '../state-css-mapper/state-css-mapper.service';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * The shape of a constructor for an object that can act as the Animations Handler.\n */\nexport interface DynamicAnimationsHandlerConstructor {\n    new( \n        element: any,\n        initialState: string,\n        transitions: AnimationTransitionsMap,\n        styles: AnimationStylesMap,\n        cssMap: StateCSSMap,\n        cssMapperService: StateCssMapperService,\n        animationStatesBuilder: AnimationStatesService):DynamicAnimationsHandler;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicAnimationsModule.html":{"url":"modules/DynamicAnimationsModule.html","title":"module - DynamicAnimationsModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicAnimationsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicAnimationsModule\n\n\n\ncluster_DynamicAnimationsModule_declarations\n\n\n\ncluster_DynamicAnimationsModule_exports\n\n\n\ncluster_DynamicAnimationsModule_providers\n\n\n\n\nDynamicAnimationsDirective\n\nDynamicAnimationsDirective\n\n\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsDirective->DynamicAnimationsModule\n\n\n\n\n\nLeaveDirective\n\nLeaveDirective\n\nDynamicAnimationsModule -->\n\nLeaveDirective->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective  -->\n\nDynamicAnimationsModule->DynamicAnimationsDirective \n\n\n\n\n\nLeaveDirective \n\nLeaveDirective \n\nLeaveDirective  -->\n\nDynamicAnimationsModule->LeaveDirective \n\n\n\n\n\nAnimationStatesService\n\nAnimationStatesService\n\nDynamicAnimationsModule -->\n\nAnimationStatesService->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsService\n\nDynamicAnimationsService\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsService->DynamicAnimationsModule\n\n\n\n\n\nNgStateService\n\nNgStateService\n\nDynamicAnimationsModule -->\n\nNgStateService->DynamicAnimationsModule\n\n\n\n\n\nNgTransitionService\n\nNgTransitionService\n\nDynamicAnimationsModule -->\n\nNgTransitionService->DynamicAnimationsModule\n\n\n\n\n\nStateCssMapperService\n\nStateCssMapperService\n\nDynamicAnimationsModule -->\n\nStateCssMapperService->DynamicAnimationsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Dynamic Animations Module provides support for allowing Angular\nAnimations to be passed in at runtime dynamically instead of \ndescribed statically in the Component's metadata.\nThis functionality is handled through the exported \nDynamicAnimationsDirective.\nThe forRoot method must be called to provide the DynamicAnimationsHandler\nand the AnimationStateMachine that are used by the directive.\nThe implementations are handled by default by the DefaultDynamicAnimationsHandlerService\nand the DefaultAnimationsStateMachine respectively but can be \noverriden with custom implementations if desired.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicAnimationsDirective\n                            \n                            \n                                LeaveDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AnimationStatesService\n                            \n                            \n                                     DynamicAnimationsService\n                            \n                            \n                                     NgStateService\n                            \n                            \n                                     NgTransitionService\n                            \n                            \n                                     StateCssMapperService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicAnimationsDirective\n                            \n                            \n                                    LeaveDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DynamicAnimationsService } from './dynamic-animations.service';\nimport { StateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { AnimationStatesService } from './animation-states/animation-states.service';\nimport { DynamicAnimationsHandlerConstructor } from './dynamic-animations-handler/dynamic-animations-handler.constructor';\nimport { DefaultDynamicAnimationsHandlerService } from './default-dynamic-animations-handler/default-dynamic-animations-handler.service';\nimport { DynamicAnimationsHandlerConstructorToken } from './dynamic-animations-handler/dynamic-animations-handler.token';\nimport { AnimationStateMachineConstructorToken } from './animation-state-machine/animation-state-machine.token';\nimport { DefaultAnimationsStateMachine } from './default-animations-state-machine/default-animations-state-machine.service';\nimport { AnimationStateMachineConstructor } from './animation-state-machine/animation-state-machine.constructor';\nimport { DynamicAnimationsDirective } from './dynamic-animations.directive';\nimport { LeaveDirective } from './leave/leave.directive';\nimport { NgTransitionService } from './ng-transition/ng-transition.service';\nimport { NgStateService } from './ng-state/ng-state.service';\n\n/**\n * The Dynamic Animations Module provides support for allowing Angular\n * Animations to be passed in at runtime dynamically instead of \n * described statically in the Component's metadata.\n * \n * This functionality is handled through the exported \n * {@link DynamicAnimationsDirective}.\n * \n * The forRoot method must be called to provide the {@link DynamicAnimationsHandler}\n * and the {@link AnimationStateMachine} that are used by the directive.\n * \n * The implementations are handled by default by the {@link DefaultDynamicAnimationsHandlerService}\n * and the {@link DefaultAnimationsStateMachine} respectively but can be \n * overriden with custom implementations if desired.\n */\n@NgModule({\n  providers: [\n    DynamicAnimationsService,\n    AnimationStatesService, \n    StateCssMapperService,\n    NgTransitionService,\n    NgStateService\n  ],\n  declarations: [DynamicAnimationsDirective, LeaveDirective],\n  exports: [DynamicAnimationsDirective, LeaveDirective]\n})\nexport class DynamicAnimationsModule {\n  static forRoot(\n    animationsHandlerConstructor: DynamicAnimationsHandlerConstructor = DefaultDynamicAnimationsHandlerService,\n    animationsStateMachineConstructor: AnimationStateMachineConstructor = DefaultAnimationsStateMachine \n  ): ModuleWithProviders {\n    return {\n      ngModule: DynamicAnimationsModule,\n      providers: [\n        { \n          provide: DynamicAnimationsHandlerConstructorToken, \n          useValue: animationsHandlerConstructor \n        },\n        {\n          provide: AnimationStateMachineConstructorToken,\n          useValue: animationsStateMachineConstructor\n        }\n      ]\n    };\n  }  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicAnimationsService.html":{"url":"injectables/DynamicAnimationsService.html","title":"injectable - DynamicAnimationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicAnimationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is used to create a DynamicAnimationsHandler \nwith the DynamicAnimationsService method.\nThe DynamicAnimationsHandler \ncan be used to handle animations based on state transitions\nfor the specified element.\nThe DynamicAnimationsHandler can be wired up to a \nparticular component or directive to automatically handle \nthe animations for the specified element.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimationsHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animationsHandlerConstructor: DynamicAnimationsHandlerConstructor, cssMapperService: StateCssMapperService, animationStatesBuilder: AnimationStatesService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animationsHandlerConstructor\n                                                  \n                                                        \n                                                                    DynamicAnimationsHandlerConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMapperService\n                                                  \n                                                        \n                                                                    StateCssMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStatesBuilder\n                                                  \n                                                        \n                                                                    AnimationStatesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createAnimationsHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateAnimationsHandler(element: any, initialState: string, transitions: AnimationTransitionsMap, styles: AnimationStylesMap, cssMap: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Create a DynamicAnimationsHandler for \nthe given element.\nSee DynamicAnimationsService for example\nusage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to attach the animations\nhandler to. \n\n                                                        \n                                                \n                                                \n                                                        initialState\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The initial state of the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationTransitionsMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationStylesMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        cssMap\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The StateCSSMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { StateCSSMap } from './state-css-map/state-css-map.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from './animation-transitions/animation-transitions.model';\nimport { Injectable, Inject } from '@angular/core';\nimport { DynamicAnimationsHandlerConstructor } from './dynamic-animations-handler/dynamic-animations-handler.constructor';\nimport { DynamicAnimationsHandlerConstructorToken } from './dynamic-animations-handler/dynamic-animations-handler.token';\nimport { StateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { AnimationStatesService } from './animation-states/animation-states.service';\n\n/**\n * This import is required for ts to resolve the return of \n * the createAnimationsHandler function.  Without it compilation\n * will fail.\n */\nimport { DynamicAnimationsHandler } from './dynamic-animations-handler/dynamic-animations-handler.model';\n\n/**\n * This service is used to create a {@link DynamicAnimationsHandler} \n * with the {@link DynamicAnimationsService#createAnimationsHandler} method.\n * \n * The {@link DynamicAnimationsHandler} \n * can be used to handle animations based on state transitions\n * for the specified element.\n * \n * The {@link DynamicAnimationsHandler} can be wired up to a \n * particular component or directive to automatically handle \n * the animations for the specified element.\n *\n */\n@Injectable()\nexport class DynamicAnimationsService {\n\n  constructor(\n    @Inject(DynamicAnimationsHandlerConstructorToken) \n    private animationsHandlerConstructor: DynamicAnimationsHandlerConstructor,\n    private cssMapperService: StateCssMapperService,\n    private animationStatesBuilder: AnimationStatesService,\n  ) { }\n\n  /**\n   * Create a {@link DynamicAnimationsHandler} for \n   * the given element.\n   * \n   * See {@link DynamicAnimationsService} for example\n   * usage.\n   * \n   * @param element The element to attach the animations\n   * handler to. \n   * \n   * @param initialState The initial state of the AnimationStateMachine\n   * @param transitions The AnimationTransitionsMap for the AnimationStateMachine\n   * @param styles The AnimationStylesMap for the AnimationStateMachine\n   * @param cssMap The StateCSSMap for the AnimationStateMachine\n   * \n   */\n  createAnimationsHandler(\n    element: any, \n    initialState: string, \n    transitions: AnimationTransitionsMap, \n    styles: AnimationStylesMap,\n    cssMap: StateCSSMap = {}) {\n\n      return new this.animationsHandlerConstructor(\n        element,\n        initialState,\n        transitions,\n        styles,\n        cssMap,\n        this.cssMapperService,\n        this.animationStatesBuilder);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentData.html":{"url":"interfaces/DynamicComponentData.html","title":"interface - DynamicComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-data/dynamic-component-data.model.ts\n        \n\n            \n                Description\n            \n            \n                Represent the data necessary for a dynamic \ncomponent that is suitable for serialization.\nThis part of the model is separate so that it\ncould be put inside a store or some other \nuse case where serialization matters.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        initialValues\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initialValues\n                                    \n                                \n                                \n                                    \n                                        initialValues:     InitialValues\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InitialValues\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InitialValues } from \"../initial-values/initial-values.model\";\n\n/**\n * Represent the data necessary for a dynamic \n * component that is suitable for serialization.\n * \n * This part of the model is separate so that it\n * could be put inside a store or some other \n * use case where serialization matters.\n */\nexport interface DynamicComponentData {\n    name: string;\n    initialValues?: InitialValues;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicComponentDirective.html":{"url":"directives/DynamicComponentDirective.html","title":"directive - DynamicComponentDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicComponentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts\n        \n\n            \n                Description\n            \n            \n                The Dynamic Component Directive is the interface to using\ndvk dynamic components.\nThe directive lifecycle will track any streams specified by\nthe model and handle change detection in the same way the \nasync pipe does.\nDirections\nProvide a DynamicComponentSerializerService \nfor the directive to use.\nconstructor(private dsService: DynamicComponentSerializerService) { \n     this.serializer = this.dsService.createSerializer({\n         'textComponent':TextComponent\n     });\n}And define a DynamicComponentModel for the DynamicComponentDirective\nto initialize with:\ntext$ = new Subject();\n\nonClick = (e: MouseEvent) => {\n     console.log('Dynamic component was clicked');\n}\n\nmodel: DynamicComponentModel = {\n     name: 'textComponent',\n     initialValues:{ \n         text: 'Initial Text',\n     },\n     outputCallbacks: {\n         onClicked: this.onClick\n     },\n     inputs$: {\n         text: this.text$.asObservable()\n     }\n};And in the template for the Component attach the dynamic \ncomponent directive to the desired element.\n  \n  Note\nThe DynamicComponentSerializer was intentionally made\nto be passed in rather than created internally so that the same\nserialzer could be reused for multiple instances of the \nDynamicComponentDirective.  This allows a developer to create \na single serializer at one point and feed it into all desired \ninstances of DynamicComponentDirectives.\n../../docs/examples/index.html#/DynamicComponents\n\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-dc]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                compRef\n                            \n                            \n                                    Private\n                                inputSubscriptions\n                            \n                            \n                                    Private\n                                outputSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                attachInputStreams\n                            \n                            \n                                    Protected\n                                attachOutputCallbacks\n                            \n                            \n                                    Protected\n                                closeAllSubscriptions\n                            \n                            \n                                    Protected\n                                createComponent\n                            \n                            \n                                    Protected\n                                createInjector\n                            \n                            \n                                    Protected\n                                destroyComp\n                            \n                            \n                                    Protected\n                                initializeComponent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                setInitialValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-dc\n                            \n                            \n                                serializer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vcRef: ViewContainerRef, resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:109\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vcRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-dc\n                    \n                    \n                        The model for this dynamic component to instantiate \nwith.\n\n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:107\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serializer\n                    \n                    \n                        The serialzer this instance of the directive should use\nto resolve Components.\n\n                            \n                            Type:    DynamicComponentSerializer\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:100\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            attachInputStreams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachInputStreams(streams: InputStreams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:186\n                            \n                        \n\n\n                \n                    \n                            Attach {@link Observable} input streams to the \nspecified property of the component.\nThe streams will attach a {@link distinctUntilChanged} operator\nto the {@link Observable} and mark the component for change detection\nwhen new values are passed through the stream. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        streams\n                                                        \n                                                                    InputStreams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of property names to {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            attachOutputCallbacks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachOutputCallbacks(callbacks: OutputCallbacks)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:209\n                            \n                        \n\n\n                \n                    \n                            Attach the {@link EventEmitter}s inside the component to\nthe specified callback.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callbacks\n                                                        \n                                                                    OutputCallbacks\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            closeAllSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeAllSubscriptions(subscriptions: Subscription[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:240\n                            \n                        \n\n\n                \n                    \n                            Close all the subscriptions that are still open.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        subscriptions\n                                                        \n                                                                    Subscription[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The array of subscriptions to \npotentially close.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createComponent(constructor: ComponentConstructor, injector: ReflectiveInjector)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Request a component from angular of the given type.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The component constructor \n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                        \n                                                                    ReflectiveInjector\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The injector to use when creating the component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createInjector(providers: Provider[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:142\n                            \n                        \n\n\n                \n                    \n                            Create an injector from the {@link BBDynamicComponentDirective2}s\n{@link ViewContainerRef}.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        providers\n                                                        \n                                                                    Provider[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                An array of providers for the injector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            destroyComp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyComp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:226\n                            \n                        \n\n\n                \n                    \n                            Clean up all subscriptions and destroy the dynamically\ninstantiated component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initializeComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initializeComponent(compModel: DynamicComponentModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        compModel\n                                                        \n                                                                    DynamicComponentModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:250\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setInitialValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setInitialValues(initValues: InitialValues)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:167\n                            \n                        \n\n\n                \n                    \n                            Set initial values into the component.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initValues\n                                                        \n                                                                    InitialValues\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of property names to values to set.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            compRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        compRef:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputSubscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            outputSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outputSubscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:94\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        componentModel\n                    \n                \n\n\n                \n                    \n                        setcomponentModel(compModel: )\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:107\n                                \n                            \n                    \n                        \n                                The model for this dynamic component to instantiate \nwith.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            compModel\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    Directive,  \n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ReflectiveInjector,\n    ViewContainerRef, \n    EventEmitter,\n    Provider,\n    OnDestroy} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { ComponentConstructor } from './component-constructor/component-constructor.model';\nimport { DynamicComponentModel } from './dynamic-component-model/dynamic-component-model.model';\nimport { DynamicComponentSerializer } from './dynamic-component-serializer/dynamic-component-serializer.model';\nimport { InitialValues } from './initial-values/initial-values.model';\nimport { InputStreams } from './input-streams/input-streams.model';\nimport { OutputCallbacks } from './output-callbacks/output-callbacks.model';\n\n/**\n * The Dynamic Component Directive is the interface to using\n * dvk dynamic components.\n * \n * The directive lifecycle will track any streams specified by\n * the model and handle change detection in the same way the \n * async pipe does.\n *  \n * ### **Directions**\n * \n * Provide a {@link DynamicComponentSerializerService} \n * for the directive to use.\n * \n * ```ts\n * constructor(private dsService: DynamicComponentSerializerService) { \n *     this.serializer = this.dsService.createSerializer({\n *         'textComponent':TextComponent\n *     });\n * }\n * ```\n * \n * And define a {@link DynamicComponentModel} for the DynamicComponentDirective\n * to initialize with:\n * \n * ```ts\n * text$ = new Subject();\n * \n * onClick = (e: MouseEvent) => {\n *     console.log('Dynamic component was clicked');\n * }\n * \n * model: DynamicComponentModel = {\n *     name: 'textComponent',\n *     initialValues:{ \n *         text: 'Initial Text',\n *     },\n *     outputCallbacks: {\n *         onClicked: this.onClick\n *     },\n *     inputs$: {\n *         text: this.text$.asObservable()\n *     }\n * };\n * ```\n * \n * And in the template for the Component attach the dynamic \n * component directive to the desired element.\n * \n * ```html\n *  \n *  \n * ``` \n * \n * ###### **Note**\n * \n * The {@link DynamicComponentSerializer} was intentionally made\n * to be passed in rather than created internally so that the same\n * serialzer could be reused for multiple instances of the \n * DynamicComponentDirective.  This allows a developer to create \n * a single serializer at one point and feed it into all desired \n * instances of DynamicComponentDirectives.\n * \n * ../../docs/examples/index.html#/DynamicComponents\n *\n */\n@Directive({\n  selector: '[dvk-dc]',\n  exportAs:'dynamicComp2',\n})\nexport class DynamicComponentDirective implements OnDestroy {\n    protected compRef: ComponentRef;\n    private inputSubscriptions: Subscription[] = [];\n    private outputSubscriptions: Subscription[] = [];\n\n    /**\n     * The serialzer this instance of the directive should use\n     * to resolve Components.\n     */\n    @Input() serializer: DynamicComponentSerializer;\n\n    /**\n     * The model for this dynamic component to instantiate \n     * with.\n     */\n    @Input('dvk-dc') \n    set componentModel(compModel: DynamicComponentModel) {\n      this.initializeComponent(compModel);\n    }\n\n    constructor(protected vcRef: ViewContainerRef,\n                protected resolver: ComponentFactoryResolver) {\n    }\n\n    protected initializeComponent(compModel: DynamicComponentModel) {\n        const componentConstructor = this.serializer.getComponent(compModel.name);\n\n        if (!componentConstructor) {\n            console.error(`${compModel.name} was not found for deserialization.`)\n          return;\n        }\n\n        this.destroyComp();\n\n        this.compRef = this.createComponent(\n            componentConstructor, \n            this.createInjector(compModel.providers));\n\n        this.setInitialValues(compModel.initialValues);\n        this.attachInputStreams(compModel.inputs$);\n        this.attachOutputCallbacks(compModel.outputCallbacks);\n\n        this.vcRef.insert(this.compRef.hostView);\n        this.compRef.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Create an injector from the {@link BBDynamicComponentDirective2}s\n     * {@link ViewContainerRef}.\n     * @param providers An array of providers for the injector.\n     */\n    protected createInjector(providers: Provider[]) {\n        providers = providers || [];\n        return ReflectiveInjector\n            .fromResolvedProviders(\n            ReflectiveInjector.resolve(providers),\n            this.vcRef.parentInjector);\n    }\n\n    /**\n     * Request a component from angular of the given type.  \n     * @param constructor The component constructor \n     * @param injector The injector to use when creating the component.\n     */\n    protected createComponent(\n        constructor: ComponentConstructor, \n        injector: ReflectiveInjector) {\n        return this.resolver\n            .resolveComponentFactory(constructor)\n            .create(injector);\n    }\n\n    /**\n     * Set initial values into the component.\n     * @param initValues The map of property names to values to set.\n     */\n    protected setInitialValues(initValues: InitialValues) {\n        if (initValues) {\n            Object.keys(initValues).map(\n                input => {\n                    this.compRef.instance[input] = initValues[input];\n                }\n            )\n        }\n    }\n\n    /**\n     * Attach {@link Observable} input streams to the \n     * specified property of the component.\n     * \n     * The streams will attach a {@link distinctUntilChanged} operator\n     * to the {@link Observable} and mark the component for change detection\n     * when new values are passed through the stream. \n     * @param streams The map of property names to {@link Observable}s to attach.\n     */\n    protected attachInputStreams(streams: InputStreams) {\n        if(streams) {\n            this.inputSubscriptions = \n                Object.keys(streams).map(input=>{\n                    return streams[input]\n                        .pipe(\n                            distinctUntilChanged()\n                        )\n                        .subscribe(value=>{\n                            this.compRef.instance[input] = value;\n                            this.compRef.changeDetectorRef.markForCheck();\n                        })\n                });\n        }\n    }\n\n\n    /**\n     * Attach the {@link EventEmitter}s inside the component to\n     * the specified callback.\n     * @param callbacks The map of {@link EventEmitter} property names to\n     * callbacks that will be executed when the {@link EventEmitter} fires.\n     */\n    protected attachOutputCallbacks(callbacks: OutputCallbacks) {\n        if(callbacks) {\n            this.outputSubscriptions = \n                Object.keys(callbacks)\n                    .map(cb=>{\n                        return (this.compRef.instance[cb] as EventEmitter)\n                            .subscribe(event=>{\n                                callbacks[cb](event);\n                            });\n                    });\n        }\n    }\n\n    /**\n     * Clean up all subscriptions and destroy the dynamically\n     * instantiated component.\n     */\n    protected destroyComp() {\n        this.closeAllSubscriptions(this.outputSubscriptions);\n        this.closeAllSubscriptions(this.inputSubscriptions);\n\n        if (this.compRef) {\n            this.compRef.destroy();\n        }\n    }\n\n    /**\n     * Close all the subscriptions that are still open.\n     * @param subscriptions The array of subscriptions to \n     * potentially close.\n     */\n    protected closeAllSubscriptions(subscriptions: Subscription[]) {\n        if(subscriptions){\n            subscriptions.forEach(sub=>{\n                if(!sub.closed) {\n                    sub.unsubscribe();\n                }\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyComp();\n    } \n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentModel.html":{"url":"interfaces/DynamicComponentModel.html","title":"interface - DynamicComponentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-model/dynamic-component-model.model.ts\n        \n\n            \n                Description\n            \n            \n                This model combines DynamicComponentData with \nan optional set of observable streams to tie to inputs\nand callbacks to tie to EventEmitters in the \ndynamically created component.\n\n            \n\n            \n                Extends\n            \n            \n                    DynamicComponentData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inputs$\n                                \n                                \n                                            Optional\n                                        outputCallbacks\n                                \n                                \n                                            Optional\n                                        providers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inputs$\n                                    \n                                \n                                \n                                    \n                                        inputs$:     InputStreams\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputStreams\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputCallbacks\n                                    \n                                \n                                \n                                    \n                                        outputCallbacks:     OutputCallbacks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputCallbacks\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                    \n                                \n                                \n                                    \n                                        providers:     Provider[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Provider[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Provider } from \"@angular/core\";\nimport { InputStreams } from \"../input-streams/input-streams.model\";\nimport { OutputCallbacks } from \"../output-callbacks/output-callbacks.model\";\nimport { DynamicComponentData } from '../dynamic-component-data/dynamic-component-data.model';\n\n/**\n * This model combines {@link DynamicComponentData} with \n * an optional set of observable streams to tie to inputs\n * and callbacks to tie to EventEmitters in the \n * dynamically created component.\n */\nexport interface DynamicComponentModel extends DynamicComponentData {\n    inputs$?: InputStreams;\n    outputCallbacks?: OutputCallbacks;\n    providers?: Provider[],\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializer.html":{"url":"interfaces/DynamicComponentSerializer.html","title":"interface - DynamicComponentSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts\n        \n\n            \n                Description\n            \n            \n                Handle serialization  between a string name and a component constructor.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getComponent\n                                \n                                \n                                    getName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(componentName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts:7\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentConstructor\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName(componentConstructor: ComponentConstructor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * Handle serialization  between a string name and a component constructor.\n */\nexport interface DynamicComponentSerializer {\n    getComponent(componentName: string): ComponentConstructor;\n    getName(componentConstructor: ComponentConstructor):string;\n}\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializerConstructor.html":{"url":"interfaces/DynamicComponentSerializerConstructor.html","title":"interface - DynamicComponentSerializerConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializerConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.constructor.ts\n        \n\n            \n                Description\n            \n            \n                Definition for a component serializer constructor.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { DynamicComponentSerializer } from \"./dynamic-component-serializer.model\";\nimport { DynamicComponentSerializerMap } from \"../dynamic-component-serializer-map/dynamic-component-serializer-map.model\";\n\n/**\n * Definition for a component serializer constructor.\n */\nexport interface DynamicComponentSerializerConstructor {\n    new(serializerMap: DynamicComponentSerializerMap):DynamicComponentSerializer;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializerMap.html":{"url":"interfaces/DynamicComponentSerializerMap.html","title":"interface - DynamicComponentSerializerMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializerMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer-map/dynamic-component-serializer-map.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an object that can handle\nserialization between a string name and a \nComponent class instance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deserializeMap\n                                \n                                \n                                        serializeMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deserializeMap\n                                    \n                                \n                                \n                                    \n                                        deserializeMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serializeMap\n                                    \n                                \n                                \n                                    \n                                        serializeMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * The shape of an object that can handle\n * serialization between a string name and a \n * Component class instance.\n */\nexport interface DynamicComponentSerializerMap {\n    serializeMap: Map;\n    deserializeMap: Map;\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicComponentSerializerService.html":{"url":"injectables/DynamicComponentSerializerService.html","title":"injectable - DynamicComponentSerializerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentSerializerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts\n        \n\n            \n                Description\n            \n            \n                Create a serializer for dynamic components to be resolved from \nstring names.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSerializer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializerConstructor: DynamicComponentSerializerConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializerConstructor\n                                                  \n                                                        \n                                                                    DynamicComponentSerializerConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateSerializer(map: DynamicComponentsMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    DynamicComponentsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { ComponentConstructor } from '../component-constructor/component-constructor.model';\nimport { DynamicComponentsMap } from '../dynamic-component-map/dynamic-component-map.model';\nimport { DynamicComponentSerializerMap } from '../dynamic-component-serializer-map/dynamic-component-serializer-map.model';\nimport { DynamicComponentSerializerConstructorToken } from './dynamic-component-serializer.token';\nimport { DynamicComponentSerializerConstructor } from './dynamic-component-serializer.constructor';\n\n/**\n * Create a serializer for dynamic components to be resolved from \n * string names.\n */\n@Injectable()\nexport class DynamicComponentSerializerService {\n\n  constructor(\n    @Inject(DynamicComponentSerializerConstructorToken)\n    private serializerConstructor: DynamicComponentSerializerConstructor\n  ) { }\n\n  createSerializer(map: DynamicComponentsMap) {\n    const serializerMap: DynamicComponentSerializerMap = {\n      serializeMap: new Map(),\n      deserializeMap: new Map(),\n    };\n\n    Object.keys(map).forEach(name=>{\n      serializerMap.serializeMap.set(map[name], name);\n      serializerMap.deserializeMap.set(name, map[name]);\n    });\n\n    return new this.serializerConstructor(serializerMap);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentsMap.html":{"url":"interfaces/DynamicComponentsMap.html","title":"interface - DynamicComponentsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of string names to component constructors.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [serializedName: string]:    ComponentConstructor\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ComponentConstructor } from \"../component-constructor/component-constructor.model\";\n\n/**\n * A map of string names to component constructors.\n */\nexport interface DynamicComponentsMap {\n    [serializedName:string]: ComponentConstructor;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicComponentsModule.html":{"url":"modules/DynamicComponentsModule.html","title":"module - DynamicComponentsModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicComponentsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicComponentsModule\n\n\n\ncluster_DynamicComponentsModule_declarations\n\n\n\ncluster_DynamicComponentsModule_exports\n\n\n\ncluster_DynamicComponentsModule_providers\n\n\n\n\nDynamicComponentDirective\n\nDynamicComponentDirective\n\n\n\nDynamicComponentsModule\n\nDynamicComponentsModule\n\nDynamicComponentsModule -->\n\nDynamicComponentDirective->DynamicComponentsModule\n\n\n\n\n\nDynamicComponentDirective \n\nDynamicComponentDirective \n\nDynamicComponentDirective  -->\n\nDynamicComponentsModule->DynamicComponentDirective \n\n\n\n\n\nDynamicComponentSerializerService\n\nDynamicComponentSerializerService\n\nDynamicComponentsModule -->\n\nDynamicComponentSerializerService->DynamicComponentsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-components.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Dynamic Components Module exports the DynamicComponentDirective\nthat can be used to create dynamic components while alllowing them to\nbe wired up with input and output streams similar to components \ninstantiated normally.\nThe forRoot method must be called in order to provide the directive \nwith an implementation of the DynamicComponentSerializer which\nhandles the mapping of string names to actual Component class instances.\nThe default implementation DefaultDynamicComponentSerializer \nmay be overriden with a custom implementation if desired.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicComponentDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicComponentSerializerService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicComponentDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponentDirective } from './dynamic-component.directive';\nimport { DynamicComponentSerializerService } from './dynamic-component-serializer/dynamic-component-serializer.service';\nimport { DynamicComponentSerializerConstructorToken } from './dynamic-component-serializer/dynamic-component-serializer.token';\nimport { DefaultDynamicComponentSerializer } from './default-dynamic-component-serializer/default-dynamic-component-serializer';\nimport { DynamicComponentSerializerConstructor } from './dynamic-component-serializer/dynamic-component-serializer.constructor';\n\n/**\n * The Dynamic Components Module exports the {@link DynamicComponentDirective}\n * that can be used to create dynamic components while alllowing them to\n * be wired up with input and output streams similar to components \n * instantiated normally.\n * \n * The forRoot method must be called in order to provide the directive \n * with an implementation of the {@link DynamicComponentSerializer} which\n * handles the mapping of string names to actual Component class instances.\n * \n * The default implementation {@link DefaultDynamicComponentSerializer} \n * may be overriden with a custom implementation if desired.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DynamicComponentDirective \n  ],\n  exports: [\n    DynamicComponentDirective \n  ],\n  providers: [\n    DynamicComponentSerializerService\n  ]\n})\nexport class DynamicComponentsModule {\n  static forRoot(\n    serializerConstrutor: DynamicComponentSerializerConstructor = DefaultDynamicComponentSerializer\n  ): ModuleWithProviders {\n    return {\n      ngModule: DynamicComponentsModule,\n      providers: [\n        { \n          provide: DynamicComponentSerializerConstructorToken,\n          useValue: serializerConstrutor\n        }\n      ]\n    };\n  }  \n }\n\n \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LeaveDirective.html":{"url":"directives/LeaveDirective.html","title":"directive - LeaveDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  LeaveDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is a stub to handle :leave animations specified\ndynamically.  Angular will remove an element without waiting for \na dynamic animation to run but will wait for a static one.  So we\ndefine a stub :leave animation that does nothing but plays for the\namount of time needed for the specified dynamic :leave.\nCurrently this is under development and is hard coded to wait \nfor 500ms no matter how long the dynamic animation takes. \nEventually it will configure the wait time based on the actual\ndynamic animation's timing.\nSee DynamicAnimationsDirective for usage.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvkLeave]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setLeaveTiming\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @dvkLeave\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        @dvkLeave:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLeaveTiming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLeaveTiming(timing: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timing\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { trigger, transition, animate, style } from '@angular/animations';\nimport { Directive, HostBinding } from '@angular/core';\n\n/**\n * This directive is a stub to handle :leave animations specified\n * dynamically.  Angular will remove an element without waiting for \n * a dynamic animation to run but will wait for a static one.  So we\n * define a stub :leave animation that does nothing but plays for the\n * amount of time needed for the specified dynamic :leave.\n * \n * Currently this is under development and is hard coded to wait \n * for 500ms no matter how long the dynamic animation takes. \n * Eventually it will configure the wait time based on the actual\n * dynamic animation's timing.\n * \n * See {@link DynamicAnimationsDirective} for usage.\n */\n@Directive({\n  selector: '[dvkLeave]'\n})\nexport class LeaveDirective {\n  @HostBinding(\"@dvkLeave\") public timingParams: any = null;\n  \n  public setLeaveTiming(timing: string): void {\n    this.timingParams = dvkLeaveTiming(timing);\n  }\n}\n\n/**\n * Stub animation for the :leave transition\n */\nexport const dvkLeave =  [\n  trigger(\"dvkLeave\", [\n    transition(\":leave\", \n      animate(\"{{ timing }}\"), \n        { params: { timing: \"0ms\" }})\n  ])\n]\n\n/**\n * Stub function for setting the timing of a \n * :leave transition\n * @param timing The timing the animation should\n * last.\n */\nexport function dvkLeaveTiming(timing: any) {\n  return { value: null, params: { timing } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgStateService.html":{"url":"injectables/NgStateService.html","title":"injectable - NgStateService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts\n        \n\n            \n                Description\n            \n            \n                Converts an array of AnimationStateMetadata objects into \nan AnimationStylesMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseStates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseStates\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseStates(states: AnimationStateMetadata[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Convert metadata to AnimationStylesMap\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                        \n                                                                    AnimationStateMetadata[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The metadata to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationStylesMap\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimationStateMetadata } from '@angular/animations';\nimport { AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\n\n/**\n * Converts an array of AnimationStateMetadata objects into \n * an {@link AnimationStylesMap}.\n */\n@Injectable()\nexport class NgStateService {\n  constructor() { }\n\n  /**\n   * Convert metadata to {@link AnimationStylesMap}\n   * @param states The metadata to convert.\n   */\n  parseStates(states: AnimationStateMetadata[]): AnimationStylesMap {\n    return states.reduce((map,state)=>{\n      map[state.name] = state.styles;\n      return map;\n    },{});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgTransitionService.html":{"url":"injectables/NgTransitionService.html","title":"injectable - NgTransitionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgTransitionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the ability to convert an array of AnimationTransitionMetadata\ninto an AnimationTransitionsMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildAnimationTransitions\n                            \n                            \n                                    Private\n                                parseTransitionExpression\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildAnimationTransitions\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildAnimationTransitions(transitions: AnimationTransitionMetadata[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Build an AnimationTransitionsMap from an array of \nAnimationTransitionMetadata objects.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionMetadata[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The AnimationTransitionMetadata[] to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseTransitionExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseTransitionExpression(transition: AnimationTransitionMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Parse an individual AnimationTransitionMetadata for the transition\nexpression and convert that to a valid entry in an \nAnimationTransitionsMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        transition\n                                                        \n                                                                    AnimationTransitionMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The AnimationTransitionMetadata to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimationTransitionMetadata } from '@angular/animations';\nimport { AnimationTransitionsMap } from '../animation-transitions/animation-transitions.model';\nimport { NgTransitionSymbols } from './ng-transition.symbols';\nimport { NgTransitionStates } from './ng-transition.states';\n\n/**\n * Provides the ability to convert an array of AnimationTransitionMetadata\n * into an {@link AnimationTransitionsMap}.\n */\n@Injectable()\nexport class NgTransitionService {\n  \n  constructor() { }\n\n  /**\n   * Build an {@link AnimationTransitionsMap} from an array of \n   * AnimationTransitionMetadata objects.\n   * \n   * @param transitions The AnimationTransitionMetadata[] to convert.\n   */\n  buildAnimationTransitions(transitions: AnimationTransitionMetadata[]) {\n    return transitions.reduce((transMap: AnimationTransitionsMap, transition)=>{\n      let newTransitions = this.parseTransitionExpression(transition);\n      Object.keys(newTransitions).forEach(fromState=>{\n        Object.keys(newTransitions[fromState]).forEach(toState=>{\n          transMap[fromState] = transMap[fromState] || {};\n          transMap[fromState][toState] = newTransitions[fromState][toState];\n        })\n      });\n      return transMap;\n    },{});\n  }\n\n  /**\n   * Parse an individual AnimationTransitionMetadata for the transition\n   * expression and convert that to a valid entry in an \n   * {@link AnimationTransitionsMap}.\n   * @param transition The AnimationTransitionMetadata to convert.\n   */\n  private parseTransitionExpression(transition: AnimationTransitionMetadata) {\n    const expressions = transition.expr;\n    let transitions: AnimationTransitionsMap = {};\n\n    if(this.isString(expressions)) {\n      expressions.split(',').forEach(expression=>{\n        if(expression.includes(NgTransitionSymbols.Either)) {\n          const states = expression.split(NgTransitionSymbols.Either);\n          const state1 = states[0].trim();\n          const state2 = states[1].trim();\n\n          transitions = {\n            [state1]: {\n              ...transitions[state1],\n              [state2]:transition.animation\n            },\n            [state2]: {\n              ...transitions[state2],\n              [state1]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.To)) {\n          const states = expression.split(NgTransitionSymbols.To);\n          const fromState = states[0].trim();\n          const toState = states[1].trim();\n\n          transitions = {\n            [fromState]: {\n              ...transitions[fromState],\n              [toState]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Enter)) {\n          transitions = {\n            [NgTransitionStates.Void]: {\n              ...transitions[NgTransitionStates.Void],\n              [NgTransitionStates.WildCard]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Leave)) {\n          transitions = {\n            [NgTransitionStates.WildCard]: {\n              ...transitions[NgTransitionStates.WildCard],\n              [NgTransitionStates.Void]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Inc)) {\n          console.error(`${expression} is not yet supported`);\n        }\n        else if(expression.includes(NgTransitionSymbols.Dec)) {\n          console.error(`${expression} is not yet supported`);\n        }\n      })\n    }\n    return transitions;\n  }\n  \n  /**\n   * @ignore\n   */\n  private isString(expression: any): expression is string {\n    return expression.length !== null && expression.length !== undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateCSSMap.html":{"url":"interfaces/StateCSSMap.html","title":"interface - StateCSSMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateCSSMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts\n        \n\n            \n                Description\n            \n            \n                Map a state to a css class that \nshould be applied to the element\nbeing animated.\nThe old class will be removed before\nany transition animation is played.\nThe new class will be applied after\nany transition animations complete.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [state: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts:18\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface StateCSSMap {\n    [state:string]: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateCSSMapper.html":{"url":"interfaces/StateCSSMapper.html","title":"interface - StateCSSMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateCSSMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an object that can map string state names \nto CSS classes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        add\n                                \n                                \n                                        destroy\n                                \n                                \n                                        remove\n                                \n                                \n                                        removeAll\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        add\n                                    \n                                \n                                \n                                    \n                                        add:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Add the css class defined by the StateCSSMap \nfor the given state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references used by the closure.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Remove the css class defined by the StateCSSMap \nfor the given state. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeAll\n                                    \n                                \n                                \n                                    \n                                        removeAll:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Remove all css classes defined by the StateCSSMap\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StateCSSMapper {\n\n  /**\n   * Remove the css class defined by the {@link StateCSSMap} \n   * for the given state. \n   */\n  remove: (state:string)=>void;\n\n  /**\n   * Remove all css classes defined by the {@link StateCSSMap}\n   */\n  removeAll: ()=>void;\n\n  /**\n   * Add the css class defined by the {@link StateCSSMap} \n   * for the given state.\n   */\n  add: (state:string)=> void;\n\n  /**\n   * Release the references used by the closure.\n   */\n  destroy: ()=> void;\n}\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateCssMapperService.html":{"url":"injectables/StateCssMapperService.html","title":"injectable - StateCssMapperService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StateCssMapperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts\n        \n\n            \n                Description\n            \n            \n                This service creates a closure that handles \nadding and removing css classes form a given element\nbased on the StateCSSMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStateCSSMapper\n                            \n                            \n                                getCSSClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                    RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStateCSSMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStateCSSMapper(element: any, map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Create the StateCSSMapper to apply to the given element.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The element to apply the css classes to.\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The StateCSSMap that defines the css classes and states.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCSSClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCSSClass(state: string, map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Get the css class for the given state.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The state.\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The StateCSSMap to look the state up in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, RendererFactory2 } from '@angular/core';\nimport { StateCSSMapper } from './state-css-mapper.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * This service creates a closure that handles \n * adding and removing css classes form a given element\n * based on the {@link StateCSSMap}.\n */\n@Injectable()\nexport class StateCssMapperService {\n\n  constructor(private rendererFactory: RendererFactory2) {\n  }\n\n  /**\n   * Get the css class for the given state.\n   * \n   * @param state The state.\n   * @param map The StateCSSMap to look the state up in.\n   */\n  getCSSClass(state:string, map: StateCSSMap) {\n    return map && map[state];\n  }\n\n  /**\n   * Create the {@link StateCSSMapper} to apply to the given element.\n   * \n   * @param element The element to apply the css classes to.\n   * @param map The StateCSSMap that defines the css classes and states.\n   */\n  createStateCSSMapper(element: any, map: StateCSSMap) {\n    let renderer = this.rendererFactory.createRenderer(element,null);\n\n    return {\n      remove: (state:string)=> {\n        renderer.removeClass(element,this.getCSSClass(state,map));\n      },\n      add: (state:string)=> {\n        renderer.addClass(element,this.getCSSClass(state,map));\n      },\n      removeAll: ()=> {\n        Object.keys(map).forEach(entry=>renderer.removeClass(element, map[entry]));\n      },\n      destroy: ()=> {\n        renderer.destroy();\n        renderer = null;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts\n            \n            \n                interface\n            \n            \n                ContainersMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.model.ts\n            \n            \n                interface\n            \n            \n                ContentConductorConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.token.ts\n            \n            \n                variable\n            \n            \n                ContentConductorConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor.model.ts\n            \n            \n                interface\n            \n            \n                ContentConductor\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor.service.ts\n            \n            \n                injectable\n            \n            \n                ContentConductorService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts\n            \n            \n                directive\n            \n            \n                ContentContainerDirective\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-container/content-container.model.ts\n            \n            \n                interface\n            \n            \n                ContentContainer\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content/content.directive.ts\n            \n            \n                directive\n            \n            \n                ContentDirective\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts\n            \n            \n                class\n            \n            \n                DefaultContentConductorService\n            \n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.constructor.ts\n            \n            \n                interface\n            \n            \n                AnimationStateMachineConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.model.ts\n            \n            \n                interface\n            \n            \n                AnimationStateMachine\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.token.ts\n            \n            \n                variable\n            \n            \n                AnimationStateMachineConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts\n            \n            \n                injectable\n            \n            \n                AnimationStatesService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n            \n            \n                interface\n            \n            \n                AnimationStylesMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n            \n            \n                interface\n            \n            \n                AnimationTransitionsMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/default-animations-state-machine/default-animations-state-machine.service.ts\n            \n            \n                class\n            \n            \n                DefaultAnimationsStateMachine\n            \n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts\n            \n            \n                class\n            \n            \n                DefaultDynamicAnimationsHandlerService\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.constructor.ts\n            \n            \n                interface\n            \n            \n                DynamicAnimationsHandlerConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.model.ts\n            \n            \n                interface\n            \n            \n                DynamicAnimationsHandler\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.token.ts\n            \n            \n                variable\n            \n            \n                DynamicAnimationsHandlerConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts\n            \n            \n                directive\n            \n            \n                DynamicAnimationsDirective\n            \n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicAnimationsService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave-pseudo-animation/leave-pseudo-animation.ts\n            \n            \n                variable\n            \n            \n                dvkLeave\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                directive\n            \n            \n                LeaveDirective\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                function\n            \n            \n                dvkLeaveTiming\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                variable\n            \n            \n                dvkLeave\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts\n            \n            \n                injectable\n            \n            \n                NgStateService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts\n            \n            \n                injectable\n            \n            \n                NgTransitionService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts\n            \n            \n                interface\n            \n            \n                StateCSSMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.model.ts\n            \n            \n                interface\n            \n            \n                StateCSSMapper\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts\n            \n            \n                injectable\n            \n            \n                StateCssMapperService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/component-constructor/component-constructor.model.ts\n            \n            \n                interface\n            \n            \n                ComponentConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts\n            \n            \n                class\n            \n            \n                DefaultDynamicComponentSerializer\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-data/dynamic-component-data.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentData\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentsMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-model/dynamic-component-model.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentModel\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer-map/dynamic-component-serializer-map.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializerMap\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.constructor.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializerConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializer\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicComponentSerializerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.token.ts\n            \n            \n                variable\n            \n            \n                DynamicComponentSerializerConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts\n            \n            \n                directive\n            \n            \n                DynamicComponentDirective\n            \n            \n                62 %\n                (10/16)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.1\n        \n            @angular/common : ^6.1.1\n        \n            @angular/core : ^6.1.1\n        \n            @angular/compiler : ^6.1.1\n        \n            @angular/forms : ^6.1.1\n        \n            @angular/http : ^6.1.1\n        \n            @angular/platform-browser : ^6.1.1\n        \n            @angular/platform-browser-dynamic : ^6.1.1\n        \n            @angular/router : ^6.1.1\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgTransitionStates   (projects/.../ng-transition.states.ts)\n                        \n                        \n                            NgTransitionSymbols   (projects/.../ng-transition.symbols.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.states.ts\n    \n        \n            \n                \n                    \n                        \n                        NgTransitionStates\n                    \n                \n                    \n                        \n                            States predefined by the Angular animations.\n\n                        \n                    \n                        \n                            \n                                 WildCard\n                            \n                        \n                        \n                            \n                                Value: *\n                            \n                        \n                        \n                            \n                                 Void\n                            \n                        \n                        \n                            \n                                Value: void\n                            \n                        \n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.symbols.ts\n    \n        \n            \n                \n                    \n                        \n                        NgTransitionSymbols\n                    \n                \n                    \n                        \n                            Symbols used by the angular animations transition\nexpression definitions.\n\n                        \n                    \n                        \n                            \n                                 To\n                            \n                        \n                        \n                            \n                                Value: =>\n                            \n                        \n                        \n                            \n                                 Either\n                            \n                        \n                        \n                            \n                                Value: \n                            \n                        \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                Value: :enter\n                            \n                        \n                        \n                            \n                                 Leave\n                            \n                        \n                        \n                            \n                                Value: :leave\n                            \n                        \n                        \n                            \n                                 Inc\n                            \n                        \n                        \n                            \n                                Value: :increment\n                            \n                        \n                        \n                            \n                                 Dec\n                            \n                        \n                        \n                            \n                                Value: :decrement\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dvkLeaveTiming   (projects/.../leave.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeaveTiming\n                            \n                            \n                        \n                    \n                \n                \n                    \ndvkLeaveTiming(timing: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Stub function for setting the timing of a \n:leave transition\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timing\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The timing the animation should\nlast.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@UAT/DynamicViewKit\nThe Dynamic View Kit is a library for building components\nand directives with dynamic capabilities.\nThe goal is to provide a set of tools that allow component and\ndirective authors to create feature rich components whose \nfunctionality can be modified by end users.\nDocumentation\nThe documentation is available here.\nFeatures\nCurrently the dvk offers 3 features for building components and \ndirectives.\n\nContent Conductor\nDynamic Animations\nDynamic Components\n\nInstallation\nComing soon...\nBuilding\nThe dvk library can be compiled with the command:\nng build dvkDemo Application\nThe development environment and demo application can then be \nstarted with the command:\nng serveAngular CLI\nThis project was generated with Angular CLI version 6.1.2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 tme321\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ContentConductorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicAnimationsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicComponentsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentConductorModule\n\n\n\ncluster_ContentConductorModule_declarations\n\n\n\ncluster_ContentConductorModule_exports\n\n\n\ncluster_ContentConductorModule_providers\n\n\n\ncluster_DynamicAnimationsModule\n\n\n\ncluster_DynamicAnimationsModule_declarations\n\n\n\ncluster_DynamicAnimationsModule_exports\n\n\n\ncluster_DynamicAnimationsModule_providers\n\n\n\ncluster_DynamicComponentsModule\n\n\n\ncluster_DynamicComponentsModule_declarations\n\n\n\ncluster_DynamicComponentsModule_exports\n\n\n\ncluster_DynamicComponentsModule_providers\n\n\n\n\nContentContainerDirective\n\nContentContainerDirective\n\n\n\nContentConductorModule\n\nContentConductorModule\n\nContentConductorModule -->\n\nContentContainerDirective->ContentConductorModule\n\n\n\n\n\nContentDirective\n\nContentDirective\n\nContentConductorModule -->\n\nContentDirective->ContentConductorModule\n\n\n\n\n\nContentContainerDirective \n\nContentContainerDirective \n\nContentContainerDirective  -->\n\nContentConductorModule->ContentContainerDirective \n\n\n\n\n\nContentDirective \n\nContentDirective \n\nContentDirective  -->\n\nContentConductorModule->ContentDirective \n\n\n\n\n\nContentConductorService\n\nContentConductorService\n\nContentConductorModule -->\n\nContentConductorService->ContentConductorModule\n\n\n\n\n\nDynamicAnimationsDirective\n\nDynamicAnimationsDirective\n\n\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsDirective->DynamicAnimationsModule\n\n\n\n\n\nLeaveDirective\n\nLeaveDirective\n\nDynamicAnimationsModule -->\n\nLeaveDirective->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective  -->\n\nDynamicAnimationsModule->DynamicAnimationsDirective \n\n\n\n\n\nLeaveDirective \n\nLeaveDirective \n\nLeaveDirective  -->\n\nDynamicAnimationsModule->LeaveDirective \n\n\n\n\n\nAnimationStatesService\n\nAnimationStatesService\n\nDynamicAnimationsModule -->\n\nAnimationStatesService->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsService\n\nDynamicAnimationsService\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsService->DynamicAnimationsModule\n\n\n\n\n\nNgStateService\n\nNgStateService\n\nDynamicAnimationsModule -->\n\nNgStateService->DynamicAnimationsModule\n\n\n\n\n\nNgTransitionService\n\nNgTransitionService\n\nDynamicAnimationsModule -->\n\nNgTransitionService->DynamicAnimationsModule\n\n\n\n\n\nStateCssMapperService\n\nStateCssMapperService\n\nDynamicAnimationsModule -->\n\nStateCssMapperService->DynamicAnimationsModule\n\n\n\n\n\nDynamicComponentDirective\n\nDynamicComponentDirective\n\n\n\nDynamicComponentsModule\n\nDynamicComponentsModule\n\nDynamicComponentsModule -->\n\nDynamicComponentDirective->DynamicComponentsModule\n\n\n\n\n\nDynamicComponentDirective \n\nDynamicComponentDirective \n\nDynamicComponentDirective  -->\n\nDynamicComponentsModule->DynamicComponentDirective \n\n\n\n\n\nDynamicComponentSerializerService\n\nDynamicComponentSerializerService\n\nDynamicComponentsModule -->\n\nDynamicComponentSerializerService->DynamicComponentsModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            3 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InitialValues   (projects/.../initial-values.model.ts)\n                        \n                        \n                            InputStreams   (projects/.../input-streams.model.ts)\n                        \n                        \n                            NotTypedKeys   (projects/.../not-typed-keys.model.ts)\n                        \n                        \n                            OutputCallbacks   (projects/.../output-callbacks.model.ts)\n                        \n                        \n                            TypedKeys   (projects/.../typed-keys.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-components/initial-values/initial-values.model.ts\n    \n        \n            \n                \n                    \n                        \n                        InitialValues\n                    \n                \n                    \n                        \n                            A map of keys to values where \nthe keys are properties of \ntype T and the values are \nthe same as the property type.\n\n                        \n                    \n                \n                    \n                        InitialValues:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/dynamic-components/input-streams/input-streams.model.ts\n    \n        \n            \n                \n                    \n                        \n                        InputStreams\n                    \n                \n                    \n                        \n                            A map of Observables whose keys are \nany properties of type T that are not \n{@link EventEmitter}s.\n\n                        \n                    \n                \n                    \n                        InputStreams:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/common/not-typed-keys.model.ts\n    \n        \n            \n                \n                    \n                        \n                        NotTypedKeys\n                    \n                \n                    \n                        \n                            Constrain a set of keys from type T \nthat are not of type C.\n\n                        \n                    \n                \n                    \n                        NotTypedKeys:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/dynamic-components/output-callbacks/output-callbacks.model.ts\n    \n        \n            \n                \n                    \n                        \n                        OutputCallbacks\n                    \n                \n                    \n                        \n                            A map of call back functions whose keys are \nproperties of type T that are {@link EventEmitter}s.\n\n                        \n                    \n                \n                    \n                        OutputCallbacks:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/common/typed-keys.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TypedKeys\n                    \n                \n                    \n                        \n                            Constrain a set of keys from type T\nthat are of type C.\n\n                        \n                    \n                \n                    \n                        TypedKeys:     \n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimationStateMachineConstructorToken   (projects/.../animation-state-machine.token.ts)\n                        \n                        \n                            ContentConductorConstructorToken   (projects/.../content-conductor-constructor.token.ts)\n                        \n                        \n                            dvkLeave   (projects/.../leave.directive.ts)\n                        \n                        \n                            dvkLeave   (projects/.../leave-pseudo-animation.ts)\n                        \n                        \n                            DynamicAnimationsHandlerConstructorToken   (projects/.../dynamic-animations-handler.token.ts)\n                        \n                        \n                            DynamicComponentSerializerConstructorToken   (projects/.../dynamic-component-serializer.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AnimationStateMachineConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AnimationStateMachineConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AnimationStateMachineConstructorToken')\n                        \n                    \n\n                \n                    \n                        Token for the class to be constructed to act as the animation state machine.\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ContentConductorConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ContentConductorConstructorToken:     miscellaneou\n\n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('ContainersConductorConstructorToken')\n                        \n                    \n\n                \n                    \n                        An injection token representing an implementation of a \nconstructor in the shape of ContentConductorConstructor.\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dvkLeave:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  trigger(\"dvkLeave\", [\n    transition(\":leave\", \n      animate(\"{{ timing }}\"), \n        { params: { timing: \"0ms\" }})\n  ])\n]\n                        \n                    \n\n                \n                    \n                        Stub animation for the :leave transition\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/leave-pseudo-animation/leave-pseudo-animation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dvkLeave:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('dvkLeave', [\n    transition('enabled => void', \n      animate('{{ leaveTiming }}', \n      style({ /* empty */ })))\n  ])\n                        \n                    \n\n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DynamicAnimationsHandlerConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DynamicAnimationsHandlerConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DynamicAnimationsHandlerConstructorToken')\n                        \n                    \n\n                \n                    \n                        Token for injecting the constructor for an object that can\nact as the Animations Handler\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DynamicComponentSerializerConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DynamicComponentSerializerConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DynamicComponentSerializerConstructorToken')\n                        \n                    \n\n                \n                    \n                        This token represents the specific instance used for the\ncomponent serializer.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/content-conductor.html":{"url":"additional-documentation/content-conductor.html","title":"additional-page - Content Conductor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCondent Conductor\nThe Condent Conductor module provides the functionality for moving \nTemplateRefs between multiple ViewContainerRefs referenced with\nstring name values.\nCreating Containers\nContainers can be defined inside a Component template with the \nContentContainerDirective.\n\nThe string names provided to the directive can be used to reference\nthat container through an instance of ContentConductor.\nCreating a Conductor\nThe ContentConductor can be created by injecting the ContentConductorService into a component's constructor.\n  constructor(private ccService: ContentConductorService) { }And then calling the createContentConductor method with the QueryLists for the ContentContainerDirectives and the TemplateRefs.  These QueryLists should both be available during ngAfterViewInit.\nThe init method specifies which container any initial content should\nbe in.\n  @ContentChildren(ContentDirective,{ read: TemplateRef, descendants: true }) \n  contents: QueryList>;\n\n  @ViewChildren(ContentContainerDirective)\n  containers: QueryList;\n\n  conductor: ContentConductor;\n\n  ngAfterViewInit() {\n    this.conductor = this.ccService\n      .createContentConductor(this.containers, this.contents);\n\n    this.conductor.init('one');\n  }Using the Conductor\nThen content can be moved from one container to another by specifying\nthe container string names.\nthis.conductor.moveViews('one','two');The ContentConductor also provides the ability to move single views from one container to another based on their index inside the container.\nthis.conductor.moveView('one','two',3);Detach a single view from any container returning the ViewRef.\nconst vRef: ViewRef = this.conductor.detachView('one',2);Attach a view to the end of a specified container.\nthis.conductor.attachView('two',vRef);Detach all views from a specified container.\nconst views: ViewRef[] = this.conductor.detachViews('one');And attach an array of views to a specified container.\nthis.conductor.attachViews('two',views);Finally the content conductor should be destroyed inside the components\nngOnDestroy method in order to free up the resources it uses.\nngOnDestroy() {\n  this.conductor.destroy();\n}Note\nAll of the methods that insert views into containers also have an optional index parameter at the end that is the index to insert at.\nIf it is not specified the items are inserted to the end of the containers views.\nContent\nContent is added to the containers by creating it inside the element that has containers in it's view and creates the conductor.  The pieces of content should be marked with the structural directive ContentDirective.\n\n    Some Content To Display In A Container\n    \n    \n        \n        \n    \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/content-conductor/example.html":{"url":"additional-documentation/content-conductor/example.html","title":"additional-page - Example","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Your browser does not support iframes.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-animations.html":{"url":"additional-documentation/dynamic-animations.html","title":"additional-page - Dynamic Animations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDynamic Animations\nThe Dynamic Animations module provides a directive that allow animations to be specified in the same format as standard Angular animations.  These animations are supplied at run time instead of statically in the Component decorator so a component developer can expose the animations specification and a consumer of the component can supply their own animations.\nDefining a set of Animations\nAnimations are defined using the same functions that normal Angular animations use with a few exceptions.  The animations are defined as an array containing state and transition definitions from @angular/animations.  A trigger definition is not recognized as the DynamicAnimationsDirective supplies an @Input member state that works in the same way as a trigger does.\nOther constraints are that no part of an animation can refer to a defined trigger, such as some forms of query, and no part can refer to a specific state.  The concept of states is implemented fully by the AnimationStateMachine as the Angular AnimationBuilder does not have the same concept of states as the standard static Angular animations.\nA simple animation looks like this.\nanimations = [\n    state('open',style({\n        'transform': `scaleY(1.0)`,\n        'transform-origin': 'top'\n    })),\n    state('closed',style({\n        'transform': `scaleY(0.0)`,\n        'transform-origin': 'top'\n    })),\n    transition('openclosed',animate('200ms'))\n];Currently supported abilities include the wild card for transitions like *=>open or closed=>* as well as :enter.  The :leave state has limited support at the moment.  Please refer to the section below.\nNote\nMore complex animations as defined normally by Angular are supported but have not all been fully tested at this time.  If you find any animations that work statically but do not work dynamically outside of the constraints listed above please submit a bug report with the animation that does not work included.\nAnimation States\nThe state itself can be represented by a string member that can be bound to the state @Input of the directive.  \ncurrentState = 'closed';The animation directive will automatically transition from the void state to the value of the bound state during initalization.  It will play any :enter or *=>void transitions that match the conditions as were definined in the animations.\nNote\nCurrently only string states are supported; numerical values will not work and neither will :increment or :decrement transition styles.  Support is planned but not yet implemented.\nUsing the DynamicAnimationsDirective\nThe dynamic animations directive can be attached to an element and passed the animations and the state binding.\n\nTransitioning the State\nThe state can be transitioned simply by changing the value of the bound member to the next desired state.\nthis.currentState = 'open';The transition that matches the change in state with the most specificity will be played when the value of the bound state is changed.\nLeave Transition\nThe leave transition is partially supported at the moment.\nIf a :leave animation, or *=>void, is specified you must also both\nadd the @dvkLeave directive to the element and add dvkLeave to \nthe component as a static animation.  This step is only necessary\nfor the leave animation. \nThis is due to the fact that Angular will remove an element before a dynamic animation has a chance to play.  A static leave animation must be used to keep the element around long enough for the dynamic animation to actually play.\nCurrently the dvkLeave directive is set to a constant time of 500ms.  In the future this value will be made dynamic to match the dynamic animation supplied.\nSo in order to use a leave animation first attach the animation to the component metadata.\n@Component({\n    animations: [dvkLeave]\n})Then add it as a trigger to the element containing the DynamicAnimationsDirective.\n\nAnd define a leave transition inside the animations supplied to the directive.\ntransition(':leave',animate('200ms',\n    style({ 'background-color': 'red' }))\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-animations/example.html":{"url":"additional-documentation/dynamic-animations/example.html","title":"additional-page - Example","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Your browser does not support iframes.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-components.html":{"url":"additional-documentation/dynamic-components.html","title":"additional-page - Dynamic Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDynamic Components\nThe Dynamic Components module provides a directive that will instantiate components dynamically with the ability to hook up their inputs to observable streams and provide callbacks for the instantiated components output emitters.\nCreating a Serializer\nA DynamicComponentSerializer is used to translate between a string name and a Component class instance.  This allows the string name to be stored inside an ngrx store, transmitted to a server, or any other use that might be desired and the data can be used later to instantiate the same dynamic component.  \nA serializer can be created with the createSerializer method of the DynamicComponentSerializerService.  \nFirst inject the service into a components constructor.\nconstructor(private dcsService :DynamicComponentSerializerService) {} And then pass the createSerializer method a DynamicComponentsMap of string names to component class instances.\nserializer: DynamicComponentSerializer;\n\nngOnInit() {\n    this.serializer = this.dcsService.createSerializer({\n        'textComponent': TextComponent,\n        'numberComponent': NumberComponent\n    });\n}This serializer is stateless other than the map and can be reused for any number of instances of DynamicComponentDirectives.\nCreating a DynamicComponentModel\nA DynamicComponentModel is the model that the DynamicComponentDirective uses to instantiate a component and hook up any streams specified.\nA DynamicComponentModel extends the DynamicComponentData interface.  The DynamicComponentData interface was designed to be serializable so it can be stored or transferred as desired.  It consists of a name string and an initialValues object.  The name is the serialized name of the component that should be instantiated.  The initializedValues should be a map of fields inside the component class type to the desired initial values for those fields.  As long as the field values are serializable this entire data structure can be safely stored and used for any purpose.\n@Component({\n    template: `\n        \n        {{text}}\n        \n    `\n})\nclass TextComponent {\n    @Input() text: string;\n    @Output() textClicked = new EventEmitter();\n}\n\nconst data: DynamicComponentData = {\n    name: 'textComponent',\n    initialValues: {\n        'text': 'The initial text for this component'\n    }\n}This data structure can be combined with the other fields of the DynamicComponentModel before it is applied to the directive.\ntext$ = new Subject();\n\nonClick = (e: MouseEvent) => {\n    console.log('Dynamic component was clicked');\n}\n\nconst model: DynamicComponentModel = {\n    ...this.data,\n    inputs$: {\n        text: this.text$.asObservable()\n    },\n    outputCallbacks: {\n        textClicked: this.onClick\n    },\n    providers: [\n    /* Any custom providers for the component can be supplied here */\n    ]\n}Note\nThe context of this inside callbacks will be the dynamic component and not the class where the callback is defined unless the callback method is defined as an arrow function or the value of this is bound before passing the result to the dynamic component.  This example uses an arrow function to preserve the context of this inside the onClick callback.\nCreating a DynamicComponentDirective\nWith the model set up and a serializer created those two pieces can now be passed off to an instance of the DynamicComponentDirectives inside the template of a component.\n\nThe DynamicComponentDirective will use the serializer to resolve the string name to a component and create an instance of it.  It will apply any specified initial values during instantiation.  Then it will hook up any specified input streams and output callbacks to the members of the component.\nThe directive will track and properly dispose of the subscriptions for the streams and will trigger change detection manually when new values are emited from the input streams.  The input streams also have a distinct until changed operator applied.  The directive should manage these streams in the same way that the async pipe does for other components.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-components/example.html":{"url":"additional-documentation/dynamic-components/example.html","title":"additional-page - Example","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Your browser does not support iframes.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
