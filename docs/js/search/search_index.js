var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/AnimationStateMachine.html",[0,0.143,1,1.764]],["body/interfaces/AnimationStateMachine.html",[0,0.204,1,2.52,2,0.35,3,0.35,4,0.291,5,0.478,6,2.18,7,1.901,8,2.18,9,3.43,10,0.32,11,2.687,12,1.558,13,4.621,14,1.521,15,1.099,16,1.227,17,1.604,18,1.295,19,0.445,20,2.108,21,2.997,22,3.972,23,5.1,24,1.93,25,0.808,26,0.021,27,4.017,28,3.089,29,5.288,30,2.37,31,1.604,32,2.874,33,2.835,34,0.859,35,1.604,36,3.339,37,2.687,38,2.874,39,0.873,40,0.445,41,2.343,42,2.038,43,3.047,44,0.32,45,2.761,46,5.288,47,4.011,48,3.047,49,0.623,50,4.011,51,1.599,52,0.015,53,0.015]],["title/interfaces/AnimationStateMachineConstructor.html",[0,0.143,54,2.337]],["body/interfaces/AnimationStateMachineConstructor.html",[0,0.232,1,2.337,2,0.428,3,0.428,4,0.355,5,0.584,6,2.666,7,1.796,8,2.666,10,0.391,11,3.053,12,1.572,13,4.137,26,0.021,34,0.821,35,1.488,40,0.72,44,0.391,52,0.017,53,0.017,54,3.795,55,4.194,56,1.181,57,4.566,58,3.726,59,2.198,60,4.194,61,2.538,62,2.538,63,2.071,64,2.492,65,1.955,66,1.749,67,1.955,68,4.194,69,4.904]],["title/injectables/AnimationStatesService.html",[70,0.906,71,1.88]],["body/injectables/AnimationStatesService.html",[1,2.828,2,0.304,3,0.304,4,0.252,5,0.656,6,2.992,7,1.786,8,2.612,10,0.383,11,2.442,12,1.531,13,4.086,19,0.386,25,0.657,26,0.021,30,2.154,31,1.8,34,0.476,35,2.071,37,2.442,38,3.5,39,0.793,40,0.69,44,0.278,52,0.013,53,0.013,54,3.748,56,0.945,58,4.509,59,1.56,61,2.841,62,2.841,63,1.47,64,1.769,65,1.388,66,2.399,67,2.483,68,4.11,70,1.454,71,2.442,72,3.215,73,2.977,74,2.807,75,1.618,76,5.075,77,2.807,78,1.454,79,3.481,80,5.504,81,3.481,82,1.31,83,0.793,84,1.177,85,3.481,86,3.481,87,1.388,88,1.312,89,0.808,90,2.396,91,2.977,92,2.977,93,3.481,94,3.481,95,1.534,96,2.03,97,3.481,98,2.325,99,3.481,100,3.481]],["title/interfaces/AnimationStylesMap.html",[0,0.143,62,1.563]],["body/interfaces/AnimationStylesMap.html",[0,0.24,2,0.387,3,0.387,4,0.322,5,0.673,6,3.07,7,1.812,10,0.354,12,1.03,19,0.492,24,1.624,26,0.021,31,1.713,35,1.884,37,2.255,39,0.932,40,0.492,44,0.45,49,1.101,52,0.016,53,0.016,59,1.989,61,1.875,62,2.385,63,2.385,67,2.252,101,3.372,102,1.693,103,5.771,104,4.439,105,4.966,106,3.056,107,3.796,108,4.29,109,3.07,110,2.593,111,3.796,112,3.372,113,3.372,114,4.29,115,2.593,116,3.888,117,3.056,118,3.796]],["title/interfaces/AnimationTransitionsMap.html",[0,0.143,61,1.563]],["body/interfaces/AnimationTransitionsMap.html",[0,0.234,2,0.368,3,0.368,4,0.306,5,0.651,6,2.971,7,1.815,10,0.336,12,1.268,19,0.468,24,1.213,25,0.576,26,0.021,31,1.28,35,2.064,37,2.777,39,1,40,0.468,44,0.436,49,1.102,52,0.015,53,0.015,59,1.891,61,2.308,62,1.782,63,2.308,67,1.682,101,3.205,102,1.653,103,5.184,105,5.047,106,3.763,107,4.674,108,4.872,109,3.486,110,3.193,111,4.674,112,4.152,113,4.152,114,4.872,115,3.193,116,4.174,117,3.763,118,4.674,119,4.219,120,4.219]],["title/interfaces/ComponentConstructor.html",[0,0.143,121,1.764]],["body/interfaces/ComponentConstructor.html",[0,0.25,2,0.482,3,0.482,4,0.4,5,0.659,10,0.441,15,1.149,26,0.02,44,0.441,52,0.018,53,0.018,56,1.086,121,3.076,122,4.726,123,2.808,124,4.199,125,3.805,126,5.527]],["title/interfaces/ContainersMap.html",[0,0.143,127,2.548]],["body/interfaces/ContainersMap.html",[0,0.239,2,0.449,3,0.449,4,0.373,10,0.41,19,0.57,26,0.021,39,0.849,40,0.57,44,0.41,49,1.03,52,0.017,53,0.017,83,1.095,89,1.194,102,1.687,127,4.26,128,2.614,129,5.292,130,4.701,131,3.251,132,3.364,133,2.949,134,3.877,135,4.401,136,5.147]],["title/interfaces/ContentConductor.html",[0,0.143,137,1.764]],["body/interfaces/ContentConductor.html",[0,0.104,2,0.142,3,0.3,4,0.118,10,0.421,11,1.367,15,0.991,16,0.927,19,0.704,21,1.639,22,1.699,25,0.689,26,0.021,30,1.206,31,1.212,32,2.172,36,1.028,39,0.974,40,0.298,44,0.13,49,1.062,51,1.901,52,0.008,53,0.008,56,0.529,66,0.96,70,0.843,74,1.572,75,1.089,77,1.572,78,1.446,82,1.375,83,1.086,84,1.236,89,0.378,95,1.867,96,1.137,98,2.541,102,0.734,115,3.081,128,2.31,132,3.21,133,3.111,134,1.572,137,1.282,138,2.779,139,1.392,140,2.422,141,1.463,142,2.779,143,2.301,144,2.784,145,1.853,146,2.795,147,4.209,148,2.334,149,3.036,150,2.044,151,1.463,152,2.248,153,1.463,154,3.064,155,2.691,156,3.036,157,1.853,158,2.691,159,2.301,160,2.301,161,2.301,162,2.301,163,2.301,164,1.628,165,2.044,166,1.282,167,2.691,168,2.691,169,2.301,170,3.417,171,2.301,172,2.301,173,2.301,174,2.301,175,2.691,176,2.751,177,1.572,178,2.691,179,2.691,180,2.301,181,2.691,182,2.691,183,2.691,184,1.699,185,2.044,186,2.691,187,2.691,188,3.417,189,3.784,190,4.076,191,1.392,192,5.065,193,1.628,194,2.867,195,3.488,196,1.392,197,1.628,198,2.591,199,5.636,200,2.301,201,1.628,202,2.301,203,1.463,204,1.367,205,2.691,206,1.699,207,1.699,208,1.392,209,1.628,210,3.996,211,1.206,212,3.417,213,2.301,214,1.628,215,2.563,216,2.301,217,1.628,218,2.301,219,1.392,220,4.314,221,1.628,222,2.044,223,2.044,224,2.334,225,3.417,226,4.076,227,2.691,228,1.392,229,1.628,230,0.827,231,1.028,232,3.046,233,1.392,234,2.691,235,1.628,236,2.691,237,1.628,238,1.392,239,1.628,240,1.392,241,1.628,242,1.028,243,1.628,244,1.628,245,1.628,246,1.628,247,1.628]],["title/interfaces/ContentConductorConstructor.html",[0,0.143,248,2.162]],["body/interfaces/ContentConductorConstructor.html",[0,0.227,2,0.41,3,0.41,4,0.341,10,0.375,26,0.021,40,0.707,44,0.375,52,0.016,53,0.016,56,1.152,65,1.877,78,1.435,89,1.092,95,1.216,98,2.475,109,2.559,124,3.576,128,1.988,132,2.559,133,2.792,137,3.182,138,2.392,142,2.695,144,3.423,146,4.337,152,2.392,154,2.559,166,2.792,185,3.576,207,2.973,230,2.392,231,2.973,248,3.423,249,2.973,250,2.475,251,3.576,252,4.451,253,4.451]],["title/modules/ContentConductorModule.html",[254,1.395,255,2.548]],["body/modules/ContentConductorModule.html",[0,0.165,2,0.256,3,0.256,4,0.213,10,0.234,14,1.225,17,2.089,24,1.916,26,0.021,31,1.292,34,0.685,39,0.703,40,0.696,44,0.438,49,0.661,52,0.012,53,0.012,66,1.519,78,0.719,82,1.161,83,0.703,84,1.043,87,1.999,89,0.681,95,1.421,113,3.236,128,1.24,132,2.315,133,3.175,137,2.621,138,1.491,140,3.27,141,2.315,142,2.933,145,2.932,147,3.786,148,2.488,166,2.902,184,2.69,195,3.709,204,2.164,230,1.491,248,2.488,249,2.69,254,2.295,255,4.742,256,1.715,257,2.021,258,3.451,259,2.021,260,2.51,261,2.51,262,2.51,263,2.51,264,3.709,265,2.932,266,2.021,267,1.854,268,2.935,269,3.236,270,2.932,271,4.259,272,2.932,273,3.642,274,4.178,275,2.488,276,4.259,277,2.03,278,2.932,279,4.259,280,4.259,281,3.236,282,3.642,283,4.259,284,4.259,285,3.236,286,3.236,287,3.786,288,3.786,289,2.932,290,3.236,291,4.259,292,2.23,293,3.642,294,2.69,295,2.51,296,3.808,297,3.236,298,2.935,299,2.935,300,1.491,301,1.715,302,2.935,303,2.23,304,2.51]],["title/injectables/ContentConductorService.html",[70,0.906,140,1.88]],["body/injectables/ContentConductorService.html",[2,0.304,3,0.304,4,0.252,10,0.383,14,1.001,15,0.999,19,0.386,25,0.811,26,0.021,31,1.8,34,0.476,39,0.793,40,0.714,44,0.278,52,0.013,53,0.013,56,0.945,65,1.388,70,1.577,74,3.215,75,1.501,78,1.454,82,1.501,83,0.793,84,1.177,89,0.808,95,1.422,96,1.47,98,2.03,128,2.325,137,3.253,138,2.797,140,3.016,142,2.72,144,3.215,146,4.168,147,3.308,151,2.612,152,2.797,153,2.612,156,4.509,166,2.828,176,3.308,215,1.769,230,1.769,231,2.198,248,3.467,249,3.035,251,2.645,252,4.509,253,4.731,272,3.308,294,2.198,295,2.977,300,1.769,304,4.11,305,2.645,306,3.308,307,3.651,308,4.806,309,2.612,310,4.806,311,5.075,312,3.481,313,2.977,314,3.481,315,3.481,316,2.198,317,5.075,318,3.481,319,3.481,320,2.977,321,3.481,322,2.198,323,2.645,324,3.481,325,3.481,326,3.481]],["title/interfaces/ContentContainer.html",[0,0.143,152,1.88]],["body/interfaces/ContentContainer.html",[0,0.233,2,0.431,3,0.431,4,0.358,10,0.394,19,0.548,20,2.408,25,0.825,26,0.021,40,0.548,44,0.394,49,1.081,52,0.017,53,0.017,83,0.996,89,1.147,128,2.088,134,4.139,138,2.512,152,3.068,176,4.157,223,4.588,230,2.512,327,4.227,328,6.039,329,5.807,330,5.807,331,6.039]],["title/directives/ContentContainerDirective.html",[16,0.859,195,2.012]],["body/directives/ContentContainerDirective.html",[2,0.33,3,0.33,4,0.274,10,0.302,14,1.767,16,1.612,19,0.419,25,0.695,26,0.021,28,3.589,31,1.543,34,0.517,39,0.948,40,0.637,44,0.302,49,1.025,52,0.014,53,0.014,56,1,78,0.927,82,1.032,83,0.948,84,0.927,89,0.878,95,1.315,96,2.148,128,2.595,133,3.375,134,3.857,137,2.424,138,3.122,140,3.122,142,2.934,151,2.765,152,2.92,165,4.365,177,3.589,194,3.34,195,2.765,207,3.212,230,3.122,231,2.39,250,2.148,264,2.765,293,3.236,329,3.236,330,4.35,332,3.236,333,2.148,334,1.922,335,3.212,336,3.124,337,3.236,338,5.087,339,4.35,340,3.784,341,2.875,342,3.784,343,3.236,344,3.784]],["title/directives/ContentDirective.html",[16,0.859,264,2.012]],["body/directives/ContentDirective.html",[2,0.417,3,0.417,4,0.346,10,0.381,14,1.701,16,1.653,25,0.653,26,0.021,34,0.653,39,0.789,40,0.53,44,0.381,52,0.017,53,0.017,56,0.939,70,1.449,82,1.303,83,0.789,84,1.171,89,1.109,128,2.498,133,2.819,142,2.835,144,4.204,151,3.215,177,3.455,207,3.735,264,3.215,309,2.598,334,2.428,335,3.735,345,4.087,346,4.493,347,4.779,348,4.779]],["title/classes/DefaultContentConductorService.html",[34,0.506,288,2.548]],["body/classes/DefaultContentConductorService.html",[2,0.179,3,0.179,4,0.149,10,0.164,17,0.985,19,0.657,20,1.295,21,2.181,22,2.05,25,0.894,26,0.021,34,0.625,39,1.08,40,0.553,44,0.164,49,1.079,51,2.114,52,0.009,53,0.009,56,0.638,75,0.885,78,1.543,82,1.655,83,0.978,84,1.452,87,1.606,88,0.774,89,0.476,95,0.839,96,2.877,102,0.56,115,3.097,127,3.964,128,2.792,130,1.56,132,3.019,133,2.951,137,2.376,142,3.029,144,2.913,146,3.507,152,1.043,153,2.488,188,3.914,189,4.264,190,4.264,191,2.776,192,4.219,196,1.755,200,1.755,208,1.755,213,2.776,216,2.776,218,1.755,219,1.755,220,4.264,226,3.444,228,2.776,230,1.043,231,1.296,238,1.755,240,1.755,250,1.933,251,1.56,252,2.466,253,3.06,286,2.466,288,2.235,290,2.466,292,5.423,294,2.05,305,1.56,313,1.755,316,3.744,349,2.466,350,3.247,351,4.577,352,4.577,353,4.027,354,2.053,355,2.053,356,2.053,357,2.053,358,4.219,359,2.053,360,2.053,361,2.053,362,2.053,363,2.053,364,2.053,365,2.053,366,2.053,367,2.053,368,2.053,369,2.053,370,2.053,371,1.56,372,0.92,373,2.053,374,2.053,375,2.053,376,4.027,377,2.053,378,4.577,379,2.053,380,3.247,381,3.247,382,3.247,383,3.247,384,2.05,385,2.053,386,1.56,387,3.247,388,3.247,389,2.053,390,2.053,391,2.053,392,2.053,393,2.053,394,2.053,395,2.053,396,2.053,397,2.053,398,2.053,399,2.053,400,3.507,401,3.247,402,2.711,403,2.053,404,2.053,405,2.053,406,3.247,407,2.053,408,3.247,409,2.053,410,2.053,411,2.053,412,2.053,413,2.053,414,3.247,415,1.755,416,3.247]],["title/classes/DefaultDynamicAnimationsHandlerService.html",[34,0.506,417,2.548]],["body/classes/DefaultDynamicAnimationsHandlerService.html",[1,2.362,2,0.207,3,0.207,4,0.172,5,0.754,7,1.563,8,1.293,10,0.19,12,1.661,17,1.105,18,1.716,19,0.264,20,1.452,21,2.362,25,0.826,26,0.021,33,2.38,34,0.498,35,1.835,39,1.023,40,0.65,41,2.895,42,1.85,43,1.807,44,0.19,48,2.766,49,0.829,51,2.247,52,0.01,53,0.01,56,0.716,60,2.034,61,2.673,62,2.673,63,1.005,64,1.209,66,1.299,67,2.566,71,2.518,72,1.39,75,0.993,76,2.034,78,1.38,82,1.536,83,0.93,84,1.38,87,1.764,88,0.897,95,0.941,96,2.928,102,1.351,116,3.046,250,2.093,372,1.066,400,2.794,417,2.507,418,5.411,419,4.807,420,2.034,421,2.714,422,1.85,423,3.114,424,4.956,425,4.956,426,3.641,427,4.424,428,3.114,429,3.114,430,2.034,431,3.046,432,2.836,433,3.361,434,2.518,435,3.361,436,3.641,437,2.379,438,3.641,439,2.379,440,2.379,441,2.379,442,2.379,443,2.379,444,2.379,445,3.641,446,2.379,447,3.641,448,2.379,449,1.209,450,1.638,451,1.209,452,1.638,453,1.638,454,2.379,455,2.379,456,2.379,457,2.379,458,2.379,459,2.379,460,4.238,461,3.641,462,2.379,463,4.956,464,2.379,465,3.641,466,3.641,467,3.114,468,3.783,469,2.379,470,3.641,471,2.034,472,2.379,473,2.379,474,2.379,475,2.379,476,2.379,477,2.034,478,2.379,479,2.379]],["title/classes/DefaultDynamicComponentSerializer.html",[34,0.506,480,2.548]],["body/classes/DefaultDynamicComponentSerializer.html",[2,0.34,3,0.34,4,0.282,5,0.741,10,0.31,15,1.499,17,1.573,18,1.729,19,0.432,25,0.849,26,0.021,34,0.708,39,0.962,40,0.646,44,0.31,49,0.905,52,0.014,53,0.014,56,0.765,75,1.695,78,1.523,82,1.695,83,0.962,84,1.428,87,2.068,95,1.34,121,3.085,123,1.978,211,2.324,250,2.625,300,1.978,309,2.117,316,2.459,372,1.745,480,3.57,481,5.315,482,4.722,483,3.33,484,3.289,485,2.625,486,3.889,487,4.434,488,4.434,489,3.894,490,3.894,491,4.434,492,4.434,493,3.894,494,3.33,495,4.434,496,3.894,497,2.275,498,1.978,499,2.958,500,5.185,501,3.894,502,3.894]],["title/directives/DynamicAnimationsDirective.html",[16,0.859,422,1.88]],["body/directives/DynamicAnimationsDirective.html",[0,0.103,2,0.14,3,0.14,4,0.116,5,0.745,7,1.796,10,0.315,12,1.639,15,0.983,16,1.334,18,0.968,19,0.177,20,1.058,24,1.261,25,0.818,26,0.021,33,1.996,34,0.646,35,1.782,37,2.661,38,1.442,39,1.09,40,0.602,44,0.128,49,0.971,51,1.885,52,0.007,53,0.007,56,0.521,59,0.717,66,1.868,67,1.058,75,0.723,78,1.283,82,1.195,83,0.988,84,1.331,87,0.638,88,1.781,89,0.371,96,2.854,102,1.078,105,3.803,106,1.826,109,1.442,110,1.55,115,2.31,151,1.847,153,1.442,157,1.826,177,1.55,194,1.442,198,2.383,204,1.348,206,2.497,211,1.189,215,1.348,224,1.985,232,1.826,242,2.497,250,1.12,254,1,270,1.826,274,2.015,301,1.55,333,1.12,334,2.543,335,1.675,336,3.045,341,1.216,372,0.717,384,3.538,421,2.009,422,1.348,430,1.368,431,2.34,432,1.523,449,0.813,450,1.101,451,0.813,460,1.368,467,1.368,468,1.368,503,3.399,504,1.368,505,2.653,506,2.015,507,2.653,508,1.826,509,2.015,510,2.721,511,2.015,512,2.653,513,1.675,514,2.561,515,2.269,516,3.161,517,2.269,518,2.269,519,2.653,520,2.015,521,3.398,522,2.906,523,2.653,524,3.954,525,3.954,526,3.954,527,2.653,528,2.653,529,3.381,530,3.954,531,3.398,532,2.31,533,3.398,534,2.31,535,3.398,536,2.31,537,2.31,538,2.653,539,2.653,540,3.398,541,2.653,542,2.653,543,1.6,544,4.281,545,2.653,546,1.6,547,4.281,548,1.6,549,1.6,550,1.6,551,1.6,552,1.6,553,1.6,554,1.6,555,1.6,556,1.6,557,1.368,558,2.34,559,1.675,560,1.368,561,1.216,562,1.368,563,1.368,564,1.101,565,1.368,566,1.6,567,1.6,568,1.6,569,3.33,570,1.6,571,1.368,572,3.381,573,1.368,574,2.269,575,1.368,576,1.368,577,1.368,578,1.6,579,2.269,580,2.269,581,1.6,582,1.368,583,1.368,584,1.6,585,2.582,586,1.6,587,1.6,588,2.653,589,1.6,590,1.6,591,1.6,592,2.653,593,1.6,594,1.6,595,1.6,596,1.6,597,1.6,598,1.6,599,1.6,600,1.6,601,1.6,602,1.6,603,1.6,604,1.6,605,1.6,606,1.368,607,1.6,608,1.6,609,1.216,610,1.6]],["title/interfaces/DynamicAnimationsHandler.html",[0,0.143,421,1.88]],["body/interfaces/DynamicAnimationsHandler.html",[0,0.238,2,0.333,3,0.333,4,0.276,5,0.455,7,1.747,10,0.304,12,1.569,14,1.471,15,1.063,16,1.187,17,1.551,19,0.423,20,2.039,21,2.938,23,3.885,24,1.976,25,0.842,26,0.021,27,3.885,28,2.988,33,2.604,34,0.699,35,1.95,38,2.78,40,0.567,44,0.304,48,4.683,49,0.794,51,2.458,52,0.014,53,0.014,61,2.16,62,2.16,63,1.611,64,1.938,67,1.521,102,1.573,169,4.373,204,2.599,206,3.23,211,2.292,275,2.988,333,2.604,372,1.71,421,2.599,428,5.272,429,5.272,432,2.292,449,1.938,451,1.938,503,2.074,611,3.262,612,4.373,613,3.885,614,3.23,615,5.114,616,5.114,617,5.114,618,3.885,619,3.814]],["title/interfaces/DynamicAnimationsHandlerConstructor.html",[0,0.143,620,2.337]],["body/interfaces/DynamicAnimationsHandlerConstructor.html",[0,0.224,2,0.402,3,0.402,4,0.334,5,0.55,7,1.496,10,0.368,11,2.94,12,1.641,18,1.13,26,0.021,30,2.593,33,2.8,35,1.4,40,0.757,42,2.344,44,0.368,49,0.716,52,0.016,53,0.016,56,1.137,57,4.396,61,2.444,62,2.444,63,1.949,64,2.344,65,1.84,66,1.646,67,1.84,71,2.344,72,2.695,372,2.068,421,2.344,431,3.176,432,2.593,433,3.505,434,2.94,435,3.505,449,2.344,450,3.176,451,2.344,452,3.176,453,3.176,503,2.508,620,3.654,621,3.946,622,4.396,623,3.946,624,4.614]],["title/modules/DynamicAnimationsModule.html",[254,1.395,625,2.548]],["body/modules/DynamicAnimationsModule.html",[1,1.945,2,0.242,3,0.242,4,0.201,5,0.33,7,1.595,8,2.219,10,0.221,12,1.607,14,1.174,16,0.947,17,1.994,18,1.61,24,1.174,26,0.021,33,1.724,34,0.378,40,0.762,42,1.407,44,0.476,52,0.011,53,0.011,54,2.578,71,3.032,72,1.618,75,1.113,78,0.678,87,2.133,89,0.643,90,2.81,91,2.369,92,2.369,95,1.474,141,2.219,204,2.074,250,2.26,254,2.016,256,1.618,257,1.907,258,3.338,259,1.907,265,2.81,266,1.907,267,1.749,272,2.81,277,2.549,278,2.81,281,3.101,285,3.683,289,2.81,296,3.683,297,3.101,301,2.832,303,3.101,334,2.074,349,3.101,417,3.683,419,2.104,421,2.074,422,3.493,434,3.032,449,2.074,452,1.907,453,1.907,503,1.506,510,2.219,513,2.578,532,3.486,534,3.486,536,3.486,537,3.941,557,2.369,558,2.81,559,1.749,560,2.369,563,2.369,564,1.907,565,2.369,612,3.491,620,2.578,625,4.919,626,2.369,627,2.369,628,2.369,629,2.369,630,2.77,631,2.81,632,4.082,633,4.575,634,4.082,635,2.578,636,2.369,637,2.77,638,2.81,639,2.369,640,2.369,641,2.77,642,2.77,643,3.491,644,4.082]],["title/injectables/DynamicAnimationsService.html",[70,0.906,532,2.162]],["body/injectables/DynamicAnimationsService.html",[1,3.047,2,0.25,3,0.25,4,0.208,5,0.589,7,1.561,10,0.334,12,1.605,14,1.564,15,0.871,16,0.972,18,1.212,19,0.318,24,0.825,25,0.572,26,0.021,31,1.65,32,2.276,33,2.297,34,0.392,35,1.892,39,0.691,40,0.723,42,1.457,44,0.229,49,0.768,52,0.012,53,0.012,56,0.823,61,2.552,62,2.552,63,1.211,64,1.457,65,1.143,66,2.423,67,2.307,70,1.332,71,2.764,72,1.675,74,2.446,75,1.483,77,2.446,78,1.212,82,1.142,83,0.691,84,1.026,87,1.143,88,1.081,89,0.665,95,1.561,96,2.089,98,2.443,117,2.883,151,2.276,194,2.276,203,2.276,211,2.438,232,1.974,275,2.446,277,2.592,307,3.181,320,2.452,322,1.811,323,2.179,372,1.285,421,3.314,431,3.983,432,2.707,433,3.758,434,2.764,435,3.758,449,2.513,450,1.974,451,1.457,452,1.974,453,1.974,471,2.452,477,2.452,503,2.689,532,3.379,620,3.435,622,3.181,623,4.947,636,2.452,638,1.974,639,2.452,643,3.581,645,2.452,646,3.581,647,3.581,648,5.439,649,2.868,650,2.868,651,2.868,652,2.868,653,3.581,654,2.179,655,2.868,656,2.868,657,2.868,658,2.868]],["title/interfaces/DynamicComponentData.html",[0,0.143,659,2.337]],["body/interfaces/DynamicComponentData.html",[0,0.223,2,0.399,3,0.399,4,0.332,5,0.546,10,0.365,14,1.656,15,1.375,18,1.411,19,0.508,20,2.297,25,0.787,26,0.021,32,2.49,40,0.508,44,0.365,49,0.978,52,0.016,53,0.016,83,1.091,84,1.411,109,3.131,154,3.131,185,4.376,269,4.376,270,3.965,485,2.792,659,3.638,660,1.935,661,3.48,662,3.917,663,4.925,664,5.76,665,3.965,666,5.76,667,4.925,668,5.76,669,4.925,670,4.915,671,3.48,672,3.917]],["title/directives/DynamicComponentDirective.html",[16,0.859,673,2.162]],["body/directives/DynamicComponentDirective.html",[0,0.088,2,0.116,3,0.116,4,0.097,5,0.72,10,0.366,14,1.392,15,1.422,16,1.362,17,1.679,18,1.386,19,0.148,20,2.014,21,1.084,25,0.788,26,0.021,31,1.468,32,2.497,34,0.182,39,1.01,40,0.56,44,0.106,51,1.93,52,0.006,53,0.006,56,0.845,65,1.402,66,0.811,75,0.62,77,1.328,78,1.438,82,1.377,83,0.984,84,1.237,87,0.907,88,1.904,89,0.309,95,1.581,96,1.817,98,1.94,102,1.173,121,2.189,123,0.677,134,2.512,141,1.236,149,1.728,153,1.236,154,1.236,177,2.512,184,2.494,194,2.746,198,1.912,202,1.945,203,1.236,206,2.221,211,1.928,222,1.728,224,1.328,232,1.566,233,1.139,250,0.961,277,1.084,278,1.566,300,0.677,309,1.236,322,2.494,333,1.668,334,0.677,335,1.436,336,2.845,337,1.139,339,1.945,341,1.012,343,1.139,358,4.648,371,1.012,384,2.221,402,0.724,484,2.006,485,1.668,498,0.677,499,1.012,510,1.236,513,2.221,522,2.544,569,2.672,585,1.728,635,2.221,660,2.553,665,3.162,670,2.961,671,1.012,672,1.139,673,2.827,674,1.139,675,2.274,676,1.945,677,3.603,678,3.008,679,2.421,680,1.728,681,1.945,682,2.544,683,1.912,684,2.274,685,1.945,686,2.274,687,2.274,688,3.19,689,4.139,690,1.728,691,3.008,692,1.945,693,1.945,694,1.945,695,1.945,696,1.945,697,2.961,698,1.945,699,1.945,700,1.728,701,2.274,702,1.945,703,2.274,704,3.517,705,1.945,706,2.512,707,1.566,708,2.274,709,2.274,710,3.949,711,6.618,712,3.517,713,3.517,714,3.517,715,2.274,716,2.274,717,2.274,718,2.975,719,2.274,720,3.517,721,2.274,722,2.274,723,3.517,724,1.332,725,2.274,726,1.332,727,2.274,728,2.672,729,1.332,730,2.421,731,3.517,732,1.945,733,1.945,734,2.274,735,1.332,736,1.945,737,3,738,2.274,739,1.332,740,2.274,741,2.274,742,1.332,743,5.234,744,3.949,745,1.332,746,2.274,747,2.274,748,1.332,749,2.274,750,1.332,751,2.274,752,1.332,753,2.274,754,1.332,755,2.274,756,1.332,757,2.975,758,3.517,759,1.332,760,1.332,761,1.332,762,1.332,763,1.332,764,2.672,765,1.332,766,1.012,767,1.332,768,1.012,769,1.139,770,0.917,771,1.012,772,1.139,773,1.332,774,1.332,775,1.332,776,1.332,777,1.332,778,1.332,779,1.332,780,1.332,781,2.274,782,2.274,783,1.332,784,1.332,785,1.332,786,1.332,787,1.332,788,1.332,789,2.274,790,1.332,791,1.332,792,1.332,793,1.332,794,1.332,795,1.332,796,1.332,797,2.274,798,1.332,799,1.332,800,1.332,801,1.332,802,1.332,803,1.332,804,1.332,805,1.332,806,1.332,807,1.332,808,1.332,809,1.332,810,1.332,811,1.332,812,1.332,813,1.332,814,1.332,815,1.332,816,1.332,817,1.332,818,1.332,819,1.332,820,1.332]],["title/interfaces/DynamicComponentModel.html",[0,0.143,688,2.337]],["body/interfaces/DynamicComponentModel.html",[0,0.212,2,0.37,3,0.37,4,0.307,5,0.505,10,0.338,15,1.417,17,2.132,18,1.488,19,0.47,20,2.186,25,0.83,26,0.021,31,1.663,40,0.712,44,0.338,52,0.015,53,0.015,84,1.722,89,0.983,95,1.095,333,2.315,336,3.77,659,4.202,660,1.79,661,3.22,665,3.774,677,3.774,688,3.462,697,4.839,728,4.88,730,3.774,737,4.164,764,4.164,766,3.22,768,3.22,769,3.624,770,2.918,771,3.22,772,3.624,821,3.624,822,4.687,823,6.424,824,4.687,825,4.238]],["title/interfaces/DynamicComponentSerializer.html",[0,0.143,484,1.88]],["body/interfaces/DynamicComponentSerializer.html",[0,0.221,2,0.394,3,0.394,4,0.327,5,0.746,10,0.36,15,1.494,19,0.5,25,0.855,26,0.021,39,0.942,40,0.5,44,0.36,49,1.076,52,0.016,53,0.016,56,1.122,75,1.556,78,1.398,82,1.706,83,1.085,84,1.398,121,3.302,123,2.293,148,3.334,277,2.72,300,2.293,316,2.851,484,2.9,485,2.411,487,4.88,488,4.88,492,4.88,494,3.86,495,4.88,498,3.18,660,2.644,826,3.86,827,4.514,828,4.514,829,4.514]],["title/interfaces/DynamicComponentSerializerConstructor.html",[0,0.143,830,2.337]],["body/interfaces/DynamicComponentSerializerConstructor.html",[0,0.238,2,0.444,3,0.444,4,0.369,5,0.607,10,0.406,15,1.501,18,1.506,26,0.021,40,0.681,44,0.406,52,0.017,53,0.017,56,1.208,125,4.232,372,2.282,484,2.587,485,2.897,486,2.974,497,2.974,498,2.587,499,3.868,660,2.15,830,3.883,831,4.353,832,5.091,833,5.091]],["title/interfaces/DynamicComponentSerializerMap.html",[0,0.143,486,2.162]],["body/interfaces/DynamicComponentSerializerMap.html",[0,0.229,2,0.417,3,0.417,4,0.346,5,0.57,10,0.381,11,3.005,15,1.434,19,0.53,20,2.358,25,0.808,26,0.021,30,2.651,34,0.808,40,0.53,44,0.381,49,0.918,52,0.017,53,0.017,83,0.976,102,1.916,121,2.277,123,2.428,131,3.018,148,3.455,277,2.819,300,2.428,485,2.835,486,3.455,497,2.792,660,2.019,706,3.455,834,5.74,835,5.74]],["title/injectables/DynamicComponentSerializerService.html",[70,0.906,683,2.012]],["body/injectables/DynamicComponentSerializerService.html",[2,0.343,3,0.343,4,0.285,5,0.698,10,0.314,15,1.515,18,1.635,19,0.436,25,0.713,26,0.021,31,1.584,34,0.538,39,0.862,40,0.74,44,0.314,49,0.811,52,0.015,53,0.015,56,1.026,65,2.337,70,1.529,75,1.424,78,1.279,82,1.424,83,1.072,84,1.279,89,0.913,96,1.662,102,1.598,121,1.875,123,1.999,300,1.999,322,3.298,372,2.34,402,2.139,485,2.636,486,3.05,491,3.365,497,3.05,498,2.978,660,2.475,683,2.838,830,3.942,834,3.365,835,3.365,836,3.365,837,4.465,838,3.935,839,3.935,840,5.221,841,5.221,842,3.942,843,3.935,844,2.709,845,3.365,846,3.365,847,3.935,848,3.935,849,3.935,850,3.935,851,3.935,852,3.935]],["title/interfaces/DynamicComponentsMap.html",[0,0.143,842,2.337]],["body/interfaces/DynamicComponentsMap.html",[0,0.237,2,0.442,3,0.442,4,0.367,5,0.73,10,0.404,15,1.499,19,0.561,26,0.02,39,0.836,40,0.561,44,0.404,49,1.023,52,0.017,53,0.017,56,1.204,83,1.011,102,1.671,121,3.14,123,2.573,131,3.198,135,4.33,300,2.573,497,3.58,660,2.588,842,3.87,853,5.063,854,5.063]],["title/modules/DynamicComponentsModule.html",[254,1.395,855,2.548]],["body/modules/DynamicComponentsModule.html",[2,0.285,3,0.285,4,0.237,5,0.39,10,0.261,14,1.324,15,1.486,16,1.069,17,1.968,18,1.671,26,0.021,31,1.397,34,0.728,40,0.734,44,0.504,49,0.715,52,0.013,53,0.013,75,1.255,78,0.802,83,0.76,87,2.124,89,0.76,95,1.377,102,1.255,184,2.908,203,2.503,204,2.34,250,2.668,254,2.178,256,1.913,257,2.254,258,3.667,259,2.254,265,3.17,266,2.254,267,2.068,277,2.194,285,4.047,287,3.17,289,3.17,296,4.047,297,3.498,301,1.913,303,2.487,306,3.17,336,2.503,349,3.498,480,3.979,482,2.487,484,2.34,485,1.383,498,2.706,509,3.498,635,2.908,646,3.938,660,1.383,673,4.128,677,3.17,683,3.433,706,2.69,770,3.17,830,2.908,844,3.17,845,2.8,846,2.8,855,4.698,856,2.8,857,2.8,858,2.8,859,2.8,860,3.274,861,4.605,862,4.605,863,4.605,864,2.8,865,3.274,866,3.274,867,4.605]],["title/directives/LeaveDirective.html",[16,0.859,537,2.162]],["body/directives/LeaveDirective.html",[2,0.28,3,0.28,4,0.232,5,0.628,10,0.256,12,1.61,16,1.402,18,1.664,19,0.355,24,1.305,25,0.62,26,0.021,34,0.438,35,1.597,36,2.866,37,2.306,39,0.945,40,0.503,44,0.42,49,0.818,51,1.809,52,0.013,53,0.013,59,1.437,66,1.618,67,1.279,75,1.237,78,1.111,82,0.874,83,0.529,84,0.785,87,1.279,88,1.71,89,0.744,95,0.829,98,2.224,211,2.566,215,2.306,224,2.651,275,2.651,277,2.162,287,3.124,301,2.651,307,3.447,333,1.354,334,1.629,335,2.866,400,3.326,402,1.743,422,2.306,508,2.208,510,2.467,514,3.849,516,3.962,537,2.651,613,3.447,614,4.417,653,3.88,654,3.447,669,3.88,707,3.124,868,2.208,869,4.766,870,6.589,871,4.538,872,4.538,873,4.538,874,4.538,875,4.538,876,4.538,877,3.88,878,3.447,879,4.538,880,4.538,881,4.538,882,4.538,883,5.726,884,4.538,885,5.266,886,3.207,887,4.538,888,3.207,889,3.207,890,3.207,891,3.207,892,3.88,893,2.742,894,2.742,895,2.742,896,2.742]],["title/injectables/NgStateService.html",[70,0.906,536,2.162]],["body/injectables/NgStateService.html",[2,0.379,3,0.379,4,0.315,5,0.733,7,1.44,10,0.444,12,1.009,19,0.482,25,0.594,26,0.021,30,2.497,34,0.594,39,0.919,40,0.682,44,0.347,52,0.016,53,0.016,56,1.209,59,1.948,62,2.946,63,1.836,64,2.208,70,1.506,75,1.519,78,1.506,82,1.185,83,0.717,84,1.065,89,1.009,95,1.44,98,1.836,102,1.185,198,3.028,334,3.295,536,3.255,544,5.867,564,4.233,897,4.233,898,3.716,899,5.867,900,5.571,901,4.346,902,5.571,903,4.346,904,4.346,905,4.346,906,4.346]],["title/injectables/NgTransitionService.html",[70,0.906,534,2.162]],["body/injectables/NgTransitionService.html",[2,0.254,3,0.254,4,0.211,5,0.652,7,1.093,10,0.398,12,0.675,17,1.283,19,0.322,25,0.578,26,0.021,30,1.896,34,0.397,35,2.143,39,0.823,40,0.645,44,0.232,49,0.451,52,0.012,53,0.012,56,0.98,59,1.303,61,2.764,63,1.228,64,1.477,70,1.221,75,1.153,78,1.487,82,1.153,83,0.698,84,1.036,89,0.675,95,1.289,96,2.312,98,1.787,114,3.214,116,2.002,198,2.976,400,1.836,402,3.406,534,2.471,547,6.041,558,2.912,559,3.458,561,2.209,562,2.486,606,2.486,631,2.912,897,3.769,899,5.49,907,2.486,908,2.912,909,4.23,910,4.23,911,2.908,912,4.23,913,2.908,914,3.617,915,4.23,916,2.908,917,4.23,918,4.23,919,4.159,920,4.23,921,4.23,922,2.486,923,2.908,924,2.908,925,2.908,926,2.908,927,2.908,928,2.908,929,4.23,930,2.908,931,2.908,932,2.908,933,2.908,934,2.908,935,2.908,936,2.908,937,4.23,938,4.23,939,4.23,940,4.23,941,4.23,942,2.908,943,2.908,944,2.908,945,2.908,946,2.908,947,2.908,948,2.908,949,2.908,950,2.908,951,2.908,952,2.908,953,2.908,954,2.908,955,2.908,956,2.908,957,4.23,958,2.908,959,2.908,960,2.908,961,4.23,962,2.908]],["title/interfaces/StateCSSMap.html",[0,0.143,432,1.659]],["body/interfaces/StateCSSMap.html",[0,0.237,2,0.44,3,0.44,4,0.366,5,0.729,7,1.581,10,0.403,12,1.527,19,0.56,26,0.019,33,2.959,34,0.899,35,1.856,37,2.566,38,3.325,39,0.833,44,0.403,45,3.477,49,1.022,52,0.017,53,0.017,65,2.014,66,1.801,102,1.377,112,3.836,131,3.189,215,2.566,432,2.742,451,3.108,963,4.212,964,5.05,965,3.836,966,5.05,967,5.05]],["title/interfaces/StateCSSMapper.html",[0,0.143,41,2.162]],["body/interfaces/StateCSSMapper.html",[0,0.21,2,0.364,3,0.364,4,0.302,5,0.497,7,1.711,10,0.333,11,2.12,14,1.56,19,0.462,20,2.163,21,3.043,24,2.014,25,0.873,26,0.021,27,4.122,28,3.17,30,1.87,33,2.991,34,0.944,39,1.12,41,3.17,42,2.12,44,0.333,45,2.872,49,0.648,51,2.404,52,0.015,53,0.015,77,3.73,83,0.688,95,1.558,102,1.137,215,3.559,242,4.286,432,3.041,963,2.872,968,3.567,969,5.461,970,4.64,971,4.172]],["title/injectables/StateCssMapperService.html",[70,0.906,434,1.88]],["body/injectables/StateCssMapperService.html",[2,0.283,3,0.283,4,0.236,5,0.687,7,1.797,10,0.423,19,0.36,21,1.549,25,0.725,26,0.021,31,1.748,33,3.054,34,0.919,38,3.132,39,1.002,40,0.588,41,3.1,42,2.927,43,2.47,44,0.259,45,3.155,49,0.711,52,0.013,53,0.013,56,0.639,66,2.358,70,1.3,74,2.677,75,1.249,77,3.681,78,1.411,82,1.447,83,0.876,84,1.3,89,0.754,95,1.184,98,2.434,102,1.833,143,3.918,203,2.491,215,2.696,242,2.053,275,2.677,277,2.184,309,1.767,372,1.457,400,2.053,432,3.142,434,2.328,451,1.652,511,3.481,963,3.966,969,2.78,970,3.918,972,2.78,973,4.582,974,4.582,975,3.251,976,5.761,977,3.251,978,4.582,979,4.582,980,3.251,981,3.251,982,3.251,983,3.918,984,3.251,985,3.251,986,4.582,987,3.251,988,3.251,989,3.251,990,3.251,991,3.251,992,3.251]],["title/coverage.html",[993,4.285]],["body/coverage.html",[0,0.27,1,1.19,4,0.181,5,0.869,6,3.121,7,1.587,8,2.477,9,2.135,12,1.487,15,1.444,16,1.266,18,1.245,24,0.718,25,0.341,26,0.021,33,2.425,34,0.694,41,1.458,42,1.919,52,0.011,53,0.011,54,1.577,55,2.135,61,1.054,62,1.054,63,1.595,65,0.995,70,1.461,71,1.268,72,1.458,73,2.135,90,1.719,101,2.87,121,1.19,122,2.135,123,1.268,124,2.87,127,1.719,128,2.655,129,2.135,130,1.897,131,3.209,137,1.19,138,2.917,139,2.135,140,1.268,142,1.595,152,1.268,166,2.421,195,1.357,223,1.897,230,1.919,248,1.458,249,2.386,264,1.357,288,1.719,292,2.87,294,1.577,305,2.87,327,2.135,332,2.135,345,2.135,415,2.135,417,1.719,418,3.23,419,1.897,420,2.135,421,1.268,422,1.268,432,1.119,434,1.268,449,2.315,451,1.268,480,1.719,481,2.135,482,1.897,483,2.135,484,1.268,485,1.595,486,1.458,497,2.207,498,2.582,503,2.967,504,2.135,516,2.386,532,1.458,534,1.458,536,1.458,537,1.458,559,1.577,564,1.719,611,2.135,620,1.577,621,2.135,633,2.135,638,1.719,640,2.135,645,2.135,659,1.577,660,2.655,661,1.897,662,2.135,673,1.458,674,2.135,683,1.357,688,1.577,766,1.897,821,2.135,826,2.135,830,1.577,831,2.135,836,2.135,842,1.577,844,1.719,868,3.137,897,2.601,898,2.135,907,2.135,963,3.137,968,2.135,972,2.135,993,2.135,994,2.135,995,2.496,996,7.018,997,6.855,998,2.135,999,4.362,1000,2.496,1001,5.458,1002,5.458,1003,5.741,1004,5.741,1005,2.496,1006,2.496,1007,2.496,1008,2.496,1009,2.496,1010,2.135,1011,2.496,1012,2.496,1013,2.496,1014,2.496,1015,2.496,1016,3.777,1017,2.135,1018,2.496,1019,2.496,1020,2.135,1021,3.23,1022,2.135,1023,2.135,1024,2.496,1025,2.135,1026,3.777,1027,3.777,1028,3.777,1029,3.777,1030,2.135,1031,2.496,1032,2.496,1033,2.496,1034,2.496]],["title/dependencies.html",[256,2.594,1035,3.11]],["body/dependencies.html",[18,1.271,26,0.021,52,0.017,53,0.017,59,2.326,89,1.204,256,3.032,371,3.943,864,4.438,1036,7.354,1037,5.19,1038,5.19,1039,5.19,1040,6.219,1041,5.318,1042,5.19,1043,5.19,1044,5.19,1045,5.19,1046,5.19,1047,5.19,1048,5.19]],["title/miscellaneous/enumerations.html",[1049,1.58,1050,3.797]],["body/miscellaneous/enumerations.html",[5,0.729,7,1.305,12,1.42,14,1.452,19,0.56,26,0.019,35,1.532,51,2.439,52,0.017,53,0.017,88,2.74,125,3.477,510,3.325,514,3.574,559,3.864,561,4.648,609,4.648,897,4.212,919,3.836,922,5.231,1049,2.566,1050,4.318,1051,6.118,1052,6.118,1053,6.118,1054,5.05,1055,5.05,1056,5.05,1057,5.05,1058,4.318,1059,5.05,1060,4.318]],["title/miscellaneous/functions.html",[24,1.277,1049,1.58]],["body/miscellaneous/functions.html",[5,0.647,10,0.433,12,1.26,19,0.602,24,1.837,25,0.742,26,0.019,35,1.647,52,0.018,53,0.018,82,1.481,83,0.896,84,1.33,333,2.294,514,3.173,614,4.287,868,3.739,869,4.126,892,4.644,896,4.644,1025,5.464,1049,2.759,1061,4.644]],["title/index.html",[19,0.345,110,1.817,1062,2.659]],["body/index.html",[12,1.118,15,1.437,16,1.496,17,1.461,18,1.649,24,1.385,26,0.017,31,1.461,36,3.041,52,0.017,53,0.017,110,2.813,132,2.618,141,2.618,142,2.034,166,2.295,177,3.472,273,4.118,290,3.659,323,3.659,333,2.034,423,4.118,510,2.618,558,4.091,707,3.315,914,5.755,1063,4.816,1064,4.816,1065,5.943,1066,4.816,1067,4.816,1068,4.118,1069,6.445,1070,4.816,1071,4.118,1072,4.118,1073,4.118,1074,4.816,1075,4.118,1076,4.816,1077,4.816,1078,4.816,1079,5.943,1080,4.816,1081,5.943,1082,4.816,1083,4.816,1084,4.816,1085,5.943,1086,4.816,1087,4.816,1088,4.816]],["title/license.html",[110,1.817,1062,2.659,1089,2.659]],["body/license.html",[4,0.329,14,1.649,17,1.379,26,0.016,52,0.016,53,0.016,117,3.13,150,4.356,267,2.871,386,3.454,518,3.888,654,4.771,690,3.454,919,3.454,994,3.888,1068,3.888,1072,3.888,1089,3.888,1090,4.547,1091,6.28,1092,4.547,1093,4.547,1094,5.733,1095,4.547,1096,4.547,1097,3.888,1098,4.547,1099,5.733,1100,4.547,1101,6.594,1102,7.193,1103,4.547,1104,5.733,1105,4.547,1106,5.37,1107,4.547,1108,4.547,1109,4.547,1110,4.547,1111,4.547,1112,4.547,1113,4.547,1114,4.547,1115,4.547,1116,4.547,1117,3.888,1118,3.888,1119,5.733,1120,5.733,1121,4.547,1122,4.547,1123,5.733,1124,4.547,1125,4.547,1126,4.547,1127,4.547,1128,3.888,1129,4.547,1130,4.547,1131,4.547,1132,4.547,1133,4.547,1134,4.547,1135,4.547,1136,4.547,1137,4.547,1138,4.547,1139,4.547,1140,4.547,1141,4.547]],["title/modules.html",[254,1.889]],["body/modules.html",[26,0.018,52,0.018,53,0.018,254,2.102,255,3.839,625,3.839,631,4.725,855,3.839,1041,5.869,1142,6.863,1143,6.863]],["title/overview.html",[1144,4.285]],["body/overview.html",[0,0.157,16,0.941,17,1.23,26,0.021,34,0.554,44,0.323,52,0.015,53,0.015,70,0.993,71,3.022,140,3.022,195,3.73,254,2.007,255,4.894,256,2.368,257,2.791,258,2.791,259,2.791,260,3.467,261,3.467,262,3.467,263,3.467,264,3.73,265,3.666,266,2.791,267,2.56,422,3.487,434,3.022,532,3.474,534,3.474,536,3.474,537,4.009,625,5.083,626,3.467,627,3.467,628,3.467,629,3.467,673,4.009,683,3.233,855,4.724,856,3.467,857,3.467,858,3.467,859,3.467,1075,3.467,1144,3.467,1145,4.054,1146,4.054,1147,4.054,1148,4.054]],["title/miscellaneous/typealiases.html",[1049,1.58,1149,4.44]],["body/miscellaneous/typealiases.html",[5,0.748,19,0.504,20,2.629,24,1.307,25,0.996,26,0.016,52,0.016,53,0.016,88,2.161,95,1.482,102,1.712,108,5.273,180,3.888,204,2.31,316,4.293,333,2.422,386,4.356,670,4.323,671,3.454,679,3.13,697,4.323,728,4.771,730,3.13,736,4.903,768,3.454,771,3.454,1049,2.31,1071,4.903,1150,4.547,1151,4.547,1152,5.733,1153,4.547,1154,5.733,1155,6.28,1156,4.547,1157,6.594,1158,4.547,1159,5.733,1160,6.28,1161,4.547,1162,4.547,1163,4.547,1164,4.547,1165,5.733,1166,4.547,1167,4.547]],["title/miscellaneous/variables.html",[999,3.373,1049,1.58]],["body/miscellaneous/variables.html",[5,0.77,6,2.104,7,1.603,8,2.104,11,1.966,12,1.599,13,2.664,14,1.113,15,1.289,19,0.429,25,0.706,26,0.021,30,1.734,34,0.529,35,1.174,51,1.543,52,0.014,53,0.014,56,1.015,57,3.923,65,2.472,67,1.543,70,1.265,87,2.65,88,2.505,90,4.001,98,1.634,109,2.807,128,1.634,138,1.966,166,2.77,248,2.261,249,2.444,250,1.634,286,4.711,294,3.67,449,1.966,485,1.634,498,1.966,503,2.104,514,2.261,516,4.197,614,3.261,618,2.94,622,2.94,638,4.001,660,1.634,706,2.261,844,4.001,868,2.664,869,2.94,893,3.309,894,3.309,895,3.309,998,4.416,999,2.94,1010,4.416,1017,4.416,1020,3.309,1021,4.97,1022,3.309,1023,4.416,1030,4.416,1049,2.953,1061,3.309,1168,3.87,1169,3.87,1170,3.87,1171,5.164,1172,3.87,1173,3.87,1174,3.87,1175,3.87,1176,3.87,1177,3.87,1178,3.87,1179,3.87,1180,3.87]],["title/additional-documentation/content-conductor.html",[142,1.133,166,1.278,1181,2.037,1182,2.037]],["body/additional-documentation/content-conductor.html",[14,1.652,15,1.058,16,1.18,17,1.743,19,0.419,21,1.803,22,2.39,24,1.088,26,0.019,28,2.21,31,1.945,32,2.057,39,0.624,49,0.892,52,0.014,53,0.014,56,0.744,66,1.349,70,0.927,75,1.567,78,0.927,83,0.948,88,1.426,132,3.667,133,3.469,134,2.21,137,2.928,140,2.584,142,2.897,144,3.357,146,3.881,147,3.956,148,2.21,149,2.875,153,2.057,154,3.34,157,2.605,159,3.236,160,3.236,161,3.236,162,3.236,163,3.236,165,2.875,166,3.215,170,4.35,171,3.236,172,3.236,173,3.236,174,3.236,192,4.365,194,2.057,195,2.765,198,2.057,203,2.057,204,1.922,206,3.212,207,2.39,211,2.873,212,3.236,222,3.864,224,2.971,225,4.35,254,1.426,264,2.057,272,2.605,275,2.21,278,2.605,306,2.605,309,2.057,311,3.236,346,2.875,402,2.765,511,2.875,706,2.21,733,3.236,908,2.605,1073,3.236,1097,3.236,1183,5.087,1184,3.784,1185,3.784,1186,2.875,1187,3.784,1188,3.784,1189,3.784,1190,3.784,1191,3.784,1192,3.784,1193,3.784,1194,3.784,1195,3.784,1196,3.784,1197,3.236]],["title/additional-documentation/dynamic-animations.html",[12,0.622,18,0.657,1181,2.037,1182,2.037]],["body/additional-documentation/dynamic-animations.html",[1,1.352,7,1.829,12,1.713,14,1.656,15,1.251,16,1.443,17,0.861,18,1.562,22,1.792,23,2.155,24,0.816,25,0.388,26,0.018,28,2.872,35,2.033,36,3.105,37,2.75,39,0.993,49,0.645,51,1.96,52,0.012,53,0.016,58,2.155,59,1.272,66,2.054,67,1.657,88,2.171,106,2.86,109,1.542,125,2.86,133,1.98,141,1.542,145,3.965,150,2.155,154,1.542,156,2.155,157,1.953,176,1.953,194,2.259,198,1.542,211,1.272,215,1.442,224,1.657,242,3.105,250,1.755,254,1.069,269,3.156,270,1.953,281,2.155,287,1.953,301,3.365,306,1.953,317,2.426,333,1.755,334,1.442,336,2.259,384,3.105,422,2.498,506,3.735,508,3.726,509,3.156,510,3.271,513,1.792,514,3.725,515,2.426,516,3.418,517,2.426,520,4.111,569,2.155,571,2.426,572,4.628,573,2.426,574,3.553,575,2.426,576,2.426,577,2.426,579,2.426,580,2.426,582,2.426,583,2.426,585,2.155,609,3.156,613,2.155,614,3.105,618,3.735,631,4.143,635,1.792,647,2.426,679,3.726,680,2.155,700,3.156,702,2.426,707,1.953,877,2.426,878,2.155,908,1.953,965,2.155,983,2.426,1058,2.426,1060,2.426,1106,3.553,1117,2.426,1118,2.426,1186,2.155,1198,2.837,1199,4.155,1200,2.837,1201,2.837,1202,2.837,1203,2.837,1204,2.837,1205,2.837,1206,5.76,1207,4.155,1208,2.837,1209,4.155,1210,4.155,1211,2.837,1212,2.837,1213,2.837,1214,2.837,1215,4.155,1216,4.155,1217,2.837,1218,2.837,1219,2.837,1220,2.837,1221,2.837,1222,2.837,1223,2.837,1224,2.837,1225,2.837,1226,2.837,1227,2.837,1228,2.837,1229,2.837,1230,2.837,1231,2.837,1232,2.837,1233,2.837,1234,2.837,1235,2.837,1236,2.837,1237,2.837,1238,2.837,1239,2.837,1240,2.837,1241,2.837,1242,2.837,1243,2.837,1244,2.837,1245,2.426]],["title/additional-documentation/dynamic-components.html",[15,0.558,18,0.657,1181,2.037,1182,2.037]],["body/additional-documentation/dynamic-components.html",[0,0.162,14,1.796,15,1.492,16,1.264,17,1.652,18,1.481,24,1.207,25,0.393,26,0.021,30,1.289,31,1.834,32,2.693,34,0.791,38,2.693,39,0.693,49,0.939,52,0.014,53,0.012,56,0.565,65,1.976,70,0.705,74,1.68,75,1.351,83,1.056,88,2.183,102,1.144,115,1.68,141,1.564,145,1.98,148,1.68,151,1.564,153,2.281,154,3.149,184,3.819,203,2.961,211,2.221,254,1.084,274,3.188,282,2.46,289,1.98,309,1.564,322,1.817,333,1.215,336,3.287,346,3.188,358,2.185,384,2.65,402,2.281,484,2.132,485,2.637,506,2.185,508,1.98,513,3.129,520,2.185,529,2.46,635,3.129,659,3.129,663,4.658,665,3.411,667,4.658,670,2.889,673,3.384,676,2.46,677,4.299,678,2.46,679,2.889,680,2.185,681,2.46,682,2.46,683,2.281,685,2.46,688,3.658,689,5.171,690,2.185,691,3.589,692,2.46,693,2.46,694,2.46,695,2.46,696,4.658,697,1.98,698,2.46,699,2.46,700,2.185,705,2.46,706,3.384,730,1.98,732,2.46,737,4.594,764,2.185,770,3.411,822,2.46,824,2.46,837,3.589,842,1.817,878,2.185,908,1.98,965,3.188,1128,2.46,1186,2.185,1197,2.46,1245,2.46,1246,4.955,1247,2.876,1248,2.876,1249,2.876,1250,2.876,1251,2.876,1252,2.876,1253,2.876,1254,2.876,1255,4.197,1256,2.876,1257,2.876,1258,4.197,1259,2.876,1260,2.876,1261,2.876,1262,5.447,1263,2.876,1264,2.876,1265,4.197,1266,2.876,1267,2.876,1268,4.197,1269,2.876,1270,4.197,1271,2.876,1272,2.876,1273,2.876,1274,2.876,1275,2.876,1276,2.876,1277,2.876,1278,2.876,1279,2.876]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["0",{"_index":415,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["0m",{"_index":895,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":186,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["1/1",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["10/16",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["14/19",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":1148,"title":{},"body":{"overview.html":{}}}],["2",{"_index":187,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["2.5.4",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1092,"title":{},"body":{"license.html":{}}}],["25",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1075,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3/4",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1147,"title":{},"body":{"overview.html":{}}}],["4/14",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1145,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["500m",{"_index":877,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["6",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["6.1.1",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":1088,"title":{},"body":{"index.html":{}}}],["6.2.2",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1146,"title":{},"body":{"overview.html":{}}}],["73",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["abil",{"_index":908,"title":{},"body":{"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["abov",{"_index":1118,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["abstract",{"_index":280,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["accessor",{"_index":341,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["act",{"_index":57,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":1137,"title":{},"body":{"license.html":{}}}],["actual",{"_index":287,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["ad",{"_index":511,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["add",{"_index":242,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["addit",{"_index":1181,"title":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}},"body":{}}],["again",{"_index":181,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["alias",{"_index":1150,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alllow",{"_index":861,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["allow",{"_index":141,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["amount",{"_index":872,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["analog",{"_index":507,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["and/or",{"_index":1112,"title":{},"body":{"license.html":{}}}],["angular",{"_index":510,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["angular'",{"_index":279,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["angular/anim",{"_index":59,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"dependencies.html":{},"additional-documentation/dynamic-animations.html":{}}}],["angular/common",{"_index":864,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":89,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":12,"title":{"additional-documentation/dynamic-animations.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animation'",{"_index":882,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animation.t",{"_index":1023,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animation/leav",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationbuild",{"_index":58,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animationbuilder):animationstatemachin",{"_index":69,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{}}}],["animationmetadata",{"_index":105,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["animations(anim",{"_index":593,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.direct",{"_index":642,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animations.directive.t",{"_index":504,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"coverage.html":{}}}],["animations.directive.ts:100",{"_index":541,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:108",{"_index":554,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:109",{"_index":552,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:115",{"_index":539,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:128",{"_index":546,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:132",{"_index":543,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:140",{"_index":538,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:154",{"_index":549,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:167",{"_index":548,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:91",{"_index":551,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:92",{"_index":550,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:93",{"_index":553,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.foreach(anim",{"_index":594,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.module.t",{"_index":630,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animations.servic",{"_index":557,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["animations.service.t",{"_index":645,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["animations.service.ts:30",{"_index":650,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["animations.service.ts:55",{"_index":652,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["animations/anim",{"_index":6,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/default",{"_index":418,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"coverage.html":{}}}],["animations/dynam",{"_index":503,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/leav",{"_index":1020,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/leave/leave.directive.t",{"_index":868,"title":{},"body":{"directives/LeaveDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["animations/leave/leave.directive.ts:22",{"_index":886,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animations/leave/leave.directive.ts:24",{"_index":888,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animations/ng",{"_index":897,"title":{},"body":{"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["animations/st",{"_index":963,"title":{},"body":{"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["animations:[dvkleav",{"_index":566,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationshandl",{"_index":524,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationshandlerconstructor",{"_index":643,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["animationsstatemachin",{"_index":424,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["animationsstatemachineconstructor",{"_index":644,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animationstatemachin",{"_index":1,"title":{"interfaces/AnimationStateMachine.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animationstatemachineconstructor",{"_index":54,"title":{"interfaces/AnimationStateMachineConstructor.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["animationstatemachineconstructortoken",{"_index":90,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationstatemetadata",{"_index":544,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgStateService.html":{}}}],["animationstatemetadata).styl",{"_index":600,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationstatesbuild",{"_index":435,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["animationstatesservic",{"_index":71,"title":{"injectables/AnimationStatesService.html":{}},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"overview.html":{}}}],["animationstatesservice#createanimationstatemachin",{"_index":94,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["animationstatesservice):dynamicanimationshandl",{"_index":624,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{}}}],["animationstylemetadata",{"_index":103,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["animationstylesmap",{"_index":62,"title":{"interfaces/AnimationStylesMap.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"coverage.html":{}}}],["animationtransitionmetadata",{"_index":547,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["animationtransitionmetadata).anim",{"_index":599,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationtransitionsmap",{"_index":61,"title":{"interfaces/AnimationTransitionsMap.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["anoth",{"_index":225,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["appli",{"_index":38,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-components.html":{}}}],["applic",{"_index":1081,"title":{},"body":{"index.html":{}}}],["aris",{"_index":1140,"title":{},"body":{"license.html":{}}}],["around",{"_index":176,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"additional-documentation/dynamic-animations.html":{}}}],["array",{"_index":198,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["arrow",{"_index":1270,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["assign",{"_index":276,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["associ",{"_index":1103,"title":{},"body":{"license.html":{}}}],["async",{"_index":681,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["attach",{"_index":194,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["attachinputstream",{"_index":715,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachinputstreams(stream",{"_index":727,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachoutputcallback",{"_index":716,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachoutputcallbacks(callback",{"_index":734,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachview",{"_index":188,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachview(contain",{"_index":191,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachview(container:str",{"_index":244,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["attachviews(contain",{"_index":196,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachviews(container:str",{"_index":246,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["author",{"_index":1068,"title":{},"body":{"index.html":{},"license.html":{}}}],["automat",{"_index":647,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["avail",{"_index":1185,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["back",{"_index":180,"title":{},"body":{"interfaces/ContentConductor.html":{},"miscellaneous/typealiases.html":{}}}],["background",{"_index":579,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["base",{"_index":275,"title":{},"body":{"modules/ContentConductorModule.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["bbdynamiccomponentdirective2}",{"_index":749,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["be",{"_index":112,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/StateCSSMap.html":{}}}],["befor",{"_index":965,"title":{},"body":{"interfaces/StateCSSMap.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["below",{"_index":1218,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["between",{"_index":148,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["bind",{"_index":1233,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["bootstrap",{"_index":259,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["both",{"_index":157,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["bound",{"_index":520,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["brows",{"_index":1143,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1041,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bug",{"_index":1225,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["build",{"_index":914,"title":{},"body":{"injectables/NgTransitionService.html":{},"index.html":{}}}],["buildanimationtransit",{"_index":909,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["buildanimationtransitions(transit",{"_index":912,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["builder",{"_index":68,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{}}}],["c",{"_index":386,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["call",{"_index":204,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/content-conductor.html":{}}}],["callback",{"_index":737,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["callbacks.model",{"_index":772,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{}}}],["callbacks.model.t",{"_index":1159,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["callbacks/output",{"_index":771,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["callbacks[cb](ev",{"_index":813,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["capabl",{"_index":423,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"index.html":{}}}],["card",{"_index":1213,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["case",{"_index":668,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["caus",{"_index":540,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["ccservic",{"_index":165,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/ContentContainerDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["chanc",{"_index":1240,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["chang",{"_index":384,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["charg",{"_index":1098,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1133,"title":{},"body":{"license.html":{}}}],["class",{"_index":34,"title":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["clean",{"_index":202,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{}}}],["cli",{"_index":1085,"title":{},"body":{"index.html":{}}}],["click",{"_index":695,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["close",{"_index":569,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["closeallsubscript",{"_index":717,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["closeallsubscriptions(subscript",{"_index":738,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["closed';th",{"_index":1229,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["closur",{"_index":970,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["cluster_contentconductormodul",{"_index":260,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_declar",{"_index":261,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_export",{"_index":262,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_provid",{"_index":263,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodul",{"_index":626,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_declar",{"_index":627,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_export",{"_index":628,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_provid",{"_index":629,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodul",{"_index":856,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_declar",{"_index":857,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_export",{"_index":858,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_provid",{"_index":859,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["code",{"_index":876,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["collect",{"_index":617,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["color",{"_index":580,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["combin",{"_index":822,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["come",{"_index":1077,"title":{},"body":{"index.html":{}}}],["command",{"_index":1079,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":863,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["compil",{"_index":323,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"index.html":{}}}],["complet",{"_index":966,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["complex",{"_index":1220,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["compmodel",{"_index":753,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["compon",{"_index":15,"title":{"additional-documentation/dynamic-components.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["component'",{"_index":272,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"additional-documentation/content-conductor.html":{}}}],["component.direct",{"_index":865,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["component.directive.t",{"_index":674,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"coverage.html":{}}}],["component.directive.ts:104",{"_index":725,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:106",{"_index":724,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:112",{"_index":752,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:139",{"_index":748,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:152",{"_index":745,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:164",{"_index":756,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:183",{"_index":729,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:206",{"_index":735,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:223",{"_index":750,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:237",{"_index":739,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:247",{"_index":754,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:89",{"_index":759,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:90",{"_index":760,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:91",{"_index":761,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:97",{"_index":726,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentconstructor",{"_index":121,"title":{"interfaces/ComponentConstructor.html":{}},"body":{"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["componentconstructor):str",{"_index":829,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["componentfactoryresolv",{"_index":723,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentmodel",{"_index":762,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentmodel(compmodel",{"_index":774,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentnam",{"_index":494,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["componentref",{"_index":758,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["components.module.t",{"_index":860,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["components/compon",{"_index":122,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"coverage.html":{}}}],["components/default",{"_index":481,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"coverage.html":{}}}],["components/dynam",{"_index":660,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/initi",{"_index":1162,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["components/input",{"_index":1163,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["components/output",{"_index":1166,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["compref",{"_index":712,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["concept",{"_index":1209,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["condent",{"_index":1183,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["condit",{"_index":1117,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["conductor",{"_index":166,"title":{"additional-documentation/content-conductor.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["conductor.model",{"_index":251,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["conductor.model.t",{"_index":139,"title":{},"body":{"interfaces/ContentConductor.html":{},"coverage.html":{}}}],["conductor.model.ts:101",{"_index":221,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:114",{"_index":209,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:126",{"_index":229,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:136",{"_index":214,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:144",{"_index":193,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:152",{"_index":197,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:84",{"_index":217,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:90",{"_index":201,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.module.t",{"_index":268,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["conductor.servic",{"_index":293,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{}}}],["conductor.service.t",{"_index":305,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["conductor.service.ts:106",{"_index":365,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:117",{"_index":362,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:12",{"_index":355,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:122",{"_index":361,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:19",{"_index":356,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:20",{"_index":360,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:21",{"_index":357,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:22",{"_index":359,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:23",{"_index":313,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:25",{"_index":368,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:33",{"_index":366,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:36",{"_index":315,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["conductor.service.ts:58",{"_index":363,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:76",{"_index":369,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:85",{"_index":364,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:91",{"_index":370,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor/cont",{"_index":138,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conductor/contain",{"_index":129,"title":{},"body":{"interfaces/ContainersMap.html":{},"coverage.html":{}}}],["conductor/content/content.directive.t",{"_index":345,"title":{},"body":{"directives/ContentDirective.html":{},"coverage.html":{}}}],["conductor/content/content.directive.ts:13",{"_index":348,"title":{},"body":{"directives/ContentDirective.html":{}}}],["conductor/default",{"_index":292,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["conductorconstructor",{"_index":304,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{}}}],["conductorservic",{"_index":310,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["configur",{"_index":881,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["conform",{"_index":291,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["connect",{"_index":1141,"title":{},"body":{"license.html":{}}}],["consist",{"_index":1260,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["console.error(`${compmodel.nam",{"_index":778,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["console.error(`${express",{"_index":957,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["console.log('dynam",{"_index":694,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["const",{"_index":402,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constant",{"_index":1243,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["constrain",{"_index":1165,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constraint",{"_index":1207,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["construct",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constructor(animationshandlerconstructor",{"_index":649,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["constructor(build",{"_index":79,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["constructor(conductorconstructor",{"_index":312,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["constructor(containersquerylist",{"_index":354,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["constructor(el",{"_index":430,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["constructor(priv",{"_index":309,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constructor(protect",{"_index":776,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["constructor(rendererfactori",{"_index":975,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["constructor(serializerconstructor",{"_index":838,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["constructor(serializermap",{"_index":489,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["constructor(templateref",{"_index":347,"title":{},"body":{"directives/ContentDirective.html":{}}}],["constructor(vcref",{"_index":337,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["constructor.model",{"_index":300,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{}}}],["constructor.model.t",{"_index":124,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductorConstructor.html":{},"coverage.html":{}}}],["constructor.token",{"_index":295,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{}}}],["constructor.token.t",{"_index":998,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor/compon",{"_index":123,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["constructor/cont",{"_index":249,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consum",{"_index":1202,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["contain",{"_index":133,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["container.direct",{"_index":299,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["container.directive.t",{"_index":332,"title":{},"body":{"directives/ContentContainerDirective.html":{},"coverage.html":{}}}],["container.directive.ts:24",{"_index":340,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["container.directive.ts:29",{"_index":338,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["container.model",{"_index":231,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{}}}],["container.model.t",{"_index":327,"title":{},"body":{"interfaces/ContentContainer.html":{},"coverage.html":{}}}],["container.viewcontain",{"_index":375,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["container/cont",{"_index":230,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["container:str",{"_index":240,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["containernam",{"_index":329,"title":{},"body":{"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{}}}],["containers.reduce((map,contain",{"_index":373,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["containersmap",{"_index":127,"title":{"interfaces/ContainersMap.html":{}},"body":{"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["containersquerylist",{"_index":252,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["containerssub",{"_index":351,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["content",{"_index":142,"title":{"additional-documentation/content-conductor.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["content/content.direct",{"_index":298,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["contentchildren(contentdirect",{"_index":159,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["contentconductor",{"_index":137,"title":{"interfaces/ContentConductor.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"additional-documentation/content-conductor.html":{}}}],["contentconductorconstructor",{"_index":248,"title":{"interfaces/ContentConductorConstructor.html":{}},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentconductorconstructortoken",{"_index":294,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentconductormodul",{"_index":255,"title":{"modules/ContentConductorModule.html":{}},"body":{"modules/ContentConductorModule.html":{},"modules.html":{},"overview.html":{}}}],["contentconductorservic",{"_index":140,"title":{"injectables/ContentConductorService.html":{}},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentcontain",{"_index":152,"title":{"interfaces/ContentContainer.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["contentcontainerdirect",{"_index":195,"title":{"directives/ContentContainerDirective.html":{}},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentcontainerdirective}'",{"_index":236,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["contentdirect",{"_index":264,"title":{"directives/ContentDirective.html":{}},"body":{"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentsquerylist",{"_index":253,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["contentssub",{"_index":352,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["context",{"_index":1268,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["contract",{"_index":1138,"title":{},"body":{"license.html":{}}}],["control",{"_index":155,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["convert",{"_index":899,"title":{},"body":{"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{}}}],["copi",{"_index":1101,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1091,"title":{},"body":{"license.html":{}}}],["core",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["correctli",{"_index":324,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["coverag",{"_index":993,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":31,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"injectables/StateCssMapperService.html":{},"index.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["create(injector",{"_index":795,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createanimationshandl",{"_index":648,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["createanimationshandler(el",{"_index":651,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["createanimationstatemachin",{"_index":76,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createanimationstatemachine(el",{"_index":85,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["createanimationstatemachine]{@link",{"_index":93,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["createcompon",{"_index":718,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createcomponent(constructor",{"_index":742,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createcontentconductor",{"_index":311,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["createcontentconductor(containersquerylist",{"_index":314,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["createcontentconductor(this.contain",{"_index":173,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["createcssmapp",{"_index":426,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createcssmapper(map",{"_index":438,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createembeddedview(templ",{"_index":393,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["createinjector",{"_index":719,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createinjector(provid",{"_index":747,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createseri",{"_index":837,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-components.html":{}}}],["createserializer(map",{"_index":841,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["createstatecssmapp",{"_index":973,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["createstatecssmapper(el",{"_index":979,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["createstatecssmapper(this.element,this.cssmap",{"_index":478,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createstatemachin",{"_index":427,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createstatemachine(transit",{"_index":440,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["css",{"_index":33,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["cssmap",{"_index":431,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["cssmapper",{"_index":425,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["cssmapperservic",{"_index":433,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["current",{"_index":36,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"directives/LeaveDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["currentst",{"_index":1228,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["custom",{"_index":289,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["da",{"_index":523,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["damag",{"_index":1134,"title":{},"body":{"license.html":{}}}],["daservic",{"_index":531,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["data",{"_index":663,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-components.html":{}}}],["data.model",{"_index":825,"title":{},"body":{"interfaces/DynamicComponentModel.html":{}}}],["data.model.t",{"_index":662,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"coverage.html":{}}}],["data/dynam",{"_index":661,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["dc",{"_index":710,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["dcsservic",{"_index":1253,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["deal",{"_index":1104,"title":{},"body":{"license.html":{}}}],["dec",{"_index":1059,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declar",{"_index":258,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["decor",{"_index":1200,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["decrement",{"_index":1060,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["default",{"_index":87,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["defaultanimationsstatemachin",{"_index":633,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["defaultcontentconductorservic",{"_index":288,"title":{"classes/DefaultContentConductorService.html":{}},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["defaultdynamicanimationshandlerservic",{"_index":417,"title":{"classes/DefaultDynamicAnimationsHandlerService.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["defaultdynamiccomponentseri",{"_index":480,"title":{"classes/DefaultDynamicComponentSerializer.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["defin",{"_index":39,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["definin",{"_index":1230,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["definit",{"_index":125,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["demo",{"_index":1083,"title":{},"body":{"index.html":{}}}],["depend",{"_index":256,"title":{"dependencies.html":{}},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descend",{"_index":161,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["describ",{"_index":612,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{}}}],["descript",{"_index":10,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{}}}],["deseri",{"_index":780,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["deserializemap",{"_index":834,"title":{},"body":{"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["deserializemap.get(componentnam",{"_index":501,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["design",{"_index":1257,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["desir",{"_index":635,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["destin",{"_index":227,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["destroy",{"_index":21,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["destroy():void",{"_index":235,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["destroycomp",{"_index":720,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["detach",{"_index":210,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["detachedview",{"_index":412,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["detachview",{"_index":189,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detachview(contain",{"_index":208,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detachviews(contain",{"_index":213,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detail",{"_index":308,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["detect",{"_index":678,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["develop",{"_index":707,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["differ",{"_index":350,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["direct",{"_index":16,"title":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["directive'",{"_index":205,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["display",{"_index":207,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["dispos",{"_index":1275,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["distinct",{"_index":1277,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["distinctuntilchang",{"_index":731,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["distribut",{"_index":1110,"title":{},"body":{"license.html":{}}}],["document",{"_index":994,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":284,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["dsservic",{"_index":684,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["due",{"_index":1238,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["dure",{"_index":1186,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["dvk",{"_index":177,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"index.html":{}}}],["dvkdemo",{"_index":1080,"title":{},"body":{"index.html":{}}}],["dvkleav",{"_index":516,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["dvkleavetim",{"_index":1025,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dvkleavetiming(tim",{"_index":892,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{}}}],["dynam",{"_index":18,"title":{"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamicanimationsdirect",{"_index":422,"title":{"directives/DynamicAnimationsDirective.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-animations.html":{}}}],["dynamicanimationshandl",{"_index":421,"title":{"interfaces/DynamicAnimationsHandler.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["dynamicanimationshandlerconstructor",{"_index":620,"title":{"interfaces/DynamicAnimationsHandlerConstructor.html":{}},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["dynamicanimationshandlerconstructortoken",{"_index":638,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamicanimationsmodul",{"_index":625,"title":{"modules/DynamicAnimationsModule.html":{}},"body":{"modules/DynamicAnimationsModule.html":{},"modules.html":{},"overview.html":{}}}],["dynamicanimationsservic",{"_index":532,"title":{"injectables/DynamicAnimationsService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicanimationsservice#createanimationshandl",{"_index":656,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["dynamiccomponentdata",{"_index":659,"title":{"interfaces/DynamicComponentData.html":{}},"body":{"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentdirect",{"_index":673,"title":{"directives/DynamicComponentDirective.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentmodel",{"_index":688,"title":{"interfaces/DynamicComponentModel.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentseri",{"_index":484,"title":{"interfaces/DynamicComponentSerializer.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentserializerconstructor",{"_index":830,"title":{"interfaces/DynamicComponentSerializerConstructor.html":{}},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["dynamiccomponentserializerconstructortoken",{"_index":844,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamiccomponentserializermap",{"_index":486,"title":{"interfaces/DynamicComponentSerializerMap.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"coverage.html":{}}}],["dynamiccomponentserializermap):dynamiccomponentseri",{"_index":833,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["dynamiccomponentserializerservic",{"_index":683,"title":{"injectables/DynamicComponentSerializerService.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentsmap",{"_index":842,"title":{"interfaces/DynamicComponentsMap.html":{}},"body":{"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentsmodul",{"_index":855,"title":{"modules/DynamicComponentsModule.html":{}},"body":{"modules/DynamicComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["e",{"_index":692,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["each",{"_index":113,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{}}}],["element",{"_index":66,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["elementref",{"_index":530,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["emit",{"_index":1276,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["emitt",{"_index":1247,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["empti",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":1073,"title":{},"body":{"index.html":{},"additional-documentation/content-conductor.html":{}}}],["enough",{"_index":1242,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["enter",{"_index":609,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["entir",{"_index":1263,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["entri",{"_index":921,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["enumer",{"_index":1050,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1082,"title":{},"body":{"index.html":{}}}],["even",{"_index":318,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["event",{"_index":1130,"title":{},"body":{"license.html":{}}}],["eventemitt",{"_index":764,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["eventemitter}",{"_index":736,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{}}}],["eventu",{"_index":880,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["exampl",{"_index":151,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"additional-documentation/dynamic-components.html":{}}}],["except",{"_index":1204,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["execut",{"_index":805,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"overview.html":{}}}],["exportas:'dynamiccomp2",{"_index":773,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["expos",{"_index":1201,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["express",{"_index":919,"title":{},"body":{"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["expression.length",{"_index":961,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expression.split(ngtransitionsymbols.to",{"_index":937,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expressions.split(',').foreach(express",{"_index":935,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["extend",{"_index":824,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["fact",{"_index":1239,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["fail",{"_index":655,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["featur",{"_index":1069,"title":{},"body":{"index.html":{}}}],["feed",{"_index":709,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["few",{"_index":1203,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["field",{"_index":1262,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"license.html":{}}}],["find",{"_index":1222,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["finish",{"_index":512,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["fire",{"_index":806,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["first",{"_index":1245,"title":{},"body":{"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["fit",{"_index":1127,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1116,"title":{},"body":{"license.html":{}}}],["for(let",{"_index":408,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["form",{"_index":143,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/StateCssMapperService.html":{}}}],["format",{"_index":1198,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["forroot",{"_index":285,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["forroot(conductorconstructor",{"_index":302,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["found",{"_index":779,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["free",{"_index":1097,"title":{},"body":{"license.html":{},"additional-documentation/content-conductor.html":{}}}],["fromresolvedprovid",{"_index":790,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["fromstat",{"_index":114,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"injectables/NgTransitionService.html":{}}}],["fulli",{"_index":1210,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["function",{"_index":24,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["furnish",{"_index":1115,"title":{},"body":{"license.html":{}}}],["futur",{"_index":1244,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["garbag",{"_index":616,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["gener",{"_index":1087,"title":{},"body":{"index.html":{}}}],["get",{"_index":1062,"title":{"index.html":{},"license.html":{}},"body":{}}],["getcompon",{"_index":487,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getcomponent(componentnam",{"_index":492,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getcssclass",{"_index":974,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getcssclass(st",{"_index":981,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getcssclass(state:str",{"_index":984,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getnam",{"_index":488,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getname(componentconstructor",{"_index":495,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getviewcontain",{"_index":342,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["given",{"_index":77,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["goal",{"_index":1066,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1096,"title":{},"body":{"license.html":{}}}],["green",{"_index":581,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["handl",{"_index":277,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/StateCssMapperService.html":{}}}],["handler",{"_index":622,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"miscellaneous/variables.html":{}}}],["handler.constructor",{"_index":636,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.constructor.t",{"_index":621,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"coverage.html":{}}}],["handler.model",{"_index":450,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.model.t",{"_index":611,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"coverage.html":{}}}],["handler.servic",{"_index":637,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["handler.service.t",{"_index":420,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:16",{"_index":437,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:17",{"_index":436,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:32",{"_index":448,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:36",{"_index":444,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:48",{"_index":446,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:52",{"_index":442,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:60",{"_index":441,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:83",{"_index":439,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.token",{"_index":639,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.token.t",{"_index":1017,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler/default",{"_index":419,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["handler/dynam",{"_index":449,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hard",{"_index":875,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["held",{"_index":29,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["here",{"_index":1267,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["herebi",{"_index":1095,"title":{},"body":{"license.html":{}}}],["holder",{"_index":1131,"title":{},"body":{"license.html":{}}}],["hook",{"_index":1246,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["hostbind",{"_index":885,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["hostbinding(\"@dvkleav",{"_index":889,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["html",{"_index":233,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{}}}],["i=0",{"_index":409,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["identifi",{"_index":223,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentContainer.html":{},"coverage.html":{}}}],["if(!sub.clos",{"_index":819,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(callback",{"_index":807,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(expression.includes(ngtransitionsymbols.dec",{"_index":958,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.eith",{"_index":936,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.ent",{"_index":949,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.inc",{"_index":956,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.leav",{"_index":952,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.to",{"_index":946,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(initialcontain",{"_index":390,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(stream",{"_index":800,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(subscript",{"_index":817,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(this.animationshandl",{"_index":591,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.animationsstatemachin",{"_index":461,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.containerssub",{"_index":394,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(this.contentssub",{"_index":397,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(this.cssmap",{"_index":474,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.cssmapp",{"_index":475,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.isstring(express",{"_index":934,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(this.istransition(anim",{"_index":595,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.myst",{"_index":587,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.st",{"_index":459,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.transit",{"_index":469,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["ignor",{"_index":959,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["implement",{"_index":250,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["implementor",{"_index":158,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["impli",{"_index":1125,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}}}],["inc",{"_index":1057,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["includ",{"_index":1106,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["increment",{"_index":1058,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["individu",{"_index":918,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["init",{"_index":22,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["init(initialcontain",{"_index":216,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["initi",{"_index":32,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["initialcontain",{"_index":218,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["initializecompon",{"_index":721,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initializecomponent(compmodel",{"_index":751,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initializedvalu",{"_index":1261,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["initialst",{"_index":623,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["initialvalu",{"_index":670,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["initvalu",{"_index":757,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initvalues[input",{"_index":798,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["inject",{"_index":70,"title":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["inject(animationstatemachineconstructortoken",{"_index":97,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["inject(contentconductorconstructortoken",{"_index":325,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["inject(dynamicanimationshandlerconstructortoken",{"_index":657,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["inject(dynamiccomponentserializerconstructortoken",{"_index":847,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["injectiontoken('animationstatemachineconstructortoken",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('containersconductorconstructortoken",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dynamicanimationshandlerconstructortoken",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dynamiccomponentserializerconstructortoken",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":743,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["inner",{"_index":111,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["input",{"_index":336,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["input('dvk",{"_index":343,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["inputstream",{"_index":728,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["inputsubscript",{"_index":713,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["insid",{"_index":154,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["instal",{"_index":1076,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":706,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["instanti",{"_index":184,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["instead",{"_index":281,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"additional-documentation/dynamic-animations.html":{}}}],["intention",{"_index":701,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/ContentContainer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"interfaces/ContentContainer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["intern",{"_index":703,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["isstat",{"_index":527,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["isstate(metadata",{"_index":542,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["isstring(express",{"_index":960,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["istransit",{"_index":528,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["istransition(metadata",{"_index":545,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["it'",{"_index":212,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["itself",{"_index":1227,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["js",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":1241,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["key",{"_index":108,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"miscellaneous/typealiases.html":{}}}],["keys.model.t",{"_index":1157,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["kind",{"_index":1124,"title":{},"body":{"license.html":{}}}],["kit",{"_index":1064,"title":{},"body":{"index.html":{}}}],["last",{"_index":896,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{}}}],["later",{"_index":1252,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["leav",{"_index":514,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["leave/leave.direct",{"_index":563,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["leavedirect",{"_index":537,"title":{"directives/LeaveDirective.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"overview.html":{}}}],["leavetim",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":257,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["length",{"_index":406,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["level",{"_index":107,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["liabil",{"_index":1135,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1132,"title":{},"body":{"license.html":{}}}],["librari",{"_index":1065,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1089,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycl",{"_index":675,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["limit",{"_index":150,"title":{},"body":{"interfaces/ContentConductor.html":{},"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["link",{"_index":95,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/typealiases.html":{}}}],["list",{"_index":317,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["liter",{"_index":119,"title":{},"body":{"interfaces/AnimationTransitionsMap.html":{}}}],["locat",{"_index":237,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["long",{"_index":878,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["look",{"_index":983,"title":{},"body":{"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["machin",{"_index":13,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"miscellaneous/variables.html":{}}}],["machine.constructor",{"_index":92,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{}}}],["machine.constructor.t",{"_index":55,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"coverage.html":{}}}],["machine.model",{"_index":60,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["machine.model.t",{"_index":9,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"coverage.html":{}}}],["machine.servic",{"_index":641,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["machine.service.t",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["machine.token",{"_index":91,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{}}}],["machine.token.t",{"_index":1010,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["machine/anim",{"_index":8,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["machine/default",{"_index":640,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["made",{"_index":702,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["main",{"_index":505,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["manag",{"_index":1279,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["manual",{"_index":282,"title":{},"body":{"modules/ContentConductorModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["map",{"_index":102,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"injectables/NgStateService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["map(cb",{"_index":810,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["map.model",{"_index":372,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/StateCssMapperService.html":{}}}],["map.model.t",{"_index":131,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{}}}],["map.model.ts:18",{"_index":967,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["map.model.ts:6",{"_index":135,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/DynamicComponentsMap.html":{}}}],["map/contain",{"_index":130,"title":{},"body":{"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["map/dynam",{"_index":497,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["map/stat",{"_index":451,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["map[container.containernam",{"_index":374,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["map[entri",{"_index":991,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["map[nam",{"_index":851,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["map[stat",{"_index":985,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["map[state.nam",{"_index":905,"title":{},"body":{"injectables/NgStateService.html":{}}}],["mapcontain",{"_index":353,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["mapcontainers(contain",{"_index":367,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["mapper",{"_index":46,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["mapper.model",{"_index":43,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/StateCssMapperService.html":{}}}],["mapper.model.t",{"_index":968,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"coverage.html":{}}}],["mapper.servic",{"_index":453,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["mapper.service.t",{"_index":972,"title":{},"body":{"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["mapper.service.ts:11",{"_index":977,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper.service.ts:22",{"_index":982,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper.service.ts:32",{"_index":980,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper/st",{"_index":42,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["mark",{"_index":733,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["match",{"_index":53,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["matter",{"_index":669,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/LeaveDirective.html":{}}}],["member",{"_index":506,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["merchant",{"_index":1126,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1108,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":334,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["method",{"_index":75,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["miscellan",{"_index":1049,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1090,"title":{},"body":{"license.html":{}}}],["model",{"_index":665,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["model.model",{"_index":767,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["model.model.t",{"_index":821,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["model/dynam",{"_index":766,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["modifi",{"_index":1072,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":254,"title":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"modules.html":{}},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["modulewithprovid",{"_index":297,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["moment",{"_index":1215,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["more",{"_index":1219,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["mouseev",{"_index":693,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["move",{"_index":147,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["movetoon",{"_index":182,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["movetotwo",{"_index":178,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["moveview",{"_index":190,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["moveview(previouscontain",{"_index":219,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["moveviews(previouscontain",{"_index":228,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["multipl",{"_index":149,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["myaniamt",{"_index":570,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mycompon",{"_index":567,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mycssmap",{"_index":584,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mystat",{"_index":568,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["name",{"_index":83,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["name:str",{"_index":136,"title":{},"body":{"interfaces/ContainersMap.html":{}}}],["necessari",{"_index":270,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-animations.html":{}}}],["need",{"_index":873,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["new",{"_index":65,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["new(...args):ani",{"_index":126,"title":{},"body":{"interfaces/ComponentConstructor.html":{}}}],["new(serializermap",{"_index":832,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["newtransit",{"_index":925,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["newtransitions[fromstate][tost",{"_index":931,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["next",{"_index":23,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/DynamicAnimationsHandler.html":{},"additional-documentation/dynamic-animations.html":{}}}],["nextcontain",{"_index":220,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["nextcontainer:str",{"_index":238,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["nextstat",{"_index":48,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["nextstate(tost",{"_index":443,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["nextstate(tostate:str",{"_index":458,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["ng",{"_index":558,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":170,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["ngmodul",{"_index":296,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["ngondestroy",{"_index":206,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["ngoninit",{"_index":529,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["ngrx",{"_index":1249,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["ngstateservic",{"_index":536,"title":{"injectables/NgStateService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgStateService.html":{},"coverage.html":{},"overview.html":{}}}],["ngtransitionservic",{"_index":534,"title":{"injectables/NgTransitionService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"overview.html":{}}}],["ngtransitionst",{"_index":561,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{}}}],["ngtransitionstates.void",{"_index":606,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.void]:transition.anim",{"_index":955,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.wildcard",{"_index":953,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.wildcard]:transition.anim",{"_index":951,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionsymbol",{"_index":922,"title":{},"body":{"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{}}}],["noninfring",{"_index":1129,"title":{},"body":{"license.html":{}}}],["normal",{"_index":509,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{}}}],["note",{"_index":700,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["noth",{"_index":871,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["notic",{"_index":1119,"title":{},"body":{"license.html":{}}}],["nottypedkey",{"_index":1155,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["now",{"_index":1273,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["null",{"_index":400,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}}}],["number",{"_index":115,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["number):viewref",{"_index":241,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["number):void",{"_index":239,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["numbercompon",{"_index":1255,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["numer",{"_index":1231,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["object",{"_index":30,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["object.keys(callback",{"_index":809,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["object.keys(initvalues).map",{"_index":796,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["object.keys(map).foreach(entry=>renderer.removeclass(el",{"_index":990,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["object.keys(map).foreach(nam",{"_index":848,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["object.keys(newtransitions).foreach(fromst",{"_index":927,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["object.keys(newtransitions[fromstate]).foreach(tost",{"_index":928,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["object.keys(streams).map(input",{"_index":802,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["observ",{"_index":730,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["observable}",{"_index":799,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["obtain",{"_index":1100,"title":{},"body":{"license.html":{}}}],["occur",{"_index":118,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["offer",{"_index":1074,"title":{},"body":{"index.html":{}}}],["old",{"_index":964,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["on",{"_index":224,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["onc",{"_index":167,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["onclick",{"_index":691,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["ondestroy",{"_index":522,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["oninit",{"_index":521,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["open",{"_index":585,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["open';th",{"_index":1236,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["oper",{"_index":732,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["option",{"_index":84,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":306,"title":{},"body":{"injectables/ContentConductorService.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["origin",{"_index":574,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["otherwis",{"_index":518,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"license.html":{}}}],["out",{"_index":267,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":770,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["outputcallback",{"_index":697,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["outputsubscript",{"_index":714,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["outsid",{"_index":1223,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["overriden",{"_index":349,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["overview",{"_index":1144,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1035,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1182,"title":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}},"body":{}}],["param",{"_index":98,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/variables.html":{}}}],["paramet",{"_index":82,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{}}}],["pars",{"_index":917,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["parsest",{"_index":900,"title":{},"body":{"injectables/NgStateService.html":{}}}],["parsestates(st",{"_index":902,"title":{},"body":{"injectables/NgStateService.html":{}}}],["parsetransitionexpress",{"_index":910,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["parsetransitionexpression(transit",{"_index":915,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["part",{"_index":269,"title":{},"body":{"modules/ContentConductorModule.html":{},"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-animations.html":{}}}],["partial",{"_index":1237,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["particular",{"_index":117,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"injectables/DynamicAnimationsService.html":{},"license.html":{}}}],["pass",{"_index":513,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["permiss",{"_index":1094,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1114,"title":{},"body":{"license.html":{}}}],["person",{"_index":1099,"title":{},"body":{"license.html":{}}}],["piec",{"_index":1197,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["pipe",{"_index":682,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["plan",{"_index":1232,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["play",{"_index":37,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"additional-documentation/dynamic-animations.html":{}}}],["pleas",{"_index":1216,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["point",{"_index":708,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["portion",{"_index":1122,"title":{},"body":{"license.html":{}}}],["potenti",{"_index":741,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["predefin",{"_index":1054,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["preserv",{"_index":1271,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["previouscontain",{"_index":226,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["privat",{"_index":96,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgTransitionService.html":{}}}],["project",{"_index":1086,"title":{},"body":{"index.html":{}}}],["projects/.../anim",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../cont",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dynam",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../initi",{"_index":1151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../input",{"_index":1153,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../leav",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../leave.directive.t",{"_index":1061,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../ng",{"_index":1051,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../not",{"_index":1156,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../output",{"_index":1158,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../typ",{"_index":1161,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/common/not",{"_index":1164,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/common/typ",{"_index":1167,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/cont",{"_index":128,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/dvk/src/lib/dynam",{"_index":5,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properli",{"_index":1274,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["properti",{"_index":20,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentContainer.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/typealiases.html":{}}}],["protect",{"_index":711,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["provid",{"_index":17,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"injectables/NgTransitionService.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["pseudo",{"_index":1021,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":883,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["publish",{"_index":1109,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1128,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-components.html":{}}}],["put",{"_index":185,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/DynamicComponentData.html":{}}}],["queri",{"_index":156,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["querylist",{"_index":146,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["querylist;inject",{"_index":164,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["read",{"_index":160,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["readi",{"_index":168,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["readonli",{"_index":331,"title":{},"body":{"interfaces/ContentContainer.html":{}}}],["recogn",{"_index":1205,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["red",{"_index":583,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["refer",{"_index":28,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"directives/ContentContainerDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMapper.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["referenc",{"_index":1184,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["reflectiveinjector",{"_index":744,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["reflectiveinjector.resolve(provid",{"_index":791,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["releas",{"_index":27,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMapper.html":{}}}],["remov",{"_index":215,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["removeal",{"_index":969,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["render",{"_index":986,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.addclass(element,this.getcssclass(state,map",{"_index":989,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.destroy",{"_index":992,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.removeclass(element,this.getcssclass(state,map",{"_index":988,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["rendererfactori",{"_index":978,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["rendererfactory2",{"_index":976,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["report",{"_index":1226,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["repres",{"_index":109,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductorConstructor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicComponentData.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["request",{"_index":746,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["requir",{"_index":320,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["reset",{"_index":266,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["resolv",{"_index":322,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-components.html":{}}}],["resolvecomponentfactory(constructor",{"_index":794,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["resourc",{"_index":1195,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["respect",{"_index":634,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["restrict",{"_index":1105,"title":{},"body":{"license.html":{}}}],["result",{"_index":52,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["return",{"_index":78,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["reus",{"_index":705,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["rich",{"_index":1070,"title":{},"body":{"index.html":{}}}],["right",{"_index":1107,"title":{},"body":{"license.html":{}}}],["run",{"_index":613,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["runtim",{"_index":632,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["rxj",{"_index":371,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":765,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["safe",{"_index":1264,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["same",{"_index":679,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["scaley(0.0",{"_index":576,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["scaley(1.0",{"_index":573,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["section",{"_index":1217,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["see",{"_index":307,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{}}}],["selector",{"_index":335,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{}}}],["sell",{"_index":1113,"title":{},"body":{"license.html":{}}}],["separ",{"_index":666,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["seri",{"_index":615,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["serial",{"_index":485,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["serializ",{"_index":1258,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["serializednam",{"_index":853,"title":{},"body":{"interfaces/DynamicComponentsMap.html":{}}}],["serializedname:str",{"_index":854,"title":{},"body":{"interfaces/DynamicComponentsMap.html":{}}}],["serializemap",{"_index":835,"title":{},"body":{"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializemap.get(componentconstructor",{"_index":502,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.constructor",{"_index":846,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{}}}],["serializer.constructor.t",{"_index":831,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{},"coverage.html":{}}}],["serializer.model",{"_index":499,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["serializer.model.t",{"_index":826,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{},"coverage.html":{}}}],["serializer.model.ts:7",{"_index":827,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["serializer.model.ts:8",{"_index":828,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["serializer.servic",{"_index":866,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["serializer.service.t",{"_index":836,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"coverage.html":{}}}],["serializer.service.ts:13",{"_index":839,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.service.ts:20",{"_index":843,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.t",{"_index":483,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"coverage.html":{}}}],["serializer.token",{"_index":845,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{}}}],["serializer.token.t",{"_index":1030,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializer.ts:10",{"_index":490,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.ts:14",{"_index":493,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.ts:19",{"_index":496,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer/default",{"_index":482,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["serializer/dynam",{"_index":498,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializerconstructor",{"_index":840,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializerconstrutor",{"_index":867,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["serializermap",{"_index":491,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializermap.deserializemap.set(nam",{"_index":850,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializermap.serializemap.set(map[nam",{"_index":849,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serialz",{"_index":704,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["serveangular",{"_index":1084,"title":{},"body":{"index.html":{}}}],["server",{"_index":1251,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["servic",{"_index":74,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-components.html":{}}}],["set",{"_index":333,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["setanim",{"_index":428,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["setanimations(anim",{"_index":556,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["setanimations(transit",{"_index":445,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["setcomponentmodel(compmodel",{"_index":763,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setcssmap",{"_index":429,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["setcssmap(map",{"_index":447,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["setinitialvalu",{"_index":722,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setinitialvalues(initvalu",{"_index":755,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setleavetim",{"_index":884,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["setleavetiming(tim",{"_index":887,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["setstate(st",{"_index":555,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["shall",{"_index":1120,"title":{},"body":{"license.html":{}}}],["shape",{"_index":11,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":862,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["simpl",{"_index":1211,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["simpli",{"_index":1234,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["singl",{"_index":222,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["skip",{"_index":519,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["softwar",{"_index":1102,"title":{},"body":{"license.html":{}}}],["soon",{"_index":1078,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["specif",{"_index":618,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["specifi",{"_index":211,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["specii",{"_index":515,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["standard",{"_index":1199,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["start",{"_index":110,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"index.html":{}}}],["state",{"_index":7,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state('closed',styl",{"_index":575,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state('open',styl",{"_index":571,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state(state:str",{"_index":589,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["state.servic",{"_index":565,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["state.service.t",{"_index":898,"title":{},"body":{"injectables/NgStateService.html":{},"coverage.html":{}}}],["state.service.ts:10",{"_index":901,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state.service.ts:17",{"_index":903,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state.styl",{"_index":906,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state/ng",{"_index":564,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgStateService.html":{},"coverage.html":{}}}],["state1",{"_index":938,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state1]:transition.anim",{"_index":945,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state2",{"_index":940,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state2]:transition.anim",{"_index":943,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state:str",{"_index":45,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["state:string)=>void",{"_index":971,"title":{},"body":{"interfaces/StateCSSMapper.html":{}}}],["statecssmap",{"_index":432,"title":{"interfaces/StateCSSMap.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["statecssmapp",{"_index":41,"title":{"interfaces/StateCSSMapper.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["statecssmapper)=>str",{"_index":50,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["statecssmapper)=>void",{"_index":47,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["statecssmapperservic",{"_index":434,"title":{"injectables/StateCssMapperService.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{}}}],["stateless",{"_index":1256,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["statemachineconstructor",{"_index":80,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["statement",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["statemod",{"_index":525,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["states.reduce((map,st",{"_index":904,"title":{},"body":{"injectables/NgStateService.html":{}}}],["states.servic",{"_index":452,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["states.service.t",{"_index":73,"title":{},"body":{"injectables/AnimationStatesService.html":{},"coverage.html":{}}}],["states.service.ts:18",{"_index":81,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["states.service.ts:32",{"_index":86,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["states/anim",{"_index":72,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["states[0].trim",{"_index":939,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["states[1].trim",{"_index":941,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["statesservic",{"_index":535,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["static",{"_index":301,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["step",{"_index":517,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["still",{"_index":740,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["store",{"_index":667,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-components.html":{}}}],["stream",{"_index":677,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["streams.model",{"_index":769,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{}}}],["streams.model.t",{"_index":1154,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["streams/input",{"_index":768,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["streams[input",{"_index":803,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["string",{"_index":49,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["string):viewref",{"_index":243,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["string):void",{"_index":234,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["strstate",{"_index":526,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["structur",{"_index":346,"title":{},"body":{"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["stub",{"_index":869,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":67,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["sub.unsubscrib",{"_index":820,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subject",{"_index":690,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"license.html":{},"additional-documentation/dynamic-components.html":{}}}],["sublicens",{"_index":1111,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1224,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["subscribe((c",{"_index":385,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["subscribe((t",{"_index":389,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["subscribe(ev",{"_index":812,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subscribe(valu",{"_index":804,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subscript",{"_index":358,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["subscriptions.foreach(sub",{"_index":818,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["substanti",{"_index":1121,"title":{},"body":{"license.html":{}}}],["such",{"_index":1208,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["suitabl",{"_index":664,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["suppli",{"_index":145,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["support",{"_index":631,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"modules.html":{},"additional-documentation/dynamic-animations.html":{}}}],["svg",{"_index":1142,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1056,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":316,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{},"miscellaneous/typealiases.html":{}}}],["tabl",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":879,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["templat",{"_index":153,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["templateref",{"_index":144,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["test",{"_index":1221,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["text",{"_index":689,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["textclick",{"_index":1265,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["textcompon",{"_index":696,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["textcomponent':textcompon",{"_index":687,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.animationshandl",{"_index":603,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandler.nextstate(ngtransitionstates.void",{"_index":610,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandler.nextstate(this.strst",{"_index":592,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandlerconstructor",{"_index":658,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["this.animationsstatemachin",{"_index":470,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.destroy",{"_index":465,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.init",{"_index":473,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.next",{"_index":462,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationstatesbuild",{"_index":471,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["this.attachinputstreams(compmodel.input",{"_index":786,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.attachoutputcallbacks(compmodel.outputcallback",{"_index":787,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.build",{"_index":100,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["this.ccservic",{"_index":172,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["this.closeallsubscriptions(this.inputsubscript",{"_index":815,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.closeallsubscriptions(this.outputsubscript",{"_index":814,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref",{"_index":782,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.changedetectorref.markforcheck",{"_index":789,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.destroy",{"_index":816,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.instance[cb",{"_index":811,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.instance[input",{"_index":797,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.conductor",{"_index":171,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["this.conductor.attachview('two',vref);detach",{"_index":1192,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.attachviews('two',views);fin",{"_index":1194,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.destroy",{"_index":1196,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.detachview('one',2);attach",{"_index":1191,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.detachviews('one');and",{"_index":1193,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.init('on",{"_index":1187,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.init(this.cont",{"_index":175,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["this.conductor.moveview('one','two',3);detach",{"_index":1189,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.moveviews(\"one\",\"two",{"_index":179,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["this.conductor.moveviews(\"two\",\"on",{"_index":183,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["this.conductor.moveviews('one','two');th",{"_index":1188,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductorconstructor",{"_index":326,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["this.cont",{"_index":174,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["this.contain",{"_index":376,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap",{"_index":380,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].detach(index",{"_index":405,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].insert(view",{"_index":416,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].length",{"_index":413,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[initialcontain",{"_index":392,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].insert",{"_index":410,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].insert(view",{"_index":404,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].length",{"_index":411,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[previouscontainer].detach(index",{"_index":403,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[previouscontainer].length",{"_index":401,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersquerylist",{"_index":383,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersquerylist.toarray",{"_index":377,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub",{"_index":382,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub.clos",{"_index":395,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub.unsubscrib",{"_index":396,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentsquerylist",{"_index":388,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentsquerylist.toarray",{"_index":379,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub",{"_index":387,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub.clos",{"_index":398,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub.unsubscrib",{"_index":399,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.createcompon",{"_index":783,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.createcssmapper(cssmap",{"_index":454,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createcssmapper(map",{"_index":457,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createinjector(compmodel.provid",{"_index":784,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.createstatemachine(this.transit",{"_index":455,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createstatemachine(transit",{"_index":464,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmap",{"_index":467,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.cssmapp",{"_index":463,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.add(this.st",{"_index":479,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.destroy",{"_index":466,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.removeal",{"_index":476,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapperservic",{"_index":477,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["this.currentst",{"_index":1235,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["this.daservice.createanimationshandl",{"_index":604,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.data",{"_index":1266,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["this.dcsservice.createseri",{"_index":1254,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["this.destroycomp",{"_index":781,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.dsservice.createseri",{"_index":686,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.dvkleav",{"_index":601,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.dvkleave.setleavetiming(\"500m",{"_index":602,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.el",{"_index":472,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.element.nativeel",{"_index":605,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.initializecomponent(compmodel",{"_index":775,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.inputsubscript",{"_index":801,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.isst",{"_index":597,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.mapcontainers(this.contain",{"_index":381,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.myst",{"_index":588,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.onclick",{"_index":698,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.outputsubscript",{"_index":808,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.parsetransitionexpression(transit",{"_index":926,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["this.rendererfactory.createrenderer(element,nul",{"_index":987,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["this.resolv",{"_index":793,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.seri",{"_index":685,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.serializer.getcomponent(compmodel.nam",{"_index":777,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.serializerconstructor(serializermap",{"_index":852,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["this.serializermap",{"_index":500,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["this.setinitialvalues(compmodel.initialvalu",{"_index":785,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.stat",{"_index":460,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.statemachineconstructor",{"_index":99,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["this.states.push(anim",{"_index":598,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.statesservice.parsestates(this.st",{"_index":608,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.strstat",{"_index":590,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.styl",{"_index":456,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.templ",{"_index":378,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.templates.map(templ",{"_index":391,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.text$.asobserv",{"_index":699,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.timingparam",{"_index":891,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["this.transervice.buildanimationtransitions(this.transit",{"_index":607,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.transit",{"_index":468,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.transitions.push(anim",{"_index":596,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.vcref",{"_index":344,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["this.vcref.insert(this.compref.hostview",{"_index":788,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.vcref.parentinjector",{"_index":792,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["those",{"_index":274,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["though",{"_index":319,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["through",{"_index":278,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["tie",{"_index":823,"title":{},"body":{"interfaces/DynamicComponentModel.html":{}}}],["time",{"_index":614,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["timingparam",{"_index":890,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["tme321",{"_index":1093,"title":{},"body":{"license.html":{}}}],["togglest",{"_index":586,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["token",{"_index":286,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":1067,"title":{},"body":{"index.html":{}}}],["top",{"_index":106,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["tort",{"_index":1139,"title":{},"body":{"license.html":{}}}],["tostat",{"_index":116,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/NgTransitionService.html":{}}}],["tostate:str",{"_index":619,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["tostate]:transition.anim",{"_index":948,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["track",{"_index":676,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["transervic",{"_index":533,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["transfer",{"_index":1259,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["transform",{"_index":572,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transit",{"_index":35,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition(\":leav",{"_index":894,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["transition(':enter',animate('200m",{"_index":578,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["transition(':leave',animate('200m",{"_index":582,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition('en",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('openclosed',animate('200m",{"_index":577,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition.expr",{"_index":933,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.servic",{"_index":560,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["transition.service.t",{"_index":907,"title":{},"body":{"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["transition.service.ts:12",{"_index":911,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.service.ts:22",{"_index":913,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.service.ts:41",{"_index":916,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.st",{"_index":562,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["transition.states.t",{"_index":1052,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transition.symbol",{"_index":923,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.symbols.t",{"_index":1053,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transition/ng",{"_index":559,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["transitions.model",{"_index":64,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{}}}],["transitions.model.t",{"_index":101,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"coverage.html":{}}}],["transitions.model.ts:12",{"_index":120,"title":{},"body":{"interfaces/AnimationTransitionsMap.html":{}}}],["transitions.model.ts:22",{"_index":104,"title":{},"body":{"interfaces/AnimationStylesMap.html":{}}}],["transitions.reduce((transmap",{"_index":924,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions/anim",{"_index":63,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["transitions[fromst",{"_index":947,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[ngtransitionstates.void",{"_index":950,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[ngtransitionstates.wildcard",{"_index":954,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[state1",{"_index":942,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[state2",{"_index":944,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["translat",{"_index":1248,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["transmap",{"_index":932,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmap[fromst",{"_index":929,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmap[fromstate][tost",{"_index":930,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmit",{"_index":1250,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["trigger",{"_index":508,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["trigger(\"dvkleav",{"_index":893,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["trigger('dvkleav",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":162,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["ts",{"_index":232,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{}}}],["twiddl",{"_index":283,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["two",{"_index":1272,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["type",{"_index":25,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["typealias",{"_index":1149,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedkey",{"_index":1160,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":321,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["uat/dynamicviewkit",{"_index":1063,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":962,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["under",{"_index":874,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["unless",{"_index":1269,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["until",{"_index":1278,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["up",{"_index":203,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["us",{"_index":14,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["usag",{"_index":653,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{}}}],["user",{"_index":273,"title":{},"body":{"modules/ContentConductorModule.html":{},"index.html":{}}}],["usevalu",{"_index":303,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["usual",{"_index":169,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["valid",{"_index":920,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["valu",{"_index":88,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["values.model",{"_index":672,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{}}}],["values.model.t",{"_index":1152,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values/initi",{"_index":671,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{}}}],["variabl",{"_index":999,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vcref",{"_index":339,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["version",{"_index":290,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"index.html":{}}}],["view",{"_index":132,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["viewchildren(contentcontainerdirect",{"_index":163,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["viewcontain",{"_index":330,"title":{},"body":{"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{}}}],["viewcontainerref",{"_index":134,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["viewref",{"_index":192,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["viewref):void",{"_index":245,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["viewref[]):void",{"_index":247,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["viewref}",{"_index":199,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["viewscach",{"_index":407,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["void",{"_index":51,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["vref",{"_index":1190,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["wait",{"_index":870,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["warranti",{"_index":1123,"title":{},"body":{"license.html":{}}}],["way",{"_index":680,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["well",{"_index":1214,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["whether",{"_index":1136,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1071,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["wild",{"_index":1212,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["wildcard",{"_index":1055,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wire",{"_index":646,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"modules/DynamicComponentsModule.html":{}}}],["within",{"_index":271,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["without",{"_index":654,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"license.html":{}}}],["work",{"_index":1206,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["wrapper",{"_index":328,"title":{},"body":{"interfaces/ContentContainer.html":{}}}],["x",{"_index":414,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["ye",{"_index":200,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["zone.j",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":265,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AnimationStateMachine.html":{"url":"interfaces/AnimationStateMachine.html","title":"interface - AnimationStateMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStateMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an animation state machine to be used by a component or\ndirective that wants to provide dynamic animations.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destroy\n                                \n                                \n                                        init\n                                \n                                \n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references held by the object created for \nthe state machine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                    \n                                \n                                \n                                    \n                                        init:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Initialize the state and css class of the state machine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transition the state from the current state to the next state, \nplaying any animations and applying any css classes as defined.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateCSSMapper } from \"../state-css-mapper/state-css-mapper.model\";\n\n/**\n * The shape of an animation state machine to be used by a component or\n * directive that wants to provide dynamic animations.\n * \n */\nexport interface AnimationStateMachine {\n\n  /**\n   * Initialize the state and css class of the state machine.\n   */\n  init: (state:string, mapper?: StateCSSMapper)=>void;\n\n  /**\n   * Transition the state from the current state to the next state, \n   * playing any animations and applying any css classes as defined.\n   */\n  next: (nextState: string, mapper?: StateCSSMapper)=>string;\n\n  /**\n   * Release the references held by the object created for \n   * the state machine.\n   */\n  destroy: ()=>void;\n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationStateMachineConstructor.html":{"url":"interfaces/AnimationStateMachineConstructor.html","title":"interface - AnimationStateMachineConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStateMachineConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.constructor.ts\n        \n\n            \n                Description\n            \n            \n                The shape of a class constructor that can act as the animation state machine.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { AnimationBuilder } from '@angular/animations';\nimport { AnimationStateMachine } from './animation-state-machine.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\n\n/**\n * The shape of a class constructor that can act as the animation state machine.\n */\nexport interface AnimationStateMachineConstructor {\n    new( \n        element: any, \n        transitions: AnimationTransitionsMap,\n        styles: AnimationStylesMap,\n        builder: AnimationBuilder):AnimationStateMachine;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationStatesService.html":{"url":"injectables/AnimationStatesService.html","title":"injectable - AnimationStatesService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AnimationStatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts\n        \n\n            \n                Description\n            \n            \n                This service creates an animation transition \nstate machine with the method \ncreateAnimationStateMachine \nfrom given AnimationTransitionsMap\nand AnimationStylesMap objects.\nThe returned state machine is in the shape of \nAnimationStateMachine.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimationStateMachine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: AnimationBuilder, stateMachineConstructor: AnimationStateMachineConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    AnimationBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateMachineConstructor\n                                                  \n                                                        \n                                                                    AnimationStateMachineConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createAnimationStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateAnimationStateMachine(element: any, transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Create an AnimationStateMachine to apply to an\nelement when the state is transitioned.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to apply the animations to.\n\n                                                        \n                                                \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The AnimationTransitionsMap to play. \n\n                                                        \n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationStylesMap to apply.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { AnimationBuilder } from '@angular/animations';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { AnimationStateMachineConstructorToken } from '../animation-state-machine/animation-state-machine.token';\nimport { AnimationStateMachineConstructor } from '../animation-state-machine/animation-state-machine.constructor';\n\n/**\n * This service creates an animation transition \n * state machine with the method \n * [createAnimationStateMachine]{@link AnimationStatesService#createAnimationStateMachine} \n * from given {@link AnimationTransitionsMap}\n * and {@link AnimationStylesMap} objects.\n * \n * The returned state machine is in the shape of \n * {@link AnimationStateMachine}.\n */\n@Injectable()\nexport class AnimationStatesService {\n\n  constructor(\n    private builder: AnimationBuilder,\n    @Inject(AnimationStateMachineConstructorToken)\n    private stateMachineConstructor: AnimationStateMachineConstructor) {}\n\n  /**\n   * Create an {@link AnimationStateMachine} to apply to an\n   * element when the state is transitioned.\n   * @param element The element to apply the animations to.\n   * @param transitions The AnimationTransitionsMap to play. \n   * @param styles The AnimationStylesMap to apply.\n   */\n  createAnimationStateMachine(\n    element: any, \n    transitions: AnimationTransitionsMap = {},\n    styles: AnimationStylesMap) {\n\n    return new this.stateMachineConstructor(\n      element,\n      transitions,\n      styles,\n      this.builder\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationStylesMap.html":{"url":"interfaces/AnimationStylesMap.html","title":"interface - AnimationStylesMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStylesMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n        \n\n            \n                Description\n            \n            \n                A mapping of state strings to AnimationStyleMetadata\ncreated with the style function. \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [state: string]:    AnimationStyleMetadata\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts:22\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AnimationMetadata, AnimationStyleMetadata } from \"@angular/animations\";\n\n/**\n * A map of states and AnimationMetadata. \n * The top level keys are the strings representing the states\n * a transition starts from.  The inner keys are the strings \n * representing the state being transitioned to.  Each fromState \n * can have an animation defined for any number of toStates \n * to play when that particular transition occurs.\n * \n */\nexport interface AnimationTransitionsMap {\n  [fromState: string]: {\n    [toState: string]: AnimationMetadata | AnimationMetadata[];\n  }\n} \n\n/**\n * A mapping of state strings to AnimationStyleMetadata\n * created with the style function. \n */\nexport interface AnimationStylesMap {\n  [state: string]: AnimationStyleMetadata; \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationTransitionsMap.html":{"url":"interfaces/AnimationTransitionsMap.html","title":"interface - AnimationTransitionsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationTransitionsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of states and AnimationMetadata. \nThe top level keys are the strings representing the states\na transition starts from.  The inner keys are the strings \nrepresenting the state being transitioned to.  Each fromState \ncan have an animation defined for any number of toStates \nto play when that particular transition occurs.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [fromState: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts:12\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AnimationMetadata, AnimationStyleMetadata } from \"@angular/animations\";\n\n/**\n * A map of states and AnimationMetadata. \n * The top level keys are the strings representing the states\n * a transition starts from.  The inner keys are the strings \n * representing the state being transitioned to.  Each fromState \n * can have an animation defined for any number of toStates \n * to play when that particular transition occurs.\n * \n */\nexport interface AnimationTransitionsMap {\n  [fromState: string]: {\n    [toState: string]: AnimationMetadata | AnimationMetadata[];\n  }\n} \n\n/**\n * A mapping of state strings to AnimationStyleMetadata\n * created with the style function. \n */\nexport interface AnimationStylesMap {\n  [state: string]: AnimationStyleMetadata; \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentConstructor.html":{"url":"interfaces/ComponentConstructor.html","title":"interface - ComponentConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/component-constructor/component-constructor.model.ts\n        \n\n            \n                Description\n            \n            \n                Component constructor definition.\n\n            \n\n\n\n\n\n    \n\n\n    \n        export interface ComponentConstructor {\n    new(...args):any;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainersMap.html":{"url":"interfaces/ContainersMap.html","title":"interface - ContainersMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainersMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of string names to view containers.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    ViewContainerRef\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\n\n/**\n * A map of string names to view containers.\n */\nexport interface ContainersMap { \n    [name:string]: ViewContainerRef \n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentConductor.html":{"url":"interfaces/ContentConductor.html","title":"interface - ContentConductor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentConductor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.model.ts\n        \n\n            \n                Description\n            \n            \n                This is the shape of the object returned by the injectable\nContentConductorService that allows content in the\nform of TemplateRefs supplied by a QueryList to\nbe moved between multiple containers. \nThe number of containers and the number of views to move between\nthem is not limited.\nExample\nDefine multiple ContentContainers in a template:\n\n\nInside the component controller define queries for both the \nTemplateRefs and the ContentContainer implementors:\n\\@ContentChildren(ContentDirective,{ read: TemplateRef, descendants: true })` \ncontents: QueryList>;\n\n\\@ViewChildren(ContentContainerDirective)`\ncontainers: QueryList;Inject the ContentConductorService service:\n   constructor(\n      private ccService: ContentConductorService) {}And then create the Content Conductor once the queries are ready,\nusually inside ngAfterViewInit:\n   ngAfterViewInit() {\n     this.conductor = this.ccService\n       .createContentConductor(this.containers, this.contents);\n     this.conductor.init(this.cont);\n   }And then move the content around with string names mapped to the\nnames of the dvk-content-container directives:\n   moveToTwo() {\n     this.conductor.moveViews(\"one\",\"two\");\n   }Or back again:\n   moveToOne() {\n     this.conductor.moveViews(\"two\",\"one\");\n   }And then instantiate the component or directive and put the views to\nmove around inside the element:\n\nContent 1\nContent 2\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    attachView\n                                \n                                \n                                    attachViews\n                                \n                                \n                                    destroy\n                                \n                                \n                                    detachView\n                                \n                                \n                                    detachViews\n                                \n                                \n                                    init\n                                \n                                \n                                    moveView\n                                \n                                \n                                    moveViews\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachView\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachView(container: string, view: ViewRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:144\n                            \n                        \n\n\n                \n                    \n                            Attach a {@link ViewRef} to a {@link ContentContainerDirective}.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                                \n                                                        view\n                                                        \n                                                                    ViewRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachViews(container: string, views?: ViewRef[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:152\n                            \n                        \n\n\n                \n                    \n                            Attach an array of {@link ViewRef}s to a {@link ContentContainerDirective}.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                                \n                                                        views\n                                                        \n                                                                    ViewRef[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:90\n                            \n                        \n\n\n                \n                    \n                            Clean up, should be called by the component or directive's\n{@link ngOnDestroy} method that is displaying the content. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachView\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachView(container: string, index?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:114\n                            \n                        \n\n\n                \n                    \n                            Detach a {@link ViewRef} from a {@link ContentContainerDirective}\nspecified by it's index inside the {@link ViewContainerRef}\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string name of the {\n\n                                                        \n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ViewRef\n\n                            \n                                \n                                    The detached {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachViews(container: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:136\n                            \n                        \n\n\n                \n                    \n                            Remove all {@link ViewRef}s from a {@link ContentContainerDirective}.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The name of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ViewRef[]\n\n                            \n                                \n                                    An array of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(initialContainer: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:84\n                            \n                        \n\n\n                \n                    \n                            Initialize the content into the container of the given\nstring name.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initialContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the string name of the container\nto create the content initially inside of.  \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveView\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveView(previousContainer: string, nextContainer: string, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:101\n                            \n                        \n\n\n                \n                    \n                            Move a single {@link ViewRef} identified by it's index \nfrom one {@link ContentContainerDirective} to the another.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The source {\n\n                                                        \n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The destination {\n\n                                                        \n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveViews(previousContainer: string, nextContainer: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:126\n                            \n                        \n\n\n                \n                    \n                            Move all of the {@link ViewRef}s from one {@link ContentContainerDirective}\nto another.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ViewRef } from '@angular/core';\nimport { ContentContainer } from './content-container/content-container.model';\n\n/**\n * This is the shape of the object returned by the injectable\n * {@link ContentConductorService} that allows content in the\n * form of TemplateRefs supplied by a QueryList to\n * be moved between multiple containers. \n * \n * The number of containers and the number of views to move between\n * them is not limited.\n * \n * ## Example\n * \n * Define multiple ContentContainers in a template:\n * \n * \n * \n * \n * Inside the component controller define queries for both the \n * TemplateRefs and the ContentContainer implementors:\n * \n * ```ts\n * \\@ContentChildren(ContentDirective,{ read: TemplateRef, descendants: true })` \n * contents: QueryList>;\n * \n * \\@ViewChildren(ContentContainerDirective)`\n * containers: QueryList;\n * ```\n * \n * Inject the ContentConductorService service:\n * \n * ```ts\n *   constructor(\n *      private ccService: ContentConductorService) {}\n * ```\n * \n * And then create the Content Conductor once the queries are ready,\n * usually inside ngAfterViewInit:\n * \n * ```ts\n *   ngAfterViewInit() {\n *     this.conductor = this.ccService\n *       .createContentConductor(this.containers, this.contents);\n *     this.conductor.init(this.cont);\n *   }\n * ```\n * \n * And then move the content around with string names mapped to the\n * names of the dvk-content-container directives:\n * \n * ```ts\n *   moveToTwo() {\n *     this.conductor.moveViews(\"one\",\"two\");\n *   }\n * ```\n * \n * Or back again:\n *\n * ```ts\n *   moveToOne() {\n *     this.conductor.moveViews(\"two\",\"one\");\n *   }\n * ```\n * \n * And then instantiate the component or directive and put the views to\n * move around inside the element:\n * \n * ```html\n * \n *\tContent 1\n *\tContent 2\n * \n * ```\n */\nexport interface ContentConductor {\n\n    /**\n     * Initialize the content into the container of the given\n     * string name.\n     * @param initialContainer the string name of the container\n     * to create the content initially inside of.  \n     */\n    init(initialContainer: string):void;\n\n    /**\n     *  Clean up, should be called by the component or directive's\n     * {@link ngOnDestroy} method that is displaying the content. \n     */\n    destroy():void;\n\n    /**\n     * Move a single {@link ViewRef} identified by it's index \n     * from one {@link ContentContainerDirective} to the another.\n     * @param previousContainer The source {@link ContentContainerDirective}'s name\n     * where the {@link ViewRef} is currently located.\n     * @param nextContainer The destination {@link ContentContainerDirective}'s name\n     * where the {@link ViewRef} will be moved to.\n     * @param index The index of the {@link ViewRef} to move.\n     */\n    moveView( \n        previousContainer: string,\n        nextContainer:string, \n        index: number):void;\n\n    /**\n     * Detach a {@link ViewRef} from a {@link ContentContainerDirective}\n     * specified by it's index inside the {@link ViewContainerRef}\n     * @param container The string name of the {@link ContentContainerDirective}\n     * to remove the {@link ViewRef} from.\n     * @param index The index of the {@link ViewRef} to remove.\n     * @returns The detached {@link ViewRef}.\n     */\n    detachView(\n        container:string,\n        index?: number):ViewRef;\n\n    /**\n     * Move all of the {@link ViewRef}s from one {@link ContentContainerDirective}\n     * to another.\n     * @param previousContainer The {@link ContentContainerDirective} \n     * to remove the {@link ViewRef} from.\n     * @param nextContainer The {@link ContentContainerDirective} \n     * to add the {@link ViewRef} to.\n     */\n    moveViews(\n        previousContainer: string, \n        nextContainer: string):void;\n\n    /**\n     * Remove all {@link ViewRef}s from a {@link ContentContainerDirective}.\n     * @param container The name of the {@link ContentContainerDirective} \n     * to remove the {@link ViewRef}s from.\n     * @returns An array of the {@link ViewRef}s removed.\n     */\n    detachViews(container: string):ViewRef[];\n\n    /**\n     * Attach a {@link ViewRef} to a {@link ContentContainerDirective}.\n     * @param container The {@link ContentContainerDirective} \n     * to attach the {@link ViewRef} to.\n     * @param view The {@link ViewRef} to attach.\n     */\n    attachView(container:string, view: ViewRef):void;\n\n    /**\n     * Attach an array of {@link ViewRef}s to a {@link ContentContainerDirective}.\n     * @param container The {@link ContentContainerDirective} \n     * to attach the {@link ViewRef}s array to.\n     * @param views The {@link ViewRef}s array to attach.\n     */\n    attachViews(container:string, views?: ViewRef[]):void;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentConductorConstructor.html":{"url":"interfaces/ContentConductorConstructor.html","title":"interface - ContentConductorConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentConductorConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.model.ts\n        \n\n            \n                Description\n            \n            \n                A constructor that returns an implementation \nof ContentConductor.  \n\n            \n\n\n\n\n\n    \n\n\n    \n        import { QueryList, TemplateRef } from '@angular/core';\nimport { ContentConductor } from \"../content-conductor.model\";\nimport { ContentContainer } from '../content-container/content-container.model';\n\n/**\n * A constructor that returns an implementation \n * of {@link ContentConductor}.  \n * \n * @param containersQueryList Should be a QueryList \n * of containers that views can be put into.  \n * \n * @param contentsQueryList Should be a QueryList of \n * the TemplateRefs representing the content to \n * display inside the containers.\n */\nexport interface ContentConductorConstructor {\n  new(\n    containersQueryList: QueryList,\n    contentsQueryList : QueryList>\n  ):ContentConductor;\n}\n  \n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentConductorModule.html":{"url":"modules/ContentConductorModule.html","title":"module - ContentConductorModule","body":"\n                   \n\n\n\n\n  Modules\n  ContentConductorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentConductorModule\n\n\n\ncluster_ContentConductorModule_declarations\n\n\n\ncluster_ContentConductorModule_exports\n\n\n\ncluster_ContentConductorModule_providers\n\n\n\n\nContentContainerDirective\n\nContentContainerDirective\n\n\n\nContentConductorModule\n\nContentConductorModule\n\nContentConductorModule -->\n\nContentContainerDirective->ContentConductorModule\n\n\n\n\n\nContentDirective\n\nContentDirective\n\nContentConductorModule -->\n\nContentDirective->ContentConductorModule\n\n\n\n\n\nContentContainerDirective \n\nContentContainerDirective \n\nContentContainerDirective  -->\n\nContentConductorModule->ContentContainerDirective \n\n\n\n\n\nContentDirective \n\nContentDirective \n\nContentDirective  -->\n\nContentConductorModule->ContentDirective \n\n\n\n\n\nContentConductorService\n\nContentConductorService\n\nContentConductorModule -->\n\nContentConductorService->ContentConductorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Content Conductor Module contains the parts necessary to define \ncontainers within a component's view, allow users to provide content\nfor those containers, and move the content between those containers \nbased on string names assigned to each container.\nThis functionality is handled through Angular's own abstractions \ninstead of manually twiddling DOM elements.\nThe forRoot function instantiates the module with a token \nfor the ContentConductorService to actually create the \nContentConductor that provides the functionality and must \nbe called for the provided functionality.  The optional parameter \nis the class that actually provides the functionality for moving\ncontent.  By default the DefaultContentConductorService is\nused but a custom version can be supplied that conforms to the\nContentConductor interface.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContentContainerDirective\n                            \n                            \n                                ContentDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ContentConductorService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ContentContainerDirective\n                            \n                            \n                                    ContentDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { DefaultContentConductorService } from './default-content-conductor/default-content-conductor.service';\nimport { ContentConductorConstructorToken } from './content-conductor-constructor/content-conductor-constructor.token';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ContentConductorService } from './content-conductor.service';\nimport { ContentDirective } from './content/content.directive';\nimport { ContentContainerDirective } from './content-container/content-container.directive';\nimport { ContentConductorConstructor } from './content-conductor-constructor/content-conductor-constructor.model';\n\n/**\n * The Content Conductor Module contains the parts necessary to define \n * containers within a component's view, allow users to provide content\n * for those containers, and move the content between those containers \n * based on string names assigned to each container.\n * \n * This functionality is handled through Angular's own abstractions \n * instead of manually twiddling DOM elements.\n * \n * The forRoot function instantiates the module with a token \n * for the {@link ContentConductorService} to actually create the \n * {@link ContentConductor} that provides the functionality and must \n * be called for the provided functionality.  The optional parameter \n * is the class that actually provides the functionality for moving\n * content.  By default the {@link DefaultContentConductorService} is\n * used but a custom version can be supplied that conforms to the\n * {@link ContentConductor} interface.\n */\n@NgModule({\n  declarations: [\n    ContentDirective, \n    ContentContainerDirective \n  ],\n  exports: [\n    ContentDirective, \n    ContentContainerDirective\n  ],\n  providers: [\n    ContentConductorService\n  ]\n})\nexport class ContentConductorModule {\n  static forRoot(conductorConstructor: ContentConductorConstructor = DefaultContentConductorService): ModuleWithProviders {\n    return {\n      ngModule: ContentConductorModule,\n      providers: [\n        { \n          provide: ContentConductorConstructorToken, \n          useValue: conductorConstructor  \n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentConductorService.html":{"url":"injectables/ContentConductorService.html","title":"injectable - ContentConductorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ContentConductorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.service.ts\n        \n\n            \n                Description\n            \n            \n                This service can be injected into a component in order to\ncreate a ContentConductor.\nSee ContentConductor for the details.\n\n            \n\n            \n                Example\n            \n            \n                        \n                            constructor(private conductorService: ContentConductorService) {}\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createContentConductor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(conductorConstructor: ContentConductorConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content-conductor.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conductorConstructor\n                                                  \n                                                        \n                                                                    ContentConductorConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createContentConductor\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateContentConductor(containersQueryList: QueryList, contentsQueryList: QueryList>)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.service.ts:36\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Create a ContentConductor\nfor moving content around a component's template.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        containersQueryList\n                                                        \n                                                                    QueryList\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A query list of ContentContainers\n\n                                                        \n                                                \n                                                \n                                                        contentsQueryList\n                                                        \n                                                                    QueryList>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A query list of TemplateRefs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The ContentConductor\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, QueryList, TemplateRef, Inject } from '@angular/core';\nimport { ContentContainer } from './content-container/content-container.model';\nimport { ContentConductorConstructorToken } from './content-conductor-constructor/content-conductor-constructor.token';\nimport { ContentConductorConstructor } from './content-conductor-constructor/content-conductor-constructor.model';\n\n/*\n * Even though this import is not used it is required for typescript\n * to resolve the return type of the createContentConductor method.\n * If it is removed this service will not compile correctly.\n */\nimport { ContentConductor } from './content-conductor.model';\n\n/**\n * This service can be injected into a component in order to\n * create a {@link ContentConductor}.\n * \n * See {@link ContentConductor} for the details.\n * \n * @example\n * constructor(private conductorService: ContentConductorService) {}\n */\n@Injectable()\nexport class ContentConductorService {\n \n  constructor(\n    @Inject(ContentConductorConstructorToken) \n    private conductorConstructor: ContentConductorConstructor) { }\n\n  /**\n   * Create a {@link ContentConductor}\n   * for moving content around a component's template.\n   * @param containersQueryList A query list of ContentContainers\n   * @param contentsQueryList A query list of TemplateRefs.\n   * @return The ContentConductor\n   */\n  createContentConductor(\n    containersQueryList: QueryList,\n    contentsQueryList : QueryList>) {\n    \n    return  new this.conductorConstructor(\n      containersQueryList,\n      contentsQueryList\n    );\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainer.html":{"url":"interfaces/ContentContainer.html","title":"interface - ContentContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-container/content-container.model.ts\n        \n\n            \n                Description\n            \n            \n                A wrapper around a ViewContainerRef\nand a string name identifier.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        containerName\n                                \n                                \n                                        viewContainer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        containerName\n                                    \n                                \n                                \n                                    \n                                        containerName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewContainer\n                                    \n                                \n                                \n                                    \n                                        viewContainer:     ViewContainerRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ViewContainerRef\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\n\n/**\n * A wrapper around a ViewContainerRef\n * and a string name identifier.\n */\nexport interface ContentContainer {\n    readonly viewContainer: ViewContainerRef;\n    readonly containerName: string;\n  }\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentContainerDirective.html":{"url":"directives/ContentContainerDirective.html","title":"directive - ContentContainerDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContentContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive that can be attached to create a container \nwhere content with an attached ContentDirective\ncan be displayed.\nThe string set to the directive name is used to refer to\nthis container by the ContentConductor.\n\n            \n\n            \n                Implements\n            \n            \n                        ContentContainer\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-content-container]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-content-container\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vcRef: ViewContainerRef, ccService: ContentConductorService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vcRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ccService\n                                                  \n                                                        \n                                                                    ContentConductorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-content-container\n                    \n                    \n                        The string used to refer to this container.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewContainer\n                    \n                \n\n                \n                    \n                        getviewContainer()\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:29\n                                \n                            \n                    \n                        \n                                The ViewContainerRef of this directive.\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, Input } from '@angular/core';\nimport { ContentConductorService } from '../content-conductor.service';\nimport { ContentContainer } from './content-container.model';\n\n/**\n * A directive that can be attached to create a container \n * where content with an attached {@link ContentDirective}\n * can be displayed.\n * \n * The string set to the directive name is used to refer to\n * this container by the {@link ContentConductor}.\n * \n * @example\n * \n */\n@Directive({\n  selector: '[dvk-content-container]'\n})\nexport class ContentContainerDirective implements ContentContainer {\n\n  /**\n   * The string used to refer to this container.\n   */\n  @Input('dvk-content-container') containerName: string;\n\n  /**\n   * The ViewContainerRef of this directive.\n   */\n  get viewContainer() { return this.vcRef; }\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private ccService: ContentConductorService) {}\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentDirective.html":{"url":"directives/ContentDirective.html","title":"directive - ContentDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content/content.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive that must be used as a structural \ndirective so that the TemplateRef is injected.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            Some Content To Display In A Container\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-content]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content/content.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * A directive that must be used as a structural \n * directive so that the TemplateRef is injected.\n * \n * @example\n * Some Content To Display In A Container\n */\n@Directive({\n  selector: '[dvk-content]'\n})\nexport class ContentDirective {\n  constructor(private templateRef: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultContentConductorService.html":{"url":"classes/DefaultContentConductorService.html","title":"class - DefaultContentConductorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultContentConductorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of a ContentConductor.\nThis version can be overriden by providing a different class\nfor the ContentConductorConstructorToken token.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ContentConductor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                containers\n                            \n                            \n                                    Private\n                                containersMap\n                            \n                            \n                                    Private\n                                containersSub\n                            \n                            \n                                    Private\n                                contentsSub\n                            \n                            \n                                    Private\n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachView\n                            \n                            \n                                attachViews\n                            \n                            \n                                destroy\n                            \n                            \n                                detachView\n                            \n                            \n                                detachViews\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                mapContainers\n                            \n                            \n                                moveView\n                            \n                            \n                                moveViews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(containersQueryList: QueryList, contentsQueryList: QueryList>)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containersQueryList\n                                                  \n                                                        \n                                                                    QueryList\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentsQueryList\n                                                  \n                                                        \n                                                                    QueryList>\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containers:     T[]\n\n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containersMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containersMap:     ContainersMap\n\n                    \n                \n                    \n                        \n                            Type :     ContainersMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containersSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containersSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            contentsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contentsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templates:     TemplateRef[]\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachView\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachView(container: string, view: ViewRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        view\n                                                        \n                                                                    ViewRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachViews(container: string, views: ViewRef[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        views\n                                                        \n                                                                    ViewRef[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachView\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachView(container: string, index?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachViews(container: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(initialContainer: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapContainers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapContainers(containers: T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:25\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containers\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveView\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveView(previousContainer: string, nextContainer: string, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveViews(previousContainer: string, nextContainer: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryList, TemplateRef, ViewRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ContentConductor } from '../content-conductor.model';\nimport { ContentContainer } from '../content-container/content-container.model';\nimport { ContainersMap } from '../containers-map/containers-map.model';\n\n/**\n * The default implementation of a {@link ContentConductor}.\n * This version can be overriden by providing a different class\n * for the {@link ContentConductorConstructorToken} token.\n */\nexport class DefaultContentConductorService implements ContentConductor {\n\n  constructor(\n    private containersQueryList: QueryList,\n    private contentsQueryList : QueryList>\n  ) {}\n    \n  private containers: T[];\n  private templates: TemplateRef[];\n  private containersMap: ContainersMap = {};\n  private containersSub: Subscription;\n  private contentsSub: Subscription;\n\n  private mapContainers(\n    containers: T[]) {\n      return containers.reduce((map,container)=>{\n        map[container.containerName] = container.viewContainer;\n        return map;\n      },{});\n  }\n  \n  init(initialContainer: string) {\n    this.containers = this.containersQueryList.toArray();\n    this.templates = this.contentsQueryList.toArray();\n\n    this.containersMap = this.mapContainers(this.containers);\n    this.containersSub = this.containersQueryList\n      .changes\n      .subscribe((c: T[])=>{\n        this.containers = c;\n        this.mapContainers(this.containers);\n      });\n\n    this.contentsSub = this.contentsQueryList\n      .changes\n      .subscribe((t: TemplateRef[])=>{\n        this.templates = t;\n      });\n\n    if(initialContainer && this.templates) {\n      this.templates.map(template=>\n        this.containersMap[initialContainer]\n          .createEmbeddedView(template));\n    }\n  }\n\n  destroy() {\n    if(this.containersSub && !this.containersSub.closed) { \n      this.containersSub.unsubscribe(); \n    }\n\n    if(this.contentsSub && !this.contentsSub.closed) {\n      this.contentsSub.unsubscribe();\n    }\n\n    this.containersQueryList = null;\n    this.contentsQueryList = null;\n    this.containers = null;\n    this.templates = null;\n    this.containersMap = null;\n    this.containersSub = null;\n    this.contentsSub = null;\n  }\n\n  moveView( \n    previousContainer: string,\n    nextContainer:string, \n    index: number ) {\n      index = index || this.containersMap[previousContainer].length;\n      const view = this.containersMap[previousContainer].detach(index);\n      this.containersMap[nextContainer].insert(view);\n  }\n\n  detachView(\n    container:string,\n    index?: number) {\n      return this.containersMap[container].detach(index);\n  }\n\n  moveViews(previousContainer: string, nextContainer: string) {\n    const length = this.containersMap[previousContainer].length;\n    const viewsCache: ViewRef[] = [];\n    for(let i=0; i{\n      this.containersMap[nextContainer].insert(\n        view,\n        this.containersMap[nextContainer].length);\n    });\n  }\n\n  detachViews(container: string) {\n    const detachedViews = [];\n    const length = this.containersMap[container].length;\n\n    for(let x = 0; x \n      this.containersMap[container].insert(view));\n  }\n\n  attachView(container: string, view: ViewRef) {\n    this.containersMap[container].insert(view);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultDynamicAnimationsHandlerService.html":{"url":"classes/DefaultDynamicAnimationsHandlerService.html","title":"class - DefaultDynamicAnimationsHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultDynamicAnimationsHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of DynamicAnimationsHandler\nthat provides the DynamicAnimationsDirective with \nanimations capabllities.  \n\n            \n\n\n            \n                Implements\n            \n            \n                        DynamicAnimationsHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animationsStateMachine\n                            \n                            \n                                    Private\n                                cssMapper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCSSMapper\n                            \n                            \n                                    Private\n                                createStateMachine\n                            \n                            \n                                destroy\n                            \n                            \n                                nextState\n                            \n                            \n                                setAnimations\n                            \n                            \n                                setCSSMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: any, state: string, transitions: AnimationTransitionsMap, styles: AnimationStylesMap, cssMap: StateCSSMap, cssMapperService: StateCssMapperService, animationStatesBuilder: AnimationStatesService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        transitions\n                                                  \n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMap\n                                                  \n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMapperService\n                                                  \n                                                        \n                                                                    StateCssMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStatesBuilder\n                                                  \n                                                        \n                                                                    AnimationStatesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            animationsStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animationsStateMachine:     AnimationStateMachine\n\n                    \n                \n                    \n                        \n                            Type :     AnimationStateMachine\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cssMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cssMapper:     StateCSSMapper\n\n                    \n                \n                    \n                        \n                            Type :     StateCSSMapper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createCSSMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createCSSMapper(map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createStateMachine(transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextState\n                            \n                            \n                        \n                    \n                \n                \n                    \nnextState(toState: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toState\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setAnimations\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetAnimations(transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCSSMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCSSMap(map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicAnimationsHandler } from '../dynamic-animations-handler/dynamic-animations-handler.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\nimport { StateCSSMapper } from '../state-css-mapper/state-css-mapper.model';\nimport { AnimationStateMachine } from '../animation-state-machine/animation-state-machine.model';\nimport { AnimationStatesService } from '../animation-states/animation-states.service';\nimport { StateCssMapperService } from '../state-css-mapper/state-css-mapper.service';\n\n/**\n * The default implementation of {@link DynamicAnimationsHandler}\n * that provides the {@link DynamicAnimationsDirective} with \n * animations capabllities.  \n */\nexport class DefaultDynamicAnimationsHandlerService implements DynamicAnimationsHandler {\n\n  private animationsStateMachine: AnimationStateMachine;\n  private cssMapper: StateCSSMapper;\n\n  constructor(\n    private element: any,\n    private state: string,\n    private transitions: AnimationTransitionsMap,\n    private styles: AnimationStylesMap, \n    private cssMap: StateCSSMap,\n    private cssMapperService: StateCssMapperService,\n    private animationStatesBuilder: AnimationStatesService\n  ) {\n    this.createCSSMapper(cssMap);\n    this.createStateMachine(this.transitions, this.styles);\n  }\n  \n  setCSSMap(map: StateCSSMap) {\n    this.createCSSMapper(map);\n  }\n\n  nextState(toState:string) {\n    if(this.state !== toState) {\n      this.state = toState;\n\n      if(this.animationsStateMachine) {\n        this.animationsStateMachine.next(\n          this.state, \n          this.cssMapper);\n      }\n    }\n  }\n\n  setAnimations(transitions: AnimationTransitionsMap, styles: AnimationStylesMap) {\n    this.createStateMachine(transitions, styles);\n  }\n\n  destroy() {\n    this.animationsStateMachine.destroy();\n    this.cssMapper.destroy();\n    this.state = null;\n    this.cssMap = null;\n    this.transitions = null;\n  }\n\n  private createStateMachine(\n    transitions: AnimationTransitionsMap, \n    styles: AnimationStylesMap) {\n    if(this.animationsStateMachine) {\n      this.animationsStateMachine.destroy();\n    }\n\n    if(this.transitions !== transitions || !this.animationsStateMachine) {\n      this.transitions = transitions;\n\n      this.animationsStateMachine = \n        this.animationStatesBuilder\n          .createAnimationStateMachine(\n            this.element,\n            this.transitions,\n            styles);\n\n      this.animationsStateMachine.init(\n        this.state,\n        this.cssMapper);\n    }\n  }\n\n  private createCSSMapper(map: StateCSSMap = {}) {\n    if(this.cssMap !== map || !this.cssMapper) {\n      this.cssMap = map;\n\n      if(this.cssMapper) {\n        this.cssMapper.removeAll();\n        this.cssMapper.destroy();\n      }\n\n      this.cssMapper = this.cssMapperService\n        .createStateCSSMapper(this.element,this.cssMap);\n\n      this.cssMapper.add(this.state);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultDynamicComponentSerializer.html":{"url":"classes/DefaultDynamicComponentSerializer.html","title":"class - DefaultDynamicComponentSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultDynamicComponentSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of DynamicComponentSerializer that\nprovides the serialization methods for the specified \nDynamicComponentSerializerMap. \n\n            \n\n\n            \n                Implements\n            \n            \n                        DynamicComponentSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializerMap: DynamicComponentSerializerMap)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializerMap\n                                                  \n                                                        \n                                                                    DynamicComponentSerializerMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(componentName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:14\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName(componentConstructor: ComponentConstructor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicComponentSerializerMap } from '../dynamic-component-serializer-map/dynamic-component-serializer-map.model';\nimport { DynamicComponentSerializer } from '../dynamic-component-serializer/dynamic-component-serializer.model';\nimport { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * The default implementation of {@link DynamicComponentSerializer} that\n * provides the serialization methods for the specified \n * {@link DynamicComponentSerializerMap}. \n */\nexport class DefaultDynamicComponentSerializer implements DynamicComponentSerializer {\n\n    constructor(private serializerMap: DynamicComponentSerializerMap) {}\n\n    getComponent(componentName: string) {\n        return this.serializerMap\n            .deserializeMap.get(componentName);\n    }\n\n    getName(componentConstructor: ComponentConstructor) {\n        return this.serializerMap\n            .serializeMap.get(componentConstructor);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicAnimationsDirective.html":{"url":"directives/DynamicAnimationsDirective.html","title":"directive - DynamicAnimationsDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicAnimationsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is the main interface to dynamic animations.\nIt should be attached to the element that is to be animated.\nDirections\nIn a component define a string member to represent the state\nof the Animations.  This is analogous to a trigger in normal\nAngular animations.\nThen define the animations as an array of state and transition\nfunction calls from the Angular animations module.\nOptionally specify a map of state names to css class names that\nwill be added and removed from the element as the animations \nstart and finish.\nThen pass those values into this directives state and animations\nInputs.\nIf a :leave animation, or *=>void, is speciied you must also both\nadd the @dvkLeave directive to the element and add dvkLeave to \nthe component as a static animation.  This step is only necessary\nfor a :leave animation. Otherwise it can be skipped.\nThe animations can then be played by changing the string bound to\nthe state Input.\nExample\n`ts\n\\@Component({\n              template: `\n                  \n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-da]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animationsHandler\n                            \n                            \n                                    Private\n                                stateMode\n                            \n                            \n                                    Private\n                                states\n                            \n                            \n                                    Private\n                                strState\n                            \n                            \n                                    Private\n                                transitions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isState\n                            \n                            \n                                    Private\n                                isTransition\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animations\n                            \n                            \n                                cssMap\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, daService: DynamicAnimationsService, tranService: NgTransitionService, statesService: NgStateService, dvkLeave: LeaveDirective)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:140\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        daService\n                                                  \n                                                        \n                                                                    DynamicAnimationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        tranService\n                                                  \n                                                        \n                                                                    NgTransitionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        statesService\n                                                  \n                                                        \n                                                                    NgStateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dvkLeave\n                                                  \n                                                        \n                                                                    LeaveDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        animations\n                    \n                    \n                        The description of the animations to play as an array \nof state and transition Angular animation functions.\n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:115\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cssMap\n                    \n                    \n                        The map of state name to css class names to apply\nas the state changes.\n\n                            \n                            Type:    StateCSSMap\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:140\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                    \n                        Changing the value of state will cause a transition \nand play an animation if one is defined for that state\nchange.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:100\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isState(metaData: AnimationMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaData\n                                                        \n                                                                    AnimationMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationStateMetadata\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isTransition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isTransition(metaData: AnimationMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaData\n                                                        \n                                                                    AnimationMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationTransitionMetadata\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:167\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:154\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            animationsHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animationsHandler:     DynamicAnimationsHandler\n\n                    \n                \n                    \n                        \n                            Type :     DynamicAnimationsHandler\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stateMode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stateMode:     \"string\" | \"number\"\n\n                    \n                \n                    \n                        \n                            Type :     \"string\" | \"number\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'string'\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            states\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        states:     AnimationStateMetadata[]\n\n                    \n                \n                    \n                        \n                            Type :     AnimationStateMetadata[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            strState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        strState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transitions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transitions:     AnimationTransitionMetadata[]\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTransitionMetadata[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:108\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n\n                \n                    \n                        setstate(state: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:100\n                                \n                            \n                    \n                        \n                                Changing the value of state will cause a transition \nand play an animation if one is defined for that state\nchange.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            state\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        animations\n                    \n                \n\n\n                \n                    \n                        setanimations(animations: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:115\n                                \n                            \n                    \n                        \n                                The description of the animations to play as an array \nof state and transition Angular animation functions.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            animations\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, OnInit, OnDestroy, ElementRef, Optional } from '@angular/core';\nimport { AnimationTransitionMetadata, AnimationStateMetadata, AnimationMetadata } from '@angular/animations';\nimport { StateCSSMap } from './state-css-map/state-css-map.model';\nimport { DynamicAnimationsService } from './dynamic-animations.service';\nimport { NgTransitionService } from './ng-transition/ng-transition.service';\nimport { DynamicAnimationsHandler } from './dynamic-animations-handler/dynamic-animations-handler.model';\nimport { NgTransitionStates } from './ng-transition/ng-transition.states';\nimport { LeaveDirective } from './leave/leave.directive';\nimport { NgStateService } from './ng-state/ng-state.service';\n\n/**\n * This directive is the main interface to dynamic animations.\n * It should be attached to the element that is to be animated.\n * \n * ## Directions\n *\n * In a component define a string member to represent the state\n * of the Animations.  This is analogous to a trigger in normal\n * Angular animations.\n * \n * Then define the animations as an array of state and transition\n * function calls from the Angular animations module.\n * \n * Optionally specify a map of state names to css class names that\n * will be added and removed from the element as the animations \n * start and finish.\n * \n * Then pass those values into this directives state and animations\n * Inputs.\n *\n * If a :leave animation, or *=>void, is speciied you must also both\n * add the @dvkLeave directive to the element and add dvkLeave to \n * the component as a static animation.  This step is only necessary\n * for a :leave animation. Otherwise it can be skipped.\n * \n * The animations can then be played by changing the string bound to\n * the state Input.\n * \n * ## Example\n * \n * ```ts\n * \\@Component({\n *              template: `\n *                  \n *              `\n *              animations:[dvkLeave]\n * })\n * ```\n * class MyComponent {\n *              myState: string = 'closed';\n *              myAniamtions = [\n *                  state('open',style({\n *                      'transform': `scaleY(1.0)`,\n *                      'transform-origin': 'top'\n *                  })),\n *                  state('closed',style({\n *                      'transform': `scaleY(0.0)`,\n *                      'transform-origin': 'top'\n *                  })),\n *                  transition('openclosed',animate('200ms')),\n *                  transition(':enter',animate('200ms',\n *                      style({ 'background-color': 'green' })),\n *                  transition(':leave',animate('200ms',\n *                      style({ 'background-color': 'red' }))\n *              ]\n *              myCssMap = {\n *                  'open': 'is-open',\n *                  'closed': 'is-closed'\n *              }\n * \n *              toggleState() {\n *                  if(this.myState === 'closed') { \n *                      this.myState = 'open'; \n *                   }\n *                   else { \n *                       this.myState = 'closed'; \n *                   }\n *              }\n * }\n * ```\n */\n@Directive({\n  selector: '[dvk-da]'\n})\nexport class DynamicAnimationsDirective implements OnInit, OnDestroy {\n  private stateMode: 'string' | 'number' = 'string';\n  private animationsHandler: DynamicAnimationsHandler;\n  private strState: string;\n\n  /**\n   * Changing the value of state will cause a transition \n   * and play an animation if one is defined for that state\n   * change.\n   */\n  @Input() set state(state:string) { // | number)\n    this.strState = state;\n\n    if(this.animationsHandler) {\n      this.animationsHandler.nextState(this.strState);\n    }\n  }\n\n  private transitions: AnimationTransitionMetadata[];\n  private states: AnimationStateMetadata[];\n\n  /**\n   * The description of the animations to play as an array \n   * of state and transition Angular animation functions.\n   */\n  @Input() set animations(animations: (AnimationTransitionMetadata | AnimationStateMetadata)[]) {\n    this.transitions = [];\n    this.states = [];\n\n    animations.forEach(animation=>{\n      if(this.isTransition(animation)) {\n        this.transitions.push(animation);\n      } else if (this.isState) {\n        this.states.push(animation);\n      }\n    });\n  }\n\n  private isTransition(metaData: AnimationMetadata): metaData is AnimationTransitionMetadata {\n    return !!(metaData as AnimationTransitionMetadata).animation;\n  }\n\n  private isState(metaData: AnimationMetadata): metaData is AnimationStateMetadata {\n    return !!(metaData as AnimationStateMetadata).styles;\n  }\n\n  /**\n   * The map of state name to css class names to apply\n   * as the state changes.\n   */\n  @Input() cssMap: StateCSSMap;\n\n  constructor(\n    private element: ElementRef,\n    private daService: DynamicAnimationsService,\n    private tranService: NgTransitionService,\n    private statesService: NgStateService,\n    @Optional() \n    private dvkLeave: LeaveDirective) {\n      if (this.dvkLeave) {\n        this.dvkLeave.setLeaveTiming(\"500ms\");\n      }\n     }\n\n  ngOnInit() {\n\n    this.animationsHandler = this.daService.createAnimationsHandler(\n      this.element.nativeElement,\n      NgTransitionStates.Void,\n      this.tranService.buildAnimationTransitions(this.transitions),\n      this.statesService.parseStates(this.states),\n      this.cssMap);\n      \n    // enter\n    this.animationsHandler.nextState(this.strState);\n  }\n\n  ngOnDestroy() {\n\n    // leave\n    this.animationsHandler.nextState(NgTransitionStates.Void)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicAnimationsHandler.html":{"url":"interfaces/DynamicAnimationsHandler.html","title":"interface - DynamicAnimationsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicAnimationsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.model.ts\n        \n\n            \n                Description\n            \n            \n                Describe the interface for providing a component \nor directive with run time specified animations \nbased on a series of string transitions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destroy\n                                \n                                \n                                        nextState\n                                \n                                \n                                        setAnimations\n                                \n                                \n                                        setCSSMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references for garbage collection.  Should \nusually be called in ngOnDestroy.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextState\n                                    \n                                \n                                \n                                    \n                                        nextState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transition to the next state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setAnimations\n                                    \n                                \n                                \n                                    \n                                        setAnimations:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set the animations and states to use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCSSMap\n                                    \n                                \n                                \n                                    \n                                        setCSSMap:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set the map of css classes to apply at specific states.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * Describe the interface for providing a component \n * or directive with run time specified animations \n * based on a series of string transitions.\n * \n */\nexport interface DynamicAnimationsHandler {\n\n    /**\n     * Set the map of css classes to apply at specific states.\n     */\n    setCSSMap: (map: StateCSSMap) =>void;\n\n    /**\n     * Transition to the next state.\n     */\n    nextState: (toState:string) => void;\n\n    /**\n     * Set the animations and states to use.\n     */\n    setAnimations: (transitions: AnimationTransitionsMap, styles: AnimationStylesMap) => void;\n\n    /**\n     * Release the references for garbage collection.  Should \n     * usually be called in ngOnDestroy.\n     */\n    destroy: () => void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicAnimationsHandlerConstructor.html":{"url":"interfaces/DynamicAnimationsHandlerConstructor.html","title":"interface - DynamicAnimationsHandlerConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicAnimationsHandlerConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.constructor.ts\n        \n\n            \n                Description\n            \n            \n                The shape of a constructor for an object that can act as the Animations Handler.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { DynamicAnimationsHandler } from './dynamic-animations-handler.model';\nimport { AnimationStatesService } from '../animation-states/animation-states.service';\nimport { StateCssMapperService } from '../state-css-mapper/state-css-mapper.service';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * The shape of a constructor for an object that can act as the Animations Handler.\n */\nexport interface DynamicAnimationsHandlerConstructor {\n    new( \n        element: any,\n        initialState: string,\n        transitions: AnimationTransitionsMap,\n        styles: AnimationStylesMap,\n        cssMap: StateCSSMap,\n        cssMapperService: StateCssMapperService,\n        animationStatesBuilder: AnimationStatesService):DynamicAnimationsHandler;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicAnimationsModule.html":{"url":"modules/DynamicAnimationsModule.html","title":"module - DynamicAnimationsModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicAnimationsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicAnimationsModule\n\n\n\ncluster_DynamicAnimationsModule_declarations\n\n\n\ncluster_DynamicAnimationsModule_exports\n\n\n\ncluster_DynamicAnimationsModule_providers\n\n\n\n\nDynamicAnimationsDirective\n\nDynamicAnimationsDirective\n\n\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsDirective->DynamicAnimationsModule\n\n\n\n\n\nLeaveDirective\n\nLeaveDirective\n\nDynamicAnimationsModule -->\n\nLeaveDirective->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective  -->\n\nDynamicAnimationsModule->DynamicAnimationsDirective \n\n\n\n\n\nLeaveDirective \n\nLeaveDirective \n\nLeaveDirective  -->\n\nDynamicAnimationsModule->LeaveDirective \n\n\n\n\n\nAnimationStatesService\n\nAnimationStatesService\n\nDynamicAnimationsModule -->\n\nAnimationStatesService->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsService\n\nDynamicAnimationsService\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsService->DynamicAnimationsModule\n\n\n\n\n\nNgStateService\n\nNgStateService\n\nDynamicAnimationsModule -->\n\nNgStateService->DynamicAnimationsModule\n\n\n\n\n\nNgTransitionService\n\nNgTransitionService\n\nDynamicAnimationsModule -->\n\nNgTransitionService->DynamicAnimationsModule\n\n\n\n\n\nStateCssMapperService\n\nStateCssMapperService\n\nDynamicAnimationsModule -->\n\nStateCssMapperService->DynamicAnimationsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Dynamic Animations Module provides support for allowing Angular\nAnimations to be passed in at runtime dynamically instead of \ndescribed statically in the Component's metadata.\nThis functionality is handled through the exported \nDynamicAnimationsDirective.\nThe forRoot method must be called to provide the DynamicAnimationsHandler\nand the AnimationStateMachine that are used by the directive.\nThe implementations are handled by default by the DefaultDynamicAnimationsHandlerService\nand the DefaultAnimationsStateMachine respectively but can be \noverriden with custom implementations if desired.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicAnimationsDirective\n                            \n                            \n                                LeaveDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AnimationStatesService\n                            \n                            \n                                     DynamicAnimationsService\n                            \n                            \n                                     NgStateService\n                            \n                            \n                                     NgTransitionService\n                            \n                            \n                                     StateCssMapperService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicAnimationsDirective\n                            \n                            \n                                    LeaveDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DynamicAnimationsService } from './dynamic-animations.service';\nimport { StateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { AnimationStatesService } from './animation-states/animation-states.service';\nimport { DynamicAnimationsHandlerConstructor } from './dynamic-animations-handler/dynamic-animations-handler.constructor';\nimport { DefaultDynamicAnimationsHandlerService } from './default-dynamic-animations-handler/default-dynamic-animations-handler.service';\nimport { DynamicAnimationsHandlerConstructorToken } from './dynamic-animations-handler/dynamic-animations-handler.token';\nimport { AnimationStateMachineConstructorToken } from './animation-state-machine/animation-state-machine.token';\nimport { DefaultAnimationsStateMachine } from './default-animations-state-machine/default-animations-state-machine.service';\nimport { AnimationStateMachineConstructor } from './animation-state-machine/animation-state-machine.constructor';\nimport { DynamicAnimationsDirective } from './dynamic-animations.directive';\nimport { LeaveDirective } from './leave/leave.directive';\nimport { NgTransitionService } from './ng-transition/ng-transition.service';\nimport { NgStateService } from './ng-state/ng-state.service';\n\n/**\n * The Dynamic Animations Module provides support for allowing Angular\n * Animations to be passed in at runtime dynamically instead of \n * described statically in the Component's metadata.\n * \n * This functionality is handled through the exported \n * {@link DynamicAnimationsDirective}.\n * \n * The forRoot method must be called to provide the {@link DynamicAnimationsHandler}\n * and the {@link AnimationStateMachine} that are used by the directive.\n * \n * The implementations are handled by default by the {@link DefaultDynamicAnimationsHandlerService}\n * and the {@link DefaultAnimationsStateMachine} respectively but can be \n * overriden with custom implementations if desired.\n */\n@NgModule({\n  providers: [\n    DynamicAnimationsService,\n    AnimationStatesService, \n    StateCssMapperService,\n    NgTransitionService,\n    NgStateService\n  ],\n  declarations: [DynamicAnimationsDirective, LeaveDirective],\n  exports: [DynamicAnimationsDirective, LeaveDirective]\n})\nexport class DynamicAnimationsModule {\n  static forRoot(\n    animationsHandlerConstructor: DynamicAnimationsHandlerConstructor = DefaultDynamicAnimationsHandlerService,\n    animationsStateMachineConstructor: AnimationStateMachineConstructor = DefaultAnimationsStateMachine \n  ): ModuleWithProviders {\n    return {\n      ngModule: DynamicAnimationsModule,\n      providers: [\n        { \n          provide: DynamicAnimationsHandlerConstructorToken, \n          useValue: animationsHandlerConstructor \n        },\n        {\n          provide: AnimationStateMachineConstructorToken,\n          useValue: animationsStateMachineConstructor\n        }\n      ]\n    };\n  }  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicAnimationsService.html":{"url":"injectables/DynamicAnimationsService.html","title":"injectable - DynamicAnimationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicAnimationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is used to create a DynamicAnimationsHandler \nwith the DynamicAnimationsService method.\nThe DynamicAnimationsHandler \ncan be used to handle animations based on state transitions\nfor the specified element.\nThe DynamicAnimationsHandler can be wired up to a \nparticular component or directive to automatically handle \nthe animations for the specified element.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimationsHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animationsHandlerConstructor: DynamicAnimationsHandlerConstructor, cssMapperService: StateCssMapperService, animationStatesBuilder: AnimationStatesService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animationsHandlerConstructor\n                                                  \n                                                        \n                                                                    DynamicAnimationsHandlerConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMapperService\n                                                  \n                                                        \n                                                                    StateCssMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStatesBuilder\n                                                  \n                                                        \n                                                                    AnimationStatesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createAnimationsHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateAnimationsHandler(element: any, initialState: string, transitions: AnimationTransitionsMap, styles: AnimationStylesMap, cssMap: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Create a DynamicAnimationsHandler for \nthe given element.\nSee DynamicAnimationsService for example\nusage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to attach the animations\nhandler to. \n\n                                                        \n                                                \n                                                \n                                                        initialState\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The initial state of the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationTransitionsMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationStylesMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        cssMap\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The StateCSSMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { StateCSSMap } from './state-css-map/state-css-map.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from './animation-transitions/animation-transitions.model';\nimport { Injectable, Inject } from '@angular/core';\nimport { DynamicAnimationsHandlerConstructor } from './dynamic-animations-handler/dynamic-animations-handler.constructor';\nimport { DynamicAnimationsHandlerConstructorToken } from './dynamic-animations-handler/dynamic-animations-handler.token';\nimport { StateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { AnimationStatesService } from './animation-states/animation-states.service';\n\n/**\n * This import is required for ts to resolve the return of \n * the createAnimationsHandler function.  Without it compilation\n * will fail.\n */\nimport { DynamicAnimationsHandler } from './dynamic-animations-handler/dynamic-animations-handler.model';\n\n/**\n * This service is used to create a {@link DynamicAnimationsHandler} \n * with the {@link DynamicAnimationsService#createAnimationsHandler} method.\n * \n * The {@link DynamicAnimationsHandler} \n * can be used to handle animations based on state transitions\n * for the specified element.\n * \n * The {@link DynamicAnimationsHandler} can be wired up to a \n * particular component or directive to automatically handle \n * the animations for the specified element.\n *\n */\n@Injectable()\nexport class DynamicAnimationsService {\n\n  constructor(\n    @Inject(DynamicAnimationsHandlerConstructorToken) \n    private animationsHandlerConstructor: DynamicAnimationsHandlerConstructor,\n    private cssMapperService: StateCssMapperService,\n    private animationStatesBuilder: AnimationStatesService,\n  ) { }\n\n  /**\n   * Create a {@link DynamicAnimationsHandler} for \n   * the given element.\n   * \n   * See {@link DynamicAnimationsService} for example\n   * usage.\n   * \n   * @param element The element to attach the animations\n   * handler to. \n   * \n   * @param initialState The initial state of the AnimationStateMachine\n   * @param transitions The AnimationTransitionsMap for the AnimationStateMachine\n   * @param styles The AnimationStylesMap for the AnimationStateMachine\n   * @param cssMap The StateCSSMap for the AnimationStateMachine\n   * \n   */\n  createAnimationsHandler(\n    element: any, \n    initialState: string, \n    transitions: AnimationTransitionsMap, \n    styles: AnimationStylesMap,\n    cssMap: StateCSSMap = {}) {\n\n      return new this.animationsHandlerConstructor(\n        element,\n        initialState,\n        transitions,\n        styles,\n        cssMap,\n        this.cssMapperService,\n        this.animationStatesBuilder);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentData.html":{"url":"interfaces/DynamicComponentData.html","title":"interface - DynamicComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-data/dynamic-component-data.model.ts\n        \n\n            \n                Description\n            \n            \n                Represent the data necessary for a dynamic \ncomponent that is suitable for serialization.\nThis part of the model is separate so that it\ncould be put inside a store or some other \nuse case where serialization matters.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        initialValues\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initialValues\n                                    \n                                \n                                \n                                    \n                                        initialValues:     InitialValues\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InitialValues\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InitialValues } from \"../initial-values/initial-values.model\";\n\n/**\n * Represent the data necessary for a dynamic \n * component that is suitable for serialization.\n * \n * This part of the model is separate so that it\n * could be put inside a store or some other \n * use case where serialization matters.\n */\nexport interface DynamicComponentData {\n    name: string;\n    initialValues?: InitialValues;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicComponentDirective.html":{"url":"directives/DynamicComponentDirective.html","title":"directive - DynamicComponentDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicComponentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts\n        \n\n            \n                Description\n            \n            \n                The Dynamic Component Directive is the interface to using\ndvk dynamic components.\nThe directive lifecycle will track any streams specified by\nthe model and handle change detection in the same way the \nasync pipe does.\nDirections\nProvide a DynamicComponentSerializerService \nfor the directive to use.\nconstructor(private dsService: DynamicComponentSerializerService) { \n     this.serializer = this.dsService.createSerializer({\n         'textComponent':TextComponent\n     });\n}And define a DynamicComponentModel for the DynamicComponentDirective\nto initialize with:\ntext$ = new Subject();\n\nonClick = (e: MouseEvent) => {\n     console.log('Dynamic component was clicked');\n}\n\nmodel: DynamicComponentModel = {\n     name: 'textComponent',\n     initialValues:{ \n         text: 'Initial Text',\n     },\n     outputCallbacks: {\n         onClicked: this.onClick\n     },\n     inputs$: {\n         text: this.text$.asObservable()\n     }\n};And in the template for the Component attach the dynamic \ncomponent directive to the desired element.\n  \n  Note\nThe DynamicComponentSerializer was intentionally made\nto be passed in rather than created internally so that the same\nserialzer could be reused for multiple instances of the \nDynamicComponentDirective.  This allows a developer to create \na single serializer at one point and feed it into all desired \ninstances of DynamicComponentDirectives.\n\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-dc]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                compRef\n                            \n                            \n                                    Private\n                                inputSubscriptions\n                            \n                            \n                                    Private\n                                outputSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                attachInputStreams\n                            \n                            \n                                    Protected\n                                attachOutputCallbacks\n                            \n                            \n                                    Protected\n                                closeAllSubscriptions\n                            \n                            \n                                    Protected\n                                createComponent\n                            \n                            \n                                    Protected\n                                createInjector\n                            \n                            \n                                    Protected\n                                destroyComp\n                            \n                            \n                                    Protected\n                                initializeComponent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                setInitialValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-dc\n                            \n                            \n                                serializer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vcRef: ViewContainerRef, resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vcRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-dc\n                    \n                    \n                        The model for this dynamic component to instantiate \nwith.\n\n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serializer\n                    \n                    \n                        The serialzer this instance of the directive should use\nto resolve Components.\n\n                            \n                            Type:    DynamicComponentSerializer\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:97\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            attachInputStreams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachInputStreams(streams: InputStreams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:183\n                            \n                        \n\n\n                \n                    \n                            Attach {@link Observable} input streams to the \nspecified property of the component.\nThe streams will attach a {@link distinctUntilChanged} operator\nto the {@link Observable} and mark the component for change detection\nwhen new values are passed through the stream. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        streams\n                                                        \n                                                                    InputStreams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of property names to {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            attachOutputCallbacks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachOutputCallbacks(callbacks: OutputCallbacks)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:206\n                            \n                        \n\n\n                \n                    \n                            Attach the {@link EventEmitter}s inside the component to\nthe specified callback.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callbacks\n                                                        \n                                                                    OutputCallbacks\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            closeAllSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeAllSubscriptions(subscriptions: Subscription[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:237\n                            \n                        \n\n\n                \n                    \n                            Close all the subscriptions that are still open.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        subscriptions\n                                                        \n                                                                    Subscription[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The array of subscriptions to \npotentially close.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createComponent(constructor: ComponentConstructor, injector: ReflectiveInjector)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:152\n                            \n                        \n\n\n                \n                    \n                            Request a component from angular of the given type.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The component constructor \n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                        \n                                                                    ReflectiveInjector\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The injector to use when creating the component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createInjector(providers: Provider[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:139\n                            \n                        \n\n\n                \n                    \n                            Create an injector from the {@link BBDynamicComponentDirective2}s\n{@link ViewContainerRef}.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        providers\n                                                        \n                                                                    Provider[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                An array of providers for the injector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            destroyComp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyComp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:223\n                            \n                        \n\n\n                \n                    \n                            Clean up all subscriptions and destroy the dynamically\ninstantiated component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initializeComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initializeComponent(compModel: DynamicComponentModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        compModel\n                                                        \n                                                                    DynamicComponentModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:247\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setInitialValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setInitialValues(initValues: InitialValues)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:164\n                            \n                        \n\n\n                \n                    \n                            Set initial values into the component.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initValues\n                                                        \n                                                                    InitialValues\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of property names to values to set.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            compRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        compRef:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputSubscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            outputSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outputSubscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:91\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        componentModel\n                    \n                \n\n\n                \n                    \n                        setcomponentModel(compModel: )\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:104\n                                \n                            \n                    \n                        \n                                The model for this dynamic component to instantiate \nwith.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            compModel\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    Directive,  \n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ReflectiveInjector,\n    ViewContainerRef, \n    EventEmitter,\n    Provider,\n    OnDestroy} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { ComponentConstructor } from './component-constructor/component-constructor.model';\nimport { DynamicComponentModel } from './dynamic-component-model/dynamic-component-model.model';\nimport { DynamicComponentSerializer } from './dynamic-component-serializer/dynamic-component-serializer.model';\nimport { InitialValues } from './initial-values/initial-values.model';\nimport { InputStreams } from './input-streams/input-streams.model';\nimport { OutputCallbacks } from './output-callbacks/output-callbacks.model';\n\n/**\n * The Dynamic Component Directive is the interface to using\n * dvk dynamic components.\n * \n * The directive lifecycle will track any streams specified by\n * the model and handle change detection in the same way the \n * async pipe does.\n *  \n * ### **Directions**\n * \n * Provide a {@link DynamicComponentSerializerService} \n * for the directive to use.\n * \n * ```ts\n * constructor(private dsService: DynamicComponentSerializerService) { \n *     this.serializer = this.dsService.createSerializer({\n *         'textComponent':TextComponent\n *     });\n * }\n * ```\n * \n * And define a {@link DynamicComponentModel} for the DynamicComponentDirective\n * to initialize with:\n * \n * ```ts\n * text$ = new Subject();\n * \n * onClick = (e: MouseEvent) => {\n *     console.log('Dynamic component was clicked');\n * }\n * \n * model: DynamicComponentModel = {\n *     name: 'textComponent',\n *     initialValues:{ \n *         text: 'Initial Text',\n *     },\n *     outputCallbacks: {\n *         onClicked: this.onClick\n *     },\n *     inputs$: {\n *         text: this.text$.asObservable()\n *     }\n * };\n * ```\n * \n * And in the template for the Component attach the dynamic \n * component directive to the desired element.\n * \n * ```html\n *  \n *  \n * ``` \n * \n * ###### **Note**\n * \n * The {@link DynamicComponentSerializer} was intentionally made\n * to be passed in rather than created internally so that the same\n * serialzer could be reused for multiple instances of the \n * DynamicComponentDirective.  This allows a developer to create \n * a single serializer at one point and feed it into all desired \n * instances of DynamicComponentDirectives.\n */\n@Directive({\n  selector: '[dvk-dc]',\n  exportAs:'dynamicComp2',\n})\nexport class DynamicComponentDirective implements OnDestroy {\n    protected compRef: ComponentRef;\n    private inputSubscriptions: Subscription[] = [];\n    private outputSubscriptions: Subscription[] = [];\n\n    /**\n     * The serialzer this instance of the directive should use\n     * to resolve Components.\n     */\n    @Input() serializer: DynamicComponentSerializer;\n\n    /**\n     * The model for this dynamic component to instantiate \n     * with.\n     */\n    @Input('dvk-dc') \n    set componentModel(compModel: DynamicComponentModel) {\n      this.initializeComponent(compModel);\n    }\n\n    constructor(protected vcRef: ViewContainerRef,\n                protected resolver: ComponentFactoryResolver) {\n    }\n\n    protected initializeComponent(compModel: DynamicComponentModel) {\n        const componentConstructor = this.serializer.getComponent(compModel.name);\n\n        if (!componentConstructor) {\n            console.error(`${compModel.name} was not found for deserialization.`)\n          return;\n        }\n\n        this.destroyComp();\n\n        this.compRef = this.createComponent(\n            componentConstructor, \n            this.createInjector(compModel.providers));\n\n        this.setInitialValues(compModel.initialValues);\n        this.attachInputStreams(compModel.inputs$);\n        this.attachOutputCallbacks(compModel.outputCallbacks);\n\n        this.vcRef.insert(this.compRef.hostView);\n        this.compRef.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Create an injector from the {@link BBDynamicComponentDirective2}s\n     * {@link ViewContainerRef}.\n     * @param providers An array of providers for the injector.\n     */\n    protected createInjector(providers: Provider[]) {\n        providers = providers || [];\n        return ReflectiveInjector\n            .fromResolvedProviders(\n            ReflectiveInjector.resolve(providers),\n            this.vcRef.parentInjector);\n    }\n\n    /**\n     * Request a component from angular of the given type.  \n     * @param constructor The component constructor \n     * @param injector The injector to use when creating the component.\n     */\n    protected createComponent(\n        constructor: ComponentConstructor, \n        injector: ReflectiveInjector) {\n        return this.resolver\n            .resolveComponentFactory(constructor)\n            .create(injector);\n    }\n\n    /**\n     * Set initial values into the component.\n     * @param initValues The map of property names to values to set.\n     */\n    protected setInitialValues(initValues: InitialValues) {\n        if (initValues) {\n            Object.keys(initValues).map(\n                input => {\n                    this.compRef.instance[input] = initValues[input];\n                }\n            )\n        }\n    }\n\n    /**\n     * Attach {@link Observable} input streams to the \n     * specified property of the component.\n     * \n     * The streams will attach a {@link distinctUntilChanged} operator\n     * to the {@link Observable} and mark the component for change detection\n     * when new values are passed through the stream. \n     * @param streams The map of property names to {@link Observable}s to attach.\n     */\n    protected attachInputStreams(streams: InputStreams) {\n        if(streams) {\n            this.inputSubscriptions = \n                Object.keys(streams).map(input=>{\n                    return streams[input]\n                        .pipe(\n                            distinctUntilChanged()\n                        )\n                        .subscribe(value=>{\n                            this.compRef.instance[input] = value;\n                            this.compRef.changeDetectorRef.markForCheck();\n                        })\n                });\n        }\n    }\n\n\n    /**\n     * Attach the {@link EventEmitter}s inside the component to\n     * the specified callback.\n     * @param callbacks The map of {@link EventEmitter} property names to\n     * callbacks that will be executed when the {@link EventEmitter} fires.\n     */\n    protected attachOutputCallbacks(callbacks: OutputCallbacks) {\n        if(callbacks) {\n            this.outputSubscriptions = \n                Object.keys(callbacks)\n                    .map(cb=>{\n                        return (this.compRef.instance[cb] as EventEmitter)\n                            .subscribe(event=>{\n                                callbacks[cb](event);\n                            });\n                    });\n        }\n    }\n\n    /**\n     * Clean up all subscriptions and destroy the dynamically\n     * instantiated component.\n     */\n    protected destroyComp() {\n        this.closeAllSubscriptions(this.outputSubscriptions);\n        this.closeAllSubscriptions(this.inputSubscriptions);\n\n        if (this.compRef) {\n            this.compRef.destroy();\n        }\n    }\n\n    /**\n     * Close all the subscriptions that are still open.\n     * @param subscriptions The array of subscriptions to \n     * potentially close.\n     */\n    protected closeAllSubscriptions(subscriptions: Subscription[]) {\n        if(subscriptions){\n            subscriptions.forEach(sub=>{\n                if(!sub.closed) {\n                    sub.unsubscribe();\n                }\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyComp();\n    } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentModel.html":{"url":"interfaces/DynamicComponentModel.html","title":"interface - DynamicComponentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-model/dynamic-component-model.model.ts\n        \n\n            \n                Description\n            \n            \n                This model combines DynamicComponentData with \nan optional set of observable streams to tie to inputs\nand callbacks to tie to EventEmitters in the \ndynamically created component.\n\n            \n\n            \n                Extends\n            \n            \n                    DynamicComponentData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inputs$\n                                \n                                \n                                            Optional\n                                        outputCallbacks\n                                \n                                \n                                            Optional\n                                        providers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inputs$\n                                    \n                                \n                                \n                                    \n                                        inputs$:     InputStreams\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputStreams\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputCallbacks\n                                    \n                                \n                                \n                                    \n                                        outputCallbacks:     OutputCallbacks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputCallbacks\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                    \n                                \n                                \n                                    \n                                        providers:     Provider[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Provider[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Provider } from \"@angular/core\";\nimport { InputStreams } from \"../input-streams/input-streams.model\";\nimport { OutputCallbacks } from \"../output-callbacks/output-callbacks.model\";\nimport { DynamicComponentData } from '../dynamic-component-data/dynamic-component-data.model';\n\n/**\n * This model combines {@link DynamicComponentData} with \n * an optional set of observable streams to tie to inputs\n * and callbacks to tie to EventEmitters in the \n * dynamically created component.\n */\nexport interface DynamicComponentModel extends DynamicComponentData {\n    inputs$?: InputStreams;\n    outputCallbacks?: OutputCallbacks;\n    providers?: Provider[],\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializer.html":{"url":"interfaces/DynamicComponentSerializer.html","title":"interface - DynamicComponentSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts\n        \n\n            \n                Description\n            \n            \n                Handle serialization  between a string name and a component constructor.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getComponent\n                                \n                                \n                                    getName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(componentName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts:7\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentConstructor\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName(componentConstructor: ComponentConstructor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * Handle serialization  between a string name and a component constructor.\n */\nexport interface DynamicComponentSerializer {\n    getComponent(componentName: string): ComponentConstructor;\n    getName(componentConstructor: ComponentConstructor):string;\n}\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializerConstructor.html":{"url":"interfaces/DynamicComponentSerializerConstructor.html","title":"interface - DynamicComponentSerializerConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializerConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.constructor.ts\n        \n\n            \n                Description\n            \n            \n                Definition for a component serializer constructor.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { DynamicComponentSerializer } from \"./dynamic-component-serializer.model\";\nimport { DynamicComponentSerializerMap } from \"../dynamic-component-serializer-map/dynamic-component-serializer-map.model\";\n\n/**\n * Definition for a component serializer constructor.\n */\nexport interface DynamicComponentSerializerConstructor {\n    new(serializerMap: DynamicComponentSerializerMap):DynamicComponentSerializer;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializerMap.html":{"url":"interfaces/DynamicComponentSerializerMap.html","title":"interface - DynamicComponentSerializerMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializerMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer-map/dynamic-component-serializer-map.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an object that can handle\nserialization between a string name and a \nComponent class instance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deserializeMap\n                                \n                                \n                                        serializeMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deserializeMap\n                                    \n                                \n                                \n                                    \n                                        deserializeMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serializeMap\n                                    \n                                \n                                \n                                    \n                                        serializeMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * The shape of an object that can handle\n * serialization between a string name and a \n * Component class instance.\n */\nexport interface DynamicComponentSerializerMap {\n    serializeMap: Map;\n    deserializeMap: Map;\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicComponentSerializerService.html":{"url":"injectables/DynamicComponentSerializerService.html","title":"injectable - DynamicComponentSerializerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentSerializerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts\n        \n\n            \n                Description\n            \n            \n                Create a serializer for dynamic components to be resolved from \nstring names.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSerializer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializerConstructor: DynamicComponentSerializerConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializerConstructor\n                                                  \n                                                        \n                                                                    DynamicComponentSerializerConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateSerializer(map: DynamicComponentsMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    DynamicComponentsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { ComponentConstructor } from '../component-constructor/component-constructor.model';\nimport { DynamicComponentsMap } from '../dynamic-component-map/dynamic-component-map.model';\nimport { DynamicComponentSerializerMap } from '../dynamic-component-serializer-map/dynamic-component-serializer-map.model';\nimport { DynamicComponentSerializerConstructorToken } from './dynamic-component-serializer.token';\nimport { DynamicComponentSerializerConstructor } from './dynamic-component-serializer.constructor';\n\n/**\n * Create a serializer for dynamic components to be resolved from \n * string names.\n */\n@Injectable()\nexport class DynamicComponentSerializerService {\n\n  constructor(\n    @Inject(DynamicComponentSerializerConstructorToken)\n    private serializerConstructor: DynamicComponentSerializerConstructor\n  ) { }\n\n  createSerializer(map: DynamicComponentsMap) {\n    const serializerMap: DynamicComponentSerializerMap = {\n      serializeMap: new Map(),\n      deserializeMap: new Map(),\n    };\n\n    Object.keys(map).forEach(name=>{\n      serializerMap.serializeMap.set(map[name], name);\n      serializerMap.deserializeMap.set(name, map[name]);\n    });\n\n    return new this.serializerConstructor(serializerMap);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentsMap.html":{"url":"interfaces/DynamicComponentsMap.html","title":"interface - DynamicComponentsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of string names to component constructors.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [serializedName: string]:    ComponentConstructor\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ComponentConstructor } from \"../component-constructor/component-constructor.model\";\n\n/**\n * A map of string names to component constructors.\n */\nexport interface DynamicComponentsMap {\n    [serializedName:string]: ComponentConstructor;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicComponentsModule.html":{"url":"modules/DynamicComponentsModule.html","title":"module - DynamicComponentsModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicComponentsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicComponentsModule\n\n\n\ncluster_DynamicComponentsModule_declarations\n\n\n\ncluster_DynamicComponentsModule_exports\n\n\n\ncluster_DynamicComponentsModule_providers\n\n\n\n\nDynamicComponentDirective\n\nDynamicComponentDirective\n\n\n\nDynamicComponentsModule\n\nDynamicComponentsModule\n\nDynamicComponentsModule -->\n\nDynamicComponentDirective->DynamicComponentsModule\n\n\n\n\n\nDynamicComponentDirective \n\nDynamicComponentDirective \n\nDynamicComponentDirective  -->\n\nDynamicComponentsModule->DynamicComponentDirective \n\n\n\n\n\nDynamicComponentSerializerService\n\nDynamicComponentSerializerService\n\nDynamicComponentsModule -->\n\nDynamicComponentSerializerService->DynamicComponentsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-components.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Dynamic Components Module exports the DynamicComponentDirective\nthat can be used to create dynamic components while alllowing them to\nbe wired up with input and output streams similar to components \ninstantiated normally.\nThe forRoot method must be called in order to provide the directive \nwith an implementation of the DynamicComponentSerializer which\nhandles the mapping of string names to actual Component class instances.\nThe default implementation DefaultDynamicComponentSerializer \nmay be overriden with a custom implementation if desired.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicComponentDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicComponentSerializerService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicComponentDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponentDirective } from './dynamic-component.directive';\nimport { DynamicComponentSerializerService } from './dynamic-component-serializer/dynamic-component-serializer.service';\nimport { DynamicComponentSerializerConstructorToken } from './dynamic-component-serializer/dynamic-component-serializer.token';\nimport { DefaultDynamicComponentSerializer } from './default-dynamic-component-serializer/default-dynamic-component-serializer';\nimport { DynamicComponentSerializerConstructor } from './dynamic-component-serializer/dynamic-component-serializer.constructor';\n\n/**\n * The Dynamic Components Module exports the {@link DynamicComponentDirective}\n * that can be used to create dynamic components while alllowing them to\n * be wired up with input and output streams similar to components \n * instantiated normally.\n * \n * The forRoot method must be called in order to provide the directive \n * with an implementation of the {@link DynamicComponentSerializer} which\n * handles the mapping of string names to actual Component class instances.\n * \n * The default implementation {@link DefaultDynamicComponentSerializer} \n * may be overriden with a custom implementation if desired.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DynamicComponentDirective \n  ],\n  exports: [\n    DynamicComponentDirective \n  ],\n  providers: [\n    DynamicComponentSerializerService\n  ]\n})\nexport class DynamicComponentsModule {\n  static forRoot(\n    serializerConstrutor: DynamicComponentSerializerConstructor = DefaultDynamicComponentSerializer\n  ): ModuleWithProviders {\n    return {\n      ngModule: DynamicComponentsModule,\n      providers: [\n        { \n          provide: DynamicComponentSerializerConstructorToken,\n          useValue: serializerConstrutor\n        }\n      ]\n    };\n  }  \n }\n\n \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LeaveDirective.html":{"url":"directives/LeaveDirective.html","title":"directive - LeaveDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  LeaveDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is a stub to handle :leave animations specified\ndynamically.  Angular will remove an element without waiting for \na dynamic animation to run but will wait for a static one.  So we\ndefine a stub :leave animation that does nothing but plays for the\namount of time needed for the specified dynamic :leave.\nCurrently this is under development and is hard coded to wait \nfor 500ms no matter how long the dynamic animation takes. \nEventually it will configure the wait time based on the actual\ndynamic animation's timing.\nSee DynamicAnimationsDirective for usage.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvkLeave]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setLeaveTiming\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @dvkLeave\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        @dvkLeave:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLeaveTiming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLeaveTiming(timing: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timing\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { trigger, transition, animate, style } from '@angular/animations';\nimport { Directive, HostBinding } from '@angular/core';\n\n/**\n * This directive is a stub to handle :leave animations specified\n * dynamically.  Angular will remove an element without waiting for \n * a dynamic animation to run but will wait for a static one.  So we\n * define a stub :leave animation that does nothing but plays for the\n * amount of time needed for the specified dynamic :leave.\n * \n * Currently this is under development and is hard coded to wait \n * for 500ms no matter how long the dynamic animation takes. \n * Eventually it will configure the wait time based on the actual\n * dynamic animation's timing.\n * \n * See {@link DynamicAnimationsDirective} for usage.\n */\n@Directive({\n  selector: '[dvkLeave]'\n})\nexport class LeaveDirective {\n  @HostBinding(\"@dvkLeave\") public timingParams: any = null;\n  \n  public setLeaveTiming(timing: string): void {\n    this.timingParams = dvkLeaveTiming(timing);\n  }\n}\n\n/**\n * Stub animation for the :leave transition\n */\nexport const dvkLeave =  [\n  trigger(\"dvkLeave\", [\n    transition(\":leave\", \n      animate(\"{{ timing }}\"), \n        { params: { timing: \"0ms\" }})\n  ])\n]\n\n/**\n * Stub function for setting the timing of a \n * :leave transition\n * @param timing The timing the animation should\n * last.\n */\nexport function dvkLeaveTiming(timing: any) {\n  return { value: null, params: { timing } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgStateService.html":{"url":"injectables/NgStateService.html","title":"injectable - NgStateService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts\n        \n\n            \n                Description\n            \n            \n                Converts an array of AnimationStateMetadata objects into \nan AnimationStylesMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseStates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseStates\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseStates(states: AnimationStateMetadata[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Convert metadata to AnimationStylesMap\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                        \n                                                                    AnimationStateMetadata[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The metadata to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationStylesMap\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimationStateMetadata } from '@angular/animations';\nimport { AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\n\n/**\n * Converts an array of AnimationStateMetadata objects into \n * an {@link AnimationStylesMap}.\n */\n@Injectable()\nexport class NgStateService {\n  constructor() { }\n\n  /**\n   * Convert metadata to {@link AnimationStylesMap}\n   * @param states The metadata to convert.\n   */\n  parseStates(states: AnimationStateMetadata[]): AnimationStylesMap {\n    return states.reduce((map,state)=>{\n      map[state.name] = state.styles;\n      return map;\n    },{});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgTransitionService.html":{"url":"injectables/NgTransitionService.html","title":"injectable - NgTransitionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgTransitionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the ability to convert an array of AnimationTransitionMetadata\ninto an AnimationTransitionsMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildAnimationTransitions\n                            \n                            \n                                    Private\n                                parseTransitionExpression\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildAnimationTransitions\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildAnimationTransitions(transitions: AnimationTransitionMetadata[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Build an AnimationTransitionsMap from an array of \nAnimationTransitionMetadata objects.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionMetadata[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The AnimationTransitionMetadata[] to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseTransitionExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseTransitionExpression(transition: AnimationTransitionMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Parse an individual AnimationTransitionMetadata for the transition\nexpression and convert that to a valid entry in an \nAnimationTransitionsMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        transition\n                                                        \n                                                                    AnimationTransitionMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The AnimationTransitionMetadata to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimationTransitionMetadata } from '@angular/animations';\nimport { AnimationTransitionsMap } from '../animation-transitions/animation-transitions.model';\nimport { NgTransitionSymbols } from './ng-transition.symbols';\nimport { NgTransitionStates } from './ng-transition.states';\n\n/**\n * Provides the ability to convert an array of AnimationTransitionMetadata\n * into an {@link AnimationTransitionsMap}.\n */\n@Injectable()\nexport class NgTransitionService {\n  \n  constructor() { }\n\n  /**\n   * Build an {@link AnimationTransitionsMap} from an array of \n   * AnimationTransitionMetadata objects.\n   * \n   * @param transitions The AnimationTransitionMetadata[] to convert.\n   */\n  buildAnimationTransitions(transitions: AnimationTransitionMetadata[]) {\n    return transitions.reduce((transMap: AnimationTransitionsMap, transition)=>{\n      let newTransitions = this.parseTransitionExpression(transition);\n      Object.keys(newTransitions).forEach(fromState=>{\n        Object.keys(newTransitions[fromState]).forEach(toState=>{\n          transMap[fromState] = transMap[fromState] || {};\n          transMap[fromState][toState] = newTransitions[fromState][toState];\n        })\n      });\n      return transMap;\n    },{});\n  }\n\n  /**\n   * Parse an individual AnimationTransitionMetadata for the transition\n   * expression and convert that to a valid entry in an \n   * {@link AnimationTransitionsMap}.\n   * @param transition The AnimationTransitionMetadata to convert.\n   */\n  private parseTransitionExpression(transition: AnimationTransitionMetadata) {\n    const expressions = transition.expr;\n    let transitions: AnimationTransitionsMap = {};\n\n    if(this.isString(expressions)) {\n      expressions.split(',').forEach(expression=>{\n        if(expression.includes(NgTransitionSymbols.Either)) {\n          const states = expression.split(NgTransitionSymbols.To);\n          const state1 = states[0].trim();\n          const state2 = states[1].trim();\n\n          transitions = {\n            ...transitions,\n            [state1]: {\n              ...transitions[state1],\n              [state2]:transition.animation\n            },\n            [state2]: {\n              ...transitions[state2],\n              [state1]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.To)) {\n          const states = expression.split(NgTransitionSymbols.To);\n          const fromState = states[0].trim();\n          const toState = states[1].trim();\n\n          transitions = {\n            ...transitions,\n            [fromState]: {\n              ...transitions[fromState],\n              [toState]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Enter)) {\n          transitions = {\n            ...transitions,\n            [NgTransitionStates.Void]: {\n              ...transitions[NgTransitionStates.Void],\n              [NgTransitionStates.WildCard]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Leave)) {\n          transitions = {\n            ...transitions,\n            [NgTransitionStates.WildCard]: {\n              ...transitions[NgTransitionStates.WildCard],\n              [NgTransitionStates.Void]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Inc)) {\n          console.error(`${expression} is not yet supported`);\n        }\n        else if(expression.includes(NgTransitionSymbols.Dec)) {\n          console.error(`${expression} is not yet supported`);\n        }\n      })\n    }\n    return transitions;\n  }\n  \n  /**\n   * @ignore\n   */\n  private isString(expression: any): expression is string {\n    return expression.length !== null && expression.length !== undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateCSSMap.html":{"url":"interfaces/StateCSSMap.html","title":"interface - StateCSSMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateCSSMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts\n        \n\n            \n                Description\n            \n            \n                Map a state to a css class that \nshould be applied to the element\nbeing animated.\nThe old class will be removed before\nany transition animation is played.\nThe new class will be applied after\nany transition animations complete.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [state: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts:18\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface StateCSSMap {\n    [state:string]: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateCSSMapper.html":{"url":"interfaces/StateCSSMapper.html","title":"interface - StateCSSMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateCSSMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an object that can map string state names \nto CSS classes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        add\n                                \n                                \n                                        destroy\n                                \n                                \n                                        remove\n                                \n                                \n                                        removeAll\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        add\n                                    \n                                \n                                \n                                    \n                                        add:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Add the css class defined by the StateCSSMap \nfor the given state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references used by the closure.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Remove the css class defined by the StateCSSMap \nfor the given state. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeAll\n                                    \n                                \n                                \n                                    \n                                        removeAll:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Remove all css classes defined by the StateCSSMap\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StateCSSMapper {\n\n  /**\n   * Remove the css class defined by the {@link StateCSSMap} \n   * for the given state. \n   */\n  remove: (state:string)=>void;\n\n  /**\n   * Remove all css classes defined by the {@link StateCSSMap}\n   */\n  removeAll: ()=>void;\n\n  /**\n   * Add the css class defined by the {@link StateCSSMap} \n   * for the given state.\n   */\n  add: (state:string)=> void;\n\n  /**\n   * Release the references used by the closure.\n   */\n  destroy: ()=> void;\n}\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateCssMapperService.html":{"url":"injectables/StateCssMapperService.html","title":"injectable - StateCssMapperService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StateCssMapperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts\n        \n\n            \n                Description\n            \n            \n                This service creates a closure that handles \nadding and removing css classes form a given element\nbased on the StateCSSMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStateCSSMapper\n                            \n                            \n                                getCSSClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                    RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStateCSSMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStateCSSMapper(element: any, map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Create the StateCSSMapper to apply to the given element.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The element to apply the css classes to.\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The StateCSSMap that defines the css classes and states.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCSSClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCSSClass(state: string, map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Get the css class for the given state.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The state.\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The StateCSSMap to look the state up in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, RendererFactory2 } from '@angular/core';\nimport { StateCSSMapper } from './state-css-mapper.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * This service creates a closure that handles \n * adding and removing css classes form a given element\n * based on the {@link StateCSSMap}.\n */\n@Injectable()\nexport class StateCssMapperService {\n\n  constructor(private rendererFactory: RendererFactory2) {\n  }\n\n  /**\n   * Get the css class for the given state.\n   * \n   * @param state The state.\n   * @param map The StateCSSMap to look the state up in.\n   */\n  getCSSClass(state:string, map: StateCSSMap) {\n    return map && map[state];\n  }\n\n  /**\n   * Create the {@link StateCSSMapper} to apply to the given element.\n   * \n   * @param element The element to apply the css classes to.\n   * @param map The StateCSSMap that defines the css classes and states.\n   */\n  createStateCSSMapper(element: any, map: StateCSSMap) {\n    let renderer = this.rendererFactory.createRenderer(element,null);\n\n    return {\n      remove: (state:string)=> {\n        renderer.removeClass(element,this.getCSSClass(state,map));\n      },\n      add: (state:string)=> {\n        renderer.addClass(element,this.getCSSClass(state,map));\n      },\n      removeAll: ()=> {\n        Object.keys(map).forEach(entry=>renderer.removeClass(element, map[entry]));\n      },\n      destroy: ()=> {\n        renderer.destroy();\n        renderer = null;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts\n            \n            \n                interface\n            \n            \n                ContainersMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.model.ts\n            \n            \n                interface\n            \n            \n                ContentConductorConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.token.ts\n            \n            \n                variable\n            \n            \n                ContentConductorConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor.model.ts\n            \n            \n                interface\n            \n            \n                ContentConductor\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor.service.ts\n            \n            \n                injectable\n            \n            \n                ContentConductorService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts\n            \n            \n                directive\n            \n            \n                ContentContainerDirective\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-container/content-container.model.ts\n            \n            \n                interface\n            \n            \n                ContentContainer\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content/content.directive.ts\n            \n            \n                directive\n            \n            \n                ContentDirective\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts\n            \n            \n                class\n            \n            \n                DefaultContentConductorService\n            \n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.constructor.ts\n            \n            \n                interface\n            \n            \n                AnimationStateMachineConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.model.ts\n            \n            \n                interface\n            \n            \n                AnimationStateMachine\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.token.ts\n            \n            \n                variable\n            \n            \n                AnimationStateMachineConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts\n            \n            \n                injectable\n            \n            \n                AnimationStatesService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n            \n            \n                interface\n            \n            \n                AnimationStylesMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n            \n            \n                interface\n            \n            \n                AnimationTransitionsMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/default-animations-state-machine/default-animations-state-machine.service.ts\n            \n            \n                class\n            \n            \n                DefaultAnimationsStateMachine\n            \n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts\n            \n            \n                class\n            \n            \n                DefaultDynamicAnimationsHandlerService\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.constructor.ts\n            \n            \n                interface\n            \n            \n                DynamicAnimationsHandlerConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.model.ts\n            \n            \n                interface\n            \n            \n                DynamicAnimationsHandler\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.token.ts\n            \n            \n                variable\n            \n            \n                DynamicAnimationsHandlerConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts\n            \n            \n                directive\n            \n            \n                DynamicAnimationsDirective\n            \n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicAnimationsService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave-pseudo-animation/leave-pseudo-animation.ts\n            \n            \n                variable\n            \n            \n                dvkLeave\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                directive\n            \n            \n                LeaveDirective\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                function\n            \n            \n                dvkLeaveTiming\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                variable\n            \n            \n                dvkLeave\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts\n            \n            \n                injectable\n            \n            \n                NgStateService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts\n            \n            \n                injectable\n            \n            \n                NgTransitionService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts\n            \n            \n                interface\n            \n            \n                StateCSSMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.model.ts\n            \n            \n                interface\n            \n            \n                StateCSSMapper\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts\n            \n            \n                injectable\n            \n            \n                StateCssMapperService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/component-constructor/component-constructor.model.ts\n            \n            \n                interface\n            \n            \n                ComponentConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts\n            \n            \n                class\n            \n            \n                DefaultDynamicComponentSerializer\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-data/dynamic-component-data.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentData\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentsMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-model/dynamic-component-model.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentModel\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer-map/dynamic-component-serializer-map.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializerMap\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.constructor.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializerConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializer\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicComponentSerializerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.token.ts\n            \n            \n                variable\n            \n            \n                DynamicComponentSerializerConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts\n            \n            \n                directive\n            \n            \n                DynamicComponentDirective\n            \n            \n                62 %\n                (10/16)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.1\n        \n            @angular/common : ^6.1.1\n        \n            @angular/core : ^6.1.1\n        \n            @angular/compiler : ^6.1.1\n        \n            @angular/forms : ^6.1.1\n        \n            @angular/http : ^6.1.1\n        \n            @angular/platform-browser : ^6.1.1\n        \n            @angular/platform-browser-dynamic : ^6.1.1\n        \n            @angular/router : ^6.1.1\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgTransitionStates   (projects/.../ng-transition.states.ts)\n                        \n                        \n                            NgTransitionSymbols   (projects/.../ng-transition.symbols.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.states.ts\n    \n        \n            \n                \n                    \n                        \n                        NgTransitionStates\n                    \n                \n                    \n                        \n                            States predefined by the Angular animations.\n\n                        \n                    \n                        \n                            \n                                 WildCard\n                            \n                        \n                        \n                            \n                                Value: *\n                            \n                        \n                        \n                            \n                                 Void\n                            \n                        \n                        \n                            \n                                Value: void\n                            \n                        \n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.symbols.ts\n    \n        \n            \n                \n                    \n                        \n                        NgTransitionSymbols\n                    \n                \n                    \n                        \n                            Symbols used by the angular animations transition\nexpression definitions.\n\n                        \n                    \n                        \n                            \n                                 To\n                            \n                        \n                        \n                            \n                                Value: =>\n                            \n                        \n                        \n                            \n                                 Either\n                            \n                        \n                        \n                            \n                                Value: \n                            \n                        \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                Value: :enter\n                            \n                        \n                        \n                            \n                                 Leave\n                            \n                        \n                        \n                            \n                                Value: :leave\n                            \n                        \n                        \n                            \n                                 Inc\n                            \n                        \n                        \n                            \n                                Value: :increment\n                            \n                        \n                        \n                            \n                                 Dec\n                            \n                        \n                        \n                            \n                                Value: :decrement\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dvkLeaveTiming   (projects/.../leave.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeaveTiming\n                            \n                            \n                        \n                    \n                \n                \n                    \ndvkLeaveTiming(timing: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Stub function for setting the timing of a \n:leave transition\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timing\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The timing the animation should\nlast.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@UAT/DynamicViewKit\nThe Dynamic View Kit is a library for building components\nand directives with dynamic capabilities.\nThe goal is to provide a set of tools that allow component and\ndirective authors to create feature rich components whose \nfunctionality can be modified by end users.\nFeatures\nCurrently the dvk offers 3 features for building components and \ndirectives.\n\nContent Conductor\nDynamic Animations\nDynamic Components\n\nInstallation\nComing soon...\nBuilding\nThe dvk library can be compiled with the command:\nng build dvkDemo Application\nThe development environment and demo application can then be \nstarted with the command:\nng serveAngular CLI\nThis project was generated with Angular CLI version 6.1.2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 tme321\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ContentConductorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicAnimationsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicComponentsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentConductorModule\n\n\n\ncluster_ContentConductorModule_declarations\n\n\n\ncluster_ContentConductorModule_exports\n\n\n\ncluster_ContentConductorModule_providers\n\n\n\ncluster_DynamicAnimationsModule\n\n\n\ncluster_DynamicAnimationsModule_declarations\n\n\n\ncluster_DynamicAnimationsModule_exports\n\n\n\ncluster_DynamicAnimationsModule_providers\n\n\n\ncluster_DynamicComponentsModule\n\n\n\ncluster_DynamicComponentsModule_declarations\n\n\n\ncluster_DynamicComponentsModule_exports\n\n\n\ncluster_DynamicComponentsModule_providers\n\n\n\n\nContentContainerDirective\n\nContentContainerDirective\n\n\n\nContentConductorModule\n\nContentConductorModule\n\nContentConductorModule -->\n\nContentContainerDirective->ContentConductorModule\n\n\n\n\n\nContentDirective\n\nContentDirective\n\nContentConductorModule -->\n\nContentDirective->ContentConductorModule\n\n\n\n\n\nContentContainerDirective \n\nContentContainerDirective \n\nContentContainerDirective  -->\n\nContentConductorModule->ContentContainerDirective \n\n\n\n\n\nContentDirective \n\nContentDirective \n\nContentDirective  -->\n\nContentConductorModule->ContentDirective \n\n\n\n\n\nContentConductorService\n\nContentConductorService\n\nContentConductorModule -->\n\nContentConductorService->ContentConductorModule\n\n\n\n\n\nDynamicAnimationsDirective\n\nDynamicAnimationsDirective\n\n\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsDirective->DynamicAnimationsModule\n\n\n\n\n\nLeaveDirective\n\nLeaveDirective\n\nDynamicAnimationsModule -->\n\nLeaveDirective->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective  -->\n\nDynamicAnimationsModule->DynamicAnimationsDirective \n\n\n\n\n\nLeaveDirective \n\nLeaveDirective \n\nLeaveDirective  -->\n\nDynamicAnimationsModule->LeaveDirective \n\n\n\n\n\nAnimationStatesService\n\nAnimationStatesService\n\nDynamicAnimationsModule -->\n\nAnimationStatesService->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsService\n\nDynamicAnimationsService\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsService->DynamicAnimationsModule\n\n\n\n\n\nNgStateService\n\nNgStateService\n\nDynamicAnimationsModule -->\n\nNgStateService->DynamicAnimationsModule\n\n\n\n\n\nNgTransitionService\n\nNgTransitionService\n\nDynamicAnimationsModule -->\n\nNgTransitionService->DynamicAnimationsModule\n\n\n\n\n\nStateCssMapperService\n\nStateCssMapperService\n\nDynamicAnimationsModule -->\n\nStateCssMapperService->DynamicAnimationsModule\n\n\n\n\n\nDynamicComponentDirective\n\nDynamicComponentDirective\n\n\n\nDynamicComponentsModule\n\nDynamicComponentsModule\n\nDynamicComponentsModule -->\n\nDynamicComponentDirective->DynamicComponentsModule\n\n\n\n\n\nDynamicComponentDirective \n\nDynamicComponentDirective \n\nDynamicComponentDirective  -->\n\nDynamicComponentsModule->DynamicComponentDirective \n\n\n\n\n\nDynamicComponentSerializerService\n\nDynamicComponentSerializerService\n\nDynamicComponentsModule -->\n\nDynamicComponentSerializerService->DynamicComponentsModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            3 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InitialValues   (projects/.../initial-values.model.ts)\n                        \n                        \n                            InputStreams   (projects/.../input-streams.model.ts)\n                        \n                        \n                            NotTypedKeys   (projects/.../not-typed-keys.model.ts)\n                        \n                        \n                            OutputCallbacks   (projects/.../output-callbacks.model.ts)\n                        \n                        \n                            TypedKeys   (projects/.../typed-keys.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-components/initial-values/initial-values.model.ts\n    \n        \n            \n                \n                    \n                        \n                        InitialValues\n                    \n                \n                    \n                        \n                            A map of keys to values where \nthe keys are properties of \ntype T and the values are \nthe same as the property type.\n\n                        \n                    \n                \n                    \n                        InitialValues:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/dynamic-components/input-streams/input-streams.model.ts\n    \n        \n            \n                \n                    \n                        \n                        InputStreams\n                    \n                \n                    \n                        \n                            A map of Observables whose keys are \nany properties of type T that are not \n{@link EventEmitter}s.\n\n                        \n                    \n                \n                    \n                        InputStreams:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/common/not-typed-keys.model.ts\n    \n        \n            \n                \n                    \n                        \n                        NotTypedKeys\n                    \n                \n                    \n                        \n                            Constrain a set of keys from type T \nthat are not of type C.\n\n                        \n                    \n                \n                    \n                        NotTypedKeys:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/dynamic-components/output-callbacks/output-callbacks.model.ts\n    \n        \n            \n                \n                    \n                        \n                        OutputCallbacks\n                    \n                \n                    \n                        \n                            A map of call back functions whose keys are \nproperties of type T that are {@link EventEmitter}s.\n\n                        \n                    \n                \n                    \n                        OutputCallbacks:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/common/typed-keys.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TypedKeys\n                    \n                \n                    \n                        \n                            Constrain a set of keys from type T\nthat are of type C.\n\n                        \n                    \n                \n                    \n                        TypedKeys:     \n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimationStateMachineConstructorToken   (projects/.../animation-state-machine.token.ts)\n                        \n                        \n                            ContentConductorConstructorToken   (projects/.../content-conductor-constructor.token.ts)\n                        \n                        \n                            dvkLeave   (projects/.../leave-pseudo-animation.ts)\n                        \n                        \n                            dvkLeave   (projects/.../leave.directive.ts)\n                        \n                        \n                            DynamicAnimationsHandlerConstructorToken   (projects/.../dynamic-animations-handler.token.ts)\n                        \n                        \n                            DynamicComponentSerializerConstructorToken   (projects/.../dynamic-component-serializer.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AnimationStateMachineConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AnimationStateMachineConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AnimationStateMachineConstructorToken')\n                        \n                    \n\n                \n                    \n                        Token for the class to be constructed to act as the animation state machine.\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ContentConductorConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ContentConductorConstructorToken:     miscellaneou\n\n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('ContainersConductorConstructorToken')\n                        \n                    \n\n                \n                    \n                        An injection token representing an implementation of a \nconstructor in the shape of ContentConductorConstructor.\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/leave-pseudo-animation/leave-pseudo-animation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dvkLeave:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('dvkLeave', [\n    transition('enabled => void', \n      animate('{{ leaveTiming }}', \n      style({ /* empty */ })))\n  ])\n                        \n                    \n\n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dvkLeave:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  trigger(\"dvkLeave\", [\n    transition(\":leave\", \n      animate(\"{{ timing }}\"), \n        { params: { timing: \"0ms\" }})\n  ])\n]\n                        \n                    \n\n                \n                    \n                        Stub animation for the :leave transition\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DynamicAnimationsHandlerConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DynamicAnimationsHandlerConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DynamicAnimationsHandlerConstructorToken')\n                        \n                    \n\n                \n                    \n                        Token for injecting the constructor for an object that can\nact as the Animations Handler\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DynamicComponentSerializerConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DynamicComponentSerializerConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DynamicComponentSerializerConstructorToken')\n                        \n                    \n\n                \n                    \n                        This token represents the specific instance used for the\ncomponent serializer.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/content-conductor.html":{"url":"additional-documentation/content-conductor.html","title":"additional-page - Content Conductor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCondent Conductor\nThe Condent Conductor module provides the functionality for moving \nTemplateRefs between multiple ViewContainerRefs referenced with\nstring name values.\nCreating Containers\nContainers can be defined inside a Component template with the \nContentContainerDirective.\n\nThe string names provided to the directive can be used to reference\nthat container through an instance of ContentConductor.\nCreating a Conductor\nThe ContentConductor can be created by injecting the ContentConductorService into a component's constructor.\n  constructor(private ccService: ContentConductorService) { }And then calling the createContentConductor method with the QueryLists for the ContentContainerDirectives and the TemplateRefs.  These QueryLists should both be available during ngAfterViewInit.\nThe init method specifies which container any initial content should\nbe in.\n  @ContentChildren(ContentDirective,{ read: TemplateRef, descendants: true }) \n  contents: QueryList>;\n\n  @ViewChildren(ContentContainerDirective)\n  containers: QueryList;\n\n  conductor: ContentConductor;\n\n  ngAfterViewInit() {\n    this.conductor = this.ccService\n      .createContentConductor(this.containers, this.contents);\n\n    this.conductor.init('one');\n  }Using the Conductor\nThen content can be moved from one container to another by specifying\nthe container string names.\nthis.conductor.moveViews('one','two');The ContentConductor also provides the ability to move single views from one container to another based on their index inside the container.\nthis.conductor.moveView('one','two',3);Detach a single view from any container returning the ViewRef.\nconst vRef: ViewRef = this.conductor.detachView('one',2);Attach a view to the end of a specified container.\nthis.conductor.attachView('two',vRef);Detach all views from a specified container.\nconst views: ViewRef[] = this.conductor.detachViews('one');And attach an array of views to a specified container.\nthis.conductor.attachViews('two',views);Finally the content conductor should be destroyed inside the components\nngOnDestroy method in order to free up the resources it uses.\nngOnDestroy() {\n  this.conductor.destroy();\n}Content\nContent is added to the containers by creating it inside the element that has containers in it's view and creates the conductor.  The pieces of content should be marked with the structural directive ContentDirective.\n\n    Some Content To Display In A Container\n    \n    \n        \n        \n    \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-animations.html":{"url":"additional-documentation/dynamic-animations.html","title":"additional-page - Dynamic Animations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDynamic Animations\nThe Dynamic Animations module provides a directive that allow animations to be specified in the same format as standard Angular animations.  These animations are supplied at run time instead of statically in the Component decorator so a component developer can expose the animations specification and a consumer of the component can supply their own animations.\nDefining a set of Animations\nAnimations are defined using the same functions that normal Angular animations use with a few exceptions.  The animations are defined as an array containing state and transition definitions from @angular/animations.  A trigger definition is not recognized as the DynamicAnimationsDirective supplies an @Input member state that works in the same way as a trigger does.\nOther constraints are that no part of an animation can refer to a defined trigger such as one type of query and no part can refer to a specific state.  The concept of states is implemented fully by the AnimationStateMachine as the Angular AnimationBuilder does not have the same concept of states as the standard static Angular Animations.\nA simple animation looks like this.\nanimations = [\n    state('open',style({\n        'transform': `scaleY(1.0)`,\n        'transform-origin': 'top'\n    })),\n    state('closed',style({\n        'transform': `scaleY(0.0)`,\n        'transform-origin': 'top'\n    })),\n    transition('openclosed',animate('200ms'))\n];Currently supported abilities include the wild card for transitions like *=>open or closed=>* as well as :enter.  The :leave state has limited support at the moment.  Please refer to the section below.\nNote\nMore complex animations as defined normally by Angular are supported but have not all been fully tested at this time.  If you find any animations that work statically but do not work dynamically outside of the constraints listed above please submit a bug report with the animation that does not work included.\nAnimation States\nThe state itself can be represented by a string member that can be bound to the state @Input of the directive.  \ncurrentState = 'closed';The animation directive will automatically transition from the void state to the value of the bound state during initalization.  It will play any :enter or *=>void transitions that match the conditions as were definined in the animations.\nNote\nCurrently only string states are supported; numerical values will not work and neither will :increment or :decrement transition styles.  Support is planned but not yet implemented.\nUsing the DynamicAnimationsDirective\nThe dynamic animations directive can be attached to an element and passed the animations and the state binding.\n\nTransitioning the State\nThe state can be transitioned simply by changing the value of the bound member to the next desired state.\nthis.currentState = 'open';The transition that matches the change in state with the most specificity will be played when the value of the bound state is changed.\nLeave Transition\nThe leave transition is partially supported at the moment.\nIf a :leave animation, or *=>void, is speciied you must also both\nadd the @dvkLeave directive to the element and add dvkLeave to \nthe component as a static animation.  This step is only necessary\nfor the leave animation. \nThis is due to the fact that Angular will remove an element before a dynamic animation has a chance to play.  A static leave animation must be used to keep the element around long enough for the dynamic animation to actually play.\nCurrently the dvkLeave directive is set to a constant time of 500ms.  In the future this value will be made dynamic to match the dynamic animation supplied.\nSo in order to use a leave animation first attach the animation to the component metadata\n@Component({\n    animations: [dvkLeave]\n})Then add it as a trigger to the element containing the DynamicAnimationsDirective.\n\nAnd define a leave transition inside the animations supplied to the directive.\ntransition(':leave',animate('200ms',\n    style({ 'background-color': 'red' }))\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-components.html":{"url":"additional-documentation/dynamic-components.html","title":"additional-page - Dynamic Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDynamic Components\nThe Dynamic Components module provides a directive that will instantiate components dynamically with the ability to hook up their inputs to observable streams and provide callbacks for the instantiated components output emitters.\nCreating a Serializer\nA DynamicComponentSerializer is used to translate between a string name and a Component class instance.  This allows the string name to be stored inside an ngrx store, transmitted to a server, or any other use that might be desired and the data can be used later to instantiate the same dynamic component.  \nA serializer can be created with the createSerializer method of the DynamicComponentSerializerService.  \nFirst inject the service into a components constructor.\nconstructor(private dcsService :DynamicComponentSerializerService) {} And then pass the createSerializer method a DynamicComponentsMap of string names to component class instances.\nserializer: DynamicComponentSerializer;\n\nngOnInit() {\n    this.serializer = this.dcsService.createSerializer({\n        'textComponent': TextComponent,\n        'numberComponent': NumberComponent\n    });\n}This serializer is stateless other than the map and can be reused for any number of instances of DynamicComponentDirectives.\nCreating a DynamicComponentModel\nA DynamicComponentModel is the model that the DynamicComponentDirective uses to instantiate a component and hook up any streams specified.\nA DynamicComponentModel extends the DynamicComponentData interface.  The DynamicComponentData interface was designed to be serializable so it can be stored or transferred as desired.  It consists of a name string and an initialValues object.  The name is the serialized name of the component that should be instantiated.  The initializedValues should be a map of fields inside the component class type to the desired initial values for those fields.  As long as the field values are serializable this entire data structure can be safely stored and used for any purpose.\n@Component({\n    template: `\n        \n        {{text}}\n        \n    `\n})\nclass TextComponent {\n    @Input() text: string;\n    @Output() textClicked = new EventEmitter();\n}\n\nconst data: DynamicComponentData = {\n    name: 'textComponent',\n    initialValues: {\n        'text': 'The initial text for this component'\n    }\n}This data structure can be combined with the other fields of the DynamicComponentModel before it is applied to the directive.\ntext$ = new Subject();\n\nonClick = (e: MouseEvent) => {\n    console.log('Dynamic component was clicked');\n}\n\nconst model: DynamicComponentModel = {\n    ...this.data,\n    inputs$: {\n        text: this.text$.asObservable()\n    },\n    outputCallbacks: {\n        textClicked: this.onClick\n    },\n    providers: [\n    /* Any custom providers for the component can be supplied here */\n    ]\n}Note\nThe context of this inside callbacks will be the dynamic component and not the class where the callback is defined unless the callback method is defined as an arrow function or the value of this is bound before passing the result to the dynamic component.  This example uses an arrow function to preserve the context of this inside the onClick callback.\nCreating a DynamicComponentDirective\nWith the model set up and a serializer created those two pieces can now be passed off to an instance of the DynamicComponentDirectives inside the template of a component.\n\nThe DynamicComponentDirective will use the serializer to resolve the string name to a component and create an instance of it.  It will apply any specified initial values during instantiation.  Then it will hook up any specified input streams and output callbacks to the members of the component.\nThe directive will track and properly dispose of the subscriptions for the streams and will trigger change detection manually when new values are emited from the input streams.  The input streams also have a distinct until changed operator applied.  The directive should manage these streams in the same way that the async pipe does for other components.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
