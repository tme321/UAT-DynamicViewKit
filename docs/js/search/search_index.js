var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/AnimationStateMachine.html",[0,0.143,1,1.764]],["body/interfaces/AnimationStateMachine.html",[0,0.204,1,2.518,2,0.349,3,0.349,4,0.29,5,0.477,6,2.177,7,1.9,8,2.177,9,3.425,10,0.319,11,2.684,12,1.557,13,4.62,14,1.519,15,1.098,16,1.294,17,1.602,18,1.294,19,0.444,20,2.107,21,2.996,22,3.97,23,5.098,24,1.93,25,0.862,26,0.021,27,4.014,28,3.086,29,5.283,30,2.368,31,1.602,32,2.872,33,2.834,34,0.859,35,1.602,36,3.337,37,2.684,38,2.872,39,0.872,40,0.444,41,2.34,42,2.035,43,3.043,44,0.319,45,2.758,46,5.283,47,4.005,48,3.043,49,0.622,50,4.005,51,1.597,52,0.015,53,0.015]],["title/interfaces/AnimationStateMachineConstructor.html",[0,0.143,54,2.337]],["body/interfaces/AnimationStateMachineConstructor.html",[0,0.232,1,2.335,2,0.427,3,0.427,4,0.355,5,0.584,6,2.664,7,1.796,8,2.664,10,0.391,11,3.052,12,1.571,13,4.135,26,0.021,34,0.821,35,1.486,40,0.72,44,0.391,52,0.017,53,0.017,54,3.794,55,4.191,56,1.249,57,4.564,58,3.723,59,2.196,60,4.191,61,2.537,62,2.537,63,2.07,64,2.49,65,1.954,66,1.847,67,1.954,68,4.191,69,4.901]],["title/injectables/AnimationStatesService.html",[70,0.906,71,1.88]],["body/injectables/AnimationStatesService.html",[1,2.826,2,0.303,3,0.303,4,0.252,5,0.655,6,2.989,7,1.785,8,2.609,10,0.383,11,2.439,12,1.531,13,4.083,19,0.385,25,0.7,26,0.021,30,2.151,31,1.799,34,0.475,35,2.07,37,2.439,38,3.499,39,0.792,40,0.69,44,0.277,52,0.013,53,0.013,54,3.746,56,0.998,58,4.506,59,1.557,61,2.839,62,2.839,63,1.468,64,1.766,65,1.386,66,2.534,67,2.482,68,4.105,70,1.453,71,2.439,72,3.212,73,2.972,74,3.031,75,1.617,76,5.072,77,2.804,78,1.453,79,3.475,80,5.499,81,3.475,82,1.241,83,0.792,84,1.114,85,3.475,86,3.475,87,1.386,88,1.31,89,0.806,90,2.392,91,2.972,92,2.972,93,3.475,94,3.475,95,1.533,96,2.151,97,3.475,98,2.323,99,3.475,100,3.475]],["title/interfaces/AnimationStylesMap.html",[0,0.143,62,1.563]],["body/interfaces/AnimationStylesMap.html",[0,0.24,2,0.387,3,0.387,4,0.321,5,0.673,6,3.068,7,1.811,10,0.354,12,1.029,19,0.491,24,1.623,26,0.021,31,1.712,35,1.883,37,2.253,39,0.931,40,0.491,44,0.45,49,1.101,52,0.016,53,0.016,59,1.987,61,1.873,62,2.384,63,2.384,67,2.25,101,3.369,102,1.785,103,5.769,104,4.434,105,4.964,106,3.053,107,3.792,108,4.287,109,3.068,110,2.59,111,3.792,112,3.369,113,3.369,114,4.287,115,2.59,116,3.885,117,3.053,118,3.792]],["title/interfaces/AnimationTransitionsMap.html",[0,0.143,61,1.563]],["body/interfaces/AnimationTransitionsMap.html",[0,0.234,2,0.367,3,0.367,4,0.305,5,0.651,6,2.969,7,1.814,10,0.336,12,1.267,19,0.467,24,1.212,25,0.614,26,0.021,31,1.278,35,2.064,37,2.775,39,1,40,0.467,44,0.435,49,1.101,52,0.015,53,0.015,59,1.888,61,2.307,62,1.78,63,2.307,67,1.68,101,3.201,102,1.742,103,5.181,105,5.045,106,3.76,107,4.67,108,4.87,109,3.484,110,3.19,111,4.67,112,4.149,113,4.149,114,4.87,115,3.19,116,4.171,117,3.76,118,4.67,119,4.214,120,4.214]],["title/interfaces/ComponentConstructor.html",[0,0.143,121,1.764]],["body/interfaces/ComponentConstructor.html",[0,0.25,2,0.482,3,0.482,4,0.4,5,0.659,10,0.441,15,1.149,26,0.02,44,0.441,52,0.018,53,0.018,56,1.149,121,3.076,122,4.725,123,2.807,124,4.198,125,3.804,126,5.525]],["title/interfaces/ContainersMap.html",[0,0.143,127,2.548]],["body/interfaces/ContainersMap.html",[0,0.239,2,0.449,3,0.449,4,0.373,10,0.41,19,0.57,26,0.021,39,0.849,40,0.57,44,0.41,49,1.03,52,0.017,53,0.017,83,1.095,89,1.194,102,1.779,127,4.259,128,2.613,129,5.29,130,4.7,131,3.249,132,3.363,133,2.948,134,3.876,135,4.399,136,5.144]],["title/interfaces/ContentConductor.html",[0,0.143,137,1.764]],["body/interfaces/ContentConductor.html",[0,0.115,2,0.161,3,0.327,4,0.134,10,0.441,11,1.513,15,0.619,19,0.741,21,1.786,22,1.881,25,0.775,26,0.021,30,1.335,31,0.903,32,2.34,36,1.881,39,0.914,40,0.33,44,0.147,49,1.076,51,2.015,52,0.008,53,0.008,70,0.73,75,1.173,77,1.74,78,1.499,82,1.375,83,1.095,84,1.234,89,0.428,95,1.375,98,2.756,115,3.812,128,2.415,132,3.68,133,3.226,134,1.74,137,1.419,138,2.906,139,1.576,140,1.513,141,1.619,142,2.415,143,2.263,144,1.74,145,2.05,146,1.881,147,4.135,148,2.514,149,2.263,150,2.263,151,3.681,152,4.04,153,4.322,154,1.576,155,5.563,156,5.526,157,1.843,158,3.634,159,3.72,160,4.322,161,5.537,162,4.206,163,1.576,164,1.843,165,3.01,166,1.843,167,2.547,168,1.619,169,1.513,170,2.978,171,1.881,172,1.881,173,1.576,174,1.843,175,4.304,176,1.929,177,3.681,178,3.01,179,3.207,180,2.263,181,2.547,182,1.843,183,2.547,184,1.843,185,2.547,186,1.576,187,5.136,188,3.205,189,1.843,190,2.263,191,2.263,192,2.718,193,3.681,194,4.548,195,4.304,196,2.978,197,2.978,198,4.322,199,2.05,200,1.576,201,1.843,202,1.881,203,0.936,204,0.936,205,1.164,206,1.843,207,1.843,208,1.843,209,1.576,210,4.304,211,1.576,212,1.843,213,1.843,214,1.843,215,1.843]],["title/interfaces/ContentConductorConstructor.html",[0,0.143,216,2.162]],["body/interfaces/ContentConductorConstructor.html",[0,0.226,2,0.41,3,0.41,4,0.341,10,0.375,26,0.021,40,0.707,44,0.375,52,0.016,53,0.016,56,1.217,65,1.875,78,1.434,89,1.091,95,1.215,98,2.473,109,2.556,124,3.573,128,1.986,132,2.556,133,2.791,137,3.181,138,2.389,142,2.694,144,3.421,146,4.336,172,2.97,178,2.556,203,2.389,204,2.389,205,2.97,216,3.421,217,2.975,218,2.97,219,2.473,220,3.573,221,4.449,222,4.022,223,4.449]],["title/modules/ContentConductorModule.html",[224,1.395,225,2.548]],["body/modules/ContentConductorModule.html",[0,0.164,2,0.255,3,0.255,4,0.212,10,0.234,14,1.223,17,2.088,24,1.915,26,0.021,31,1.29,34,0.684,39,0.702,40,0.696,44,0.438,49,0.66,52,0.012,53,0.012,66,1.603,78,0.717,82,1.099,83,0.702,84,0.987,87,1.996,89,0.68,95,1.42,113,3.231,128,1.237,132,2.312,133,3.174,137,2.618,138,1.488,140,3.268,141,2.312,142,2.932,145,2.928,147,3.782,148,2.484,159,3.708,169,2.161,204,1.488,216,2.484,217,3.092,218,2.686,224,2.294,225,4.74,226,1.711,227,2.016,228,3.447,229,2.016,230,2.505,231,2.505,232,2.505,233,2.505,234,3.708,235,2.928,236,2.016,237,1.85,238,2.929,239,3.231,240,2.928,241,4.252,242,2.928,243,3.636,244,4.174,245,2.484,246,4.252,247,2.027,248,2.928,249,4.252,250,4.252,251,3.231,252,3.636,253,4.252,254,4.252,255,3.231,256,2.928,257,3.231,258,3.782,259,3.782,260,2.928,261,3.231,262,4.252,263,2.225,264,3.636,265,2.686,266,2.505,267,3.804,268,3.231,269,2.929,270,2.929,271,1.488,272,1.711,273,2.929,274,2.225,275,2.505]],["title/injectables/ContentConductorService.html",[70,0.906,140,1.88]],["body/injectables/ContentConductorService.html",[2,0.295,3,0.295,4,0.245,10,0.375,14,0.972,15,0.979,19,0.375,25,0.854,26,0.021,31,1.778,34,0.462,39,0.777,40,0.707,44,0.27,52,0.013,53,0.013,56,0.979,65,1.348,70,1.563,74,3.422,75,1.477,78,1.436,82,1.401,83,0.777,84,1.093,89,0.784,95,1.401,96,1.515,98,1.989,128,2.289,137,3.232,138,2.753,140,2.978,142,2.695,144,3.166,146,4.135,147,3.242,179,1.718,203,2.753,204,1.718,205,2.135,216,3.424,217,2.978,218,2.974,220,2.568,221,4.453,223,4.682,242,3.242,265,2.135,266,2.891,271,1.718,275,4.027,276,3.6,277,2.568,278,3.242,279,3.578,280,4.709,281,3.578,282,4.709,283,2.56,284,4.709,285,5.012,286,3.381,287,3.381,288,3.381,289,3.381,290,2.135,291,3.578,292,2.751,293,5.012,294,5.012,295,3.381,296,3.381,297,2.891,298,3.381,299,2.135,300,2.568,301,3.381,302,3.381,303,3.381,304,2.568,305,2.135,306,3.381]],["title/interfaces/ContentContainer.html",[0,0.143,203,1.88]],["body/interfaces/ContentContainer.html",[0,0.233,2,0.431,3,0.431,4,0.358,10,0.394,19,0.548,20,2.407,25,0.88,26,0.021,40,0.548,44,0.394,49,1.081,52,0.017,53,0.017,83,0.996,89,1.146,128,2.086,134,4.138,138,2.51,191,4.586,203,3.067,204,2.51,291,4.586,307,4.224,308,6.036,309,5.806,310,5.806,311,6.036]],["title/directives/ContentContainerDirective.html",[16,0.906,159,2.012]],["body/directives/ContentContainerDirective.html",[2,0.329,3,0.329,4,0.274,10,0.301,14,1.766,16,1.701,19,0.419,25,0.741,26,0.021,28,3.587,31,1.541,34,0.516,39,0.948,40,0.636,44,0.301,49,1.024,52,0.014,53,0.014,56,1.056,78,0.925,82,0.976,83,0.948,84,0.877,89,0.877,95,1.313,96,2.277,128,2.594,133,3.374,134,3.855,137,2.422,138,3.12,140,3.12,142,2.933,158,3.338,159,2.762,172,3.209,203,2.917,204,3.12,205,2.386,219,2.146,234,2.762,264,3.231,276,2.968,309,3.231,310,4.345,312,3.231,313,2.146,314,1.92,315,3.209,316,3.878,317,3.121,318,3.231,319,4.91,320,5.081,321,4.345,322,3.778,323,2.87,324,3.778,325,3.231,326,3.778]],["title/directives/ContentDirective.html",[16,0.906,234,2.012]],["body/directives/ContentDirective.html",[2,0.416,3,0.416,4,0.346,10,0.381,14,1.7,16,1.745,25,0.696,26,0.021,34,0.652,39,0.788,40,0.529,44,0.381,52,0.017,53,0.017,56,0.993,70,1.448,82,1.234,83,0.788,84,1.108,89,1.108,128,2.497,133,2.817,142,2.834,144,4.204,172,3.733,234,3.213,276,3.453,283,2.596,314,2.426,315,3.733,316,3.733,327,4.083,328,4.491,329,4.775,330,4.775]],["title/classes/DefaultContentConductorService.html",[34,0.506,259,2.548]],["body/classes/DefaultContentConductorService.html",[2,0.168,3,0.168,4,0.139,10,0.153,17,0.936,19,0.489,20,1.23,21,2.103,22,1.948,25,0.941,26,0.021,34,0.603,39,1.065,40,0.535,44,0.153,49,1.069,51,2.055,52,0.009,53,0.009,56,0.641,75,0.841,78,1.517,82,1.539,83,0.958,84,1.347,87,1.539,88,0.725,89,0.447,95,0.797,96,3.019,102,0.553,115,3.846,127,3.874,128,2.755,130,1.462,132,2.943,133,2.899,137,2.302,142,3.009,144,2.822,146,3.419,151,3.774,152,4.13,153,4.13,154,2.637,155,4.113,156,5.63,160,4.13,163,1.646,173,1.646,181,2.637,183,2.637,185,1.646,186,1.646,187,4.13,188,4.13,194,3.3,200,2.637,203,0.978,204,0.978,205,1.216,209,1.646,211,1.646,219,1.864,220,1.462,221,2.343,223,2.932,257,2.343,259,2.123,261,2.343,263,5.384,265,1.948,277,1.462,290,3.665,292,2.578,331,2.343,332,3.084,333,4.414,334,4.414,335,3.859,336,1.925,337,1.925,338,1.925,339,1.925,340,4.113,341,1.925,342,1.925,343,1.925,344,1.925,345,1.925,346,1.925,347,1.925,348,1.925,349,1.925,350,1.925,351,1.925,352,1.925,353,1.925,354,1.462,355,0.863,356,1.925,357,1.925,358,1.925,359,3.859,360,1.925,361,4.414,362,1.925,363,3.084,364,3.084,365,3.084,366,3.084,367,1.948,368,1.925,369,1.462,370,3.084,371,3.084,372,1.925,373,1.925,374,1.925,375,1.925,376,1.925,377,1.925,378,1.925,379,1.925,380,1.925,381,1.925,382,1.925,383,3.665,384,3.084,385,2.943,386,5.626,387,2.637,388,1.925,389,1.925,390,1.925,391,1.925,392,3.084,393,1.925,394,3.084,395,1.925,396,1.925,397,1.925,398,3.084,399,3.084,400,1.646,401,3.084]],["title/classes/DefaultDynamicAnimationsHandlerService.html",[34,0.506,402,2.548]],["body/classes/DefaultDynamicAnimationsHandlerService.html",[1,2.359,2,0.207,3,0.207,4,0.172,5,0.754,7,1.562,8,1.29,10,0.189,12,1.661,17,1.102,18,1.715,19,0.263,20,1.449,21,2.359,25,0.881,26,0.021,33,2.378,34,0.497,35,1.833,39,1.022,40,0.649,41,2.892,42,1.847,43,1.803,44,0.189,48,2.761,49,0.828,51,2.245,52,0.01,53,0.01,56,0.756,60,2.029,61,2.671,62,2.671,63,1.002,64,1.206,66,1.37,67,2.564,71,2.515,72,1.386,75,0.991,76,2.029,78,1.379,82,1.455,83,0.929,84,1.306,87,1.761,88,0.894,95,0.939,96,3.106,102,1.423,116,3.041,219,2.091,355,1.064,383,2.79,402,2.502,403,5.407,404,4.804,405,2.029,406,2.711,407,1.847,408,3.108,409,4.95,410,4.95,411,3.635,412,4.417,413,3.108,414,3.108,415,2.029,416,3.041,417,2.834,418,3.356,419,2.515,420,3.356,421,3.635,422,2.373,423,3.635,424,2.373,425,2.373,426,2.373,427,2.373,428,2.373,429,2.373,430,3.635,431,2.373,432,3.635,433,2.373,434,1.206,435,1.634,436,1.206,437,1.634,438,1.634,439,2.373,440,2.373,441,2.373,442,2.373,443,2.373,444,2.373,445,4.233,446,3.635,447,2.373,448,4.95,449,2.373,450,3.635,451,3.635,452,3.108,453,3.777,454,2.373,455,3.635,456,2.029,457,2.373,458,2.373,459,2.373,460,2.373,461,2.373,462,2.029,463,2.373,464,2.373]],["title/classes/DefaultDynamicComponentSerializer.html",[34,0.506,465,2.548]],["body/classes/DefaultDynamicComponentSerializer.html",[2,0.339,3,0.339,4,0.282,5,0.74,10,0.31,15,1.498,17,1.571,18,1.728,19,0.431,25,0.906,26,0.021,34,0.708,39,0.961,40,0.646,44,0.31,49,0.904,52,0.014,53,0.014,56,0.808,75,1.694,78,1.522,82,1.606,83,0.961,84,1.352,87,2.066,95,1.339,121,3.083,123,1.976,176,2.322,219,2.624,271,1.976,283,2.114,290,2.456,355,1.743,465,3.566,466,5.312,467,4.72,468,3.325,469,3.288,470,2.624,471,3.887,472,4.43,473,4.43,474,3.888,475,3.888,476,4.43,477,4.43,478,3.888,479,3.325,480,4.43,481,3.888,482,2.271,483,1.976,484,2.954,485,5.18,486,3.888,487,3.888]],["title/directives/DynamicAnimationsDirective.html",[16,0.906,407,1.88]],["body/directives/DynamicAnimationsDirective.html",[0,0.102,2,0.139,3,0.139,4,0.116,5,0.745,7,1.795,10,0.315,12,1.638,15,0.981,16,1.406,18,0.967,19,0.177,20,1.055,24,1.259,25,0.872,26,0.021,33,1.993,34,0.645,35,1.78,37,2.658,38,1.439,39,1.089,40,0.602,44,0.127,49,0.97,51,1.882,52,0.007,53,0.007,56,0.55,59,0.715,66,1.972,67,1.055,75,0.721,78,1.281,82,1.131,83,0.987,84,1.26,87,0.636,88,1.779,89,0.37,96,3.027,102,1.135,105,3.798,106,1.822,109,1.439,110,1.546,115,2.305,158,1.439,165,2.379,169,1.345,171,2.492,176,1.186,179,1.345,192,2.142,199,1.822,202,2.492,219,1.118,224,0.997,240,1.822,244,2.01,272,1.546,276,1.981,292,1.546,313,1.118,314,2.54,315,1.671,316,1.671,317,3.042,323,1.212,355,0.715,367,3.534,406,2.005,407,1.345,415,1.364,416,2.335,417,1.52,434,0.811,435,1.098,436,0.811,445,1.364,452,1.364,453,1.364,488,3.397,489,1.364,490,2.646,491,2.01,492,2.646,493,1.822,494,2.01,495,2.717,496,2.646,497,1.671,498,2.557,499,2.646,500,2.01,501,3.157,502,2.263,503,2.263,504,2.646,505,2.01,506,2.01,507,3.391,508,2.9,509,2.646,510,3.946,511,3.946,512,3.946,513,2.646,514,2.646,515,3.375,516,3.946,517,3.391,518,2.305,519,3.391,520,2.305,521,3.391,522,2.305,523,2.305,524,2.646,525,2.646,526,3.391,527,2.646,528,2.646,529,1.595,530,4.275,531,2.646,532,1.595,533,4.275,534,1.595,535,1.595,536,1.595,537,1.595,538,1.595,539,1.595,540,1.595,541,1.595,542,1.595,543,1.364,544,2.335,545,1.671,546,1.364,547,1.212,548,1.364,549,1.364,550,1.098,551,1.364,552,1.595,553,1.595,554,1.595,555,3.325,556,1.595,557,1.364,558,3.375,559,1.364,560,2.263,561,1.364,562,1.364,563,1.364,564,1.595,565,2.263,566,2.263,567,1.595,568,1.364,569,1.364,570,1.595,571,2.576,572,1.595,573,1.595,574,2.646,575,1.595,576,1.595,577,1.595,578,2.646,579,1.595,580,1.595,581,1.595,582,1.595,583,1.595,584,1.595,585,1.595,586,1.595,587,1.595,588,1.595,589,1.595,590,1.595,591,1.595,592,1.364,593,1.595,594,1.595,595,1.212,596,1.595]],["title/interfaces/DynamicAnimationsHandler.html",[0,0.143,406,1.88]],["body/interfaces/DynamicAnimationsHandler.html",[0,0.238,2,0.332,3,0.332,4,0.276,5,0.454,7,1.746,10,0.304,12,1.568,14,1.469,15,1.062,16,1.252,17,1.55,19,0.422,20,2.037,21,2.936,23,3.882,24,1.975,25,0.898,26,0.021,27,3.882,28,2.985,33,2.602,34,0.698,35,1.949,38,2.777,40,0.566,44,0.304,48,4.681,49,0.793,51,2.457,52,0.014,53,0.014,61,2.158,62,2.158,63,1.609,64,1.935,67,1.519,102,1.658,169,2.596,171,3.227,176,2.29,245,2.985,313,2.602,355,1.707,406,2.596,413,5.269,414,5.269,417,2.29,434,1.935,436,1.935,488,2.07,597,3.257,598,4.369,599,3.882,600,3.227,601,5.109,602,5.109,603,5.109,604,5.109,605,3.882,606,3.809]],["title/interfaces/DynamicAnimationsHandlerConstructor.html",[0,0.143,607,2.337]],["body/interfaces/DynamicAnimationsHandlerConstructor.html",[0,0.224,2,0.402,3,0.402,4,0.334,5,0.549,7,1.495,10,0.368,11,2.938,12,1.64,18,1.129,26,0.021,30,2.592,33,2.799,35,1.398,40,0.757,42,2.342,44,0.368,49,0.716,52,0.016,53,0.016,56,1.202,57,4.394,61,2.443,62,2.443,63,1.947,64,2.342,65,1.838,66,1.737,67,1.838,71,2.342,72,2.693,355,2.066,406,2.342,416,3.174,417,2.592,418,3.502,419,2.938,420,3.502,434,2.342,435,3.174,436,2.342,437,3.174,438,3.174,488,2.506,607,3.652,608,3.942,609,4.394,610,3.942,611,4.61]],["title/modules/DynamicAnimationsModule.html",[224,1.395,612,2.548]],["body/modules/DynamicAnimationsModule.html",[1,1.942,2,0.241,3,0.241,4,0.2,5,0.329,7,1.594,8,2.216,10,0.22,12,1.607,14,1.172,16,0.998,17,1.993,18,1.609,24,1.172,26,0.021,33,1.722,34,0.378,40,0.762,42,1.404,44,0.475,52,0.011,53,0.011,54,2.574,71,3.03,72,1.615,75,1.111,78,0.677,87,2.131,89,0.641,90,2.806,91,2.363,92,2.363,95,1.473,141,2.216,169,2.071,219,2.257,224,2.014,226,1.615,227,1.903,228,3.333,229,1.903,235,2.806,236,1.903,237,1.746,242,2.806,247,2.547,248,2.806,251,3.096,255,3.678,260,2.806,267,3.678,268,3.096,272,2.828,274,3.096,305,2.574,314,2.071,331,3.096,402,3.679,404,2.1,406,2.071,407,3.491,419,3.03,434,2.071,437,1.903,438,1.903,488,1.502,495,2.216,497,2.574,518,3.483,520,3.483,522,3.483,523,3.939,543,2.363,544,2.806,545,1.746,546,2.363,549,2.363,550,1.903,551,2.363,598,3.485,607,2.574,612,4.918,613,2.363,614,2.363,615,2.363,616,2.363,617,2.764,618,4.076,619,4.57,620,4.076,621,2.574,622,2.363,623,2.764,624,2.806,625,2.363,626,2.363,627,2.764,628,2.764,629,3.485,630,4.076]],["title/injectables/DynamicAnimationsService.html",[70,0.906,518,2.162]],["body/injectables/DynamicAnimationsService.html",[1,3.046,2,0.25,3,0.25,4,0.207,5,0.589,7,1.56,10,0.333,12,1.604,14,1.562,15,0.869,16,1.024,18,1.21,19,0.317,24,0.823,25,0.61,26,0.021,31,1.648,32,2.273,33,2.295,34,0.391,35,1.891,39,0.69,40,0.723,42,1.454,44,0.228,49,0.767,52,0.012,53,0.012,56,0.869,61,2.55,62,2.55,63,1.209,64,1.454,65,1.141,66,2.559,67,2.305,70,1.331,71,2.761,72,1.672,74,2.64,75,1.481,77,2.442,78,1.21,82,1.081,83,0.69,84,0.97,87,1.141,88,1.079,89,0.664,95,1.56,96,2.214,98,2.441,117,2.878,158,2.273,168,2.273,176,2.435,245,2.442,247,2.589,276,2.442,279,3.176,281,3.176,297,2.447,299,1.807,300,2.174,355,1.282,406,3.312,416,3.979,417,2.705,418,3.753,419,2.761,420,3.753,434,2.51,435,1.97,436,1.454,437,1.97,438,1.97,456,2.447,462,2.447,488,2.685,506,2.174,518,3.376,607,3.432,609,3.176,610,4.943,622,2.447,624,1.97,625,2.447,629,3.575,631,2.447,632,3.575,633,3.575,634,5.434,635,2.861,636,2.861,637,2.861,638,2.861,639,2.174,640,2.861,641,2.861,642,2.861,643,2.861]],["title/interfaces/DynamicComponentData.html",[0,0.143,644,2.337]],["body/interfaces/DynamicComponentData.html",[0,0.223,2,0.399,3,0.399,4,0.332,5,0.545,10,0.365,14,1.655,15,1.374,18,1.41,19,0.507,20,2.295,25,0.839,26,0.021,32,2.487,40,0.507,44,0.365,49,0.978,52,0.016,53,0.016,83,1.091,84,1.336,109,3.129,178,3.129,222,4.922,239,4.373,240,3.963,470,2.792,644,3.635,645,1.933,646,3.476,647,3.913,648,4.922,649,5.756,650,3.963,651,5.756,652,4.922,653,5.756,654,4.922,655,4.914,656,3.476,657,3.913]],["title/directives/DynamicComponentDirective.html",[16,0.906,658,2.162]],["body/directives/DynamicComponentDirective.html",[0,0.088,2,0.116,3,0.116,4,0.096,5,0.72,10,0.366,14,1.39,15,1.422,16,1.437,17,1.677,18,1.385,19,0.147,20,2.011,21,1.081,25,0.84,26,0.021,31,1.466,32,2.493,34,0.181,39,1.009,40,0.559,44,0.106,51,1.927,52,0.006,53,0.006,56,0.893,65,1.399,66,0.855,75,0.618,77,1.325,78,1.437,82,1.304,83,0.983,84,1.171,87,0.904,88,1.901,89,0.308,95,1.58,96,1.924,98,1.937,102,1.235,121,2.186,123,0.675,134,2.508,141,1.233,149,1.723,158,2.742,165,1.908,167,1.939,168,1.233,171,2.217,176,1.924,178,1.233,190,1.723,192,1.432,219,0.958,247,1.081,248,1.561,256,2.713,271,0.675,283,1.233,292,1.325,299,2.489,313,1.665,314,0.675,315,1.432,316,2.712,317,2.841,318,1.136,321,1.939,323,1.009,325,1.136,340,4.645,354,1.009,367,2.217,385,0.722,469,2.003,470,1.665,483,0.675,484,1.009,495,1.233,497,2.217,506,1.723,508,2.538,555,2.666,571,1.723,621,2.217,645,2.55,650,3.157,655,2.956,656,1.009,657,1.136,658,2.823,659,1.136,660,2.268,661,1.939,662,3.599,663,3.001,664,2.416,665,1.723,666,1.939,667,2.538,668,1.908,669,2.268,670,1.939,671,2.268,672,2.268,673,3.186,674,4.133,675,1.723,676,3.001,677,1.939,678,1.939,679,1.939,680,1.939,681,1.939,682,2.956,683,1.939,684,1.939,685,1.561,686,2.268,687,1.939,688,2.268,689,3.51,690,1.939,691,2.508,692,1.561,693,2.268,694,2.268,695,3.941,696,6.614,697,3.51,698,3.51,699,3.51,700,2.268,701,2.268,702,2.268,703,2.968,704,2.268,705,3.51,706,2.268,707,2.268,708,3.51,709,1.328,710,2.268,711,1.328,712,2.268,713,2.666,714,1.328,715,2.416,716,3.51,717,1.939,718,1.939,719,2.268,720,1.328,721,1.939,722,2.994,723,2.268,724,1.328,725,2.268,726,2.268,727,1.328,728,5.227,729,3.941,730,1.328,731,2.268,732,2.268,733,1.328,734,2.268,735,1.328,736,2.268,737,1.328,738,2.268,739,1.328,740,2.268,741,1.328,742,2.968,743,3.51,744,1.328,745,1.328,746,1.328,747,1.328,748,1.328,749,2.666,750,1.328,751,1.009,752,1.328,753,1.009,754,1.136,755,0.914,756,1.009,757,1.136,758,1.328,759,1.328,760,1.328,761,1.328,762,1.328,763,1.328,764,1.328,765,1.328,766,1.328,767,2.268,768,2.268,769,1.328,770,1.328,771,1.328,772,1.328,773,1.328,774,1.328,775,2.268,776,1.328,777,1.328,778,1.328,779,1.328,780,1.328,781,1.328,782,1.328,783,2.268,784,1.328,785,1.328,786,1.328,787,1.328,788,1.328,789,1.328,790,1.328,791,1.328,792,1.328,793,1.328,794,1.328,795,1.328,796,1.328,797,1.328,798,1.328,799,1.328,800,1.328,801,1.328,802,1.328,803,1.328,804,1.328,805,1.328,806,1.328]],["title/interfaces/DynamicComponentModel.html",[0,0.143,673,2.337]],["body/interfaces/DynamicComponentModel.html",[0,0.212,2,0.369,3,0.369,4,0.307,5,0.504,10,0.337,15,1.416,17,2.131,18,1.487,19,0.469,20,2.184,25,0.885,26,0.021,31,1.661,40,0.712,44,0.337,52,0.015,53,0.015,84,1.631,89,0.982,95,1.094,313,2.313,317,3.769,644,4.2,645,1.788,646,3.216,650,3.771,662,3.771,673,3.459,682,4.837,713,4.878,715,3.771,722,4.161,749,4.161,751,3.216,753,3.216,754,3.62,755,2.914,756,3.216,757,3.62,807,3.62,808,4.684,809,6.421,810,4.684,811,4.233]],["title/interfaces/DynamicComponentSerializer.html",[0,0.143,469,1.88]],["body/interfaces/DynamicComponentSerializer.html",[0,0.221,2,0.393,3,0.393,4,0.327,5,0.746,10,0.36,15,1.493,19,0.5,25,0.912,26,0.021,39,0.941,40,0.5,44,0.36,49,1.075,52,0.016,53,0.016,56,1.186,75,1.555,78,1.397,82,1.617,83,1.085,84,1.324,121,3.301,123,2.291,148,3.332,247,2.718,271,2.291,290,2.848,469,2.898,470,2.409,472,4.877,473,4.877,477,4.877,479,3.856,480,4.877,483,3.179,645,2.642,812,3.856,813,4.509,814,4.509,815,4.509]],["title/interfaces/DynamicComponentSerializerConstructor.html",[0,0.143,816,2.337]],["body/interfaces/DynamicComponentSerializerConstructor.html",[0,0.238,2,0.444,3,0.444,4,0.369,5,0.606,10,0.406,15,1.5,18,1.505,26,0.021,40,0.681,44,0.406,52,0.017,53,0.017,56,1.278,125,4.231,355,2.28,469,2.585,470,2.897,471,2.972,482,2.972,483,2.585,484,3.865,645,2.149,816,3.881,817,4.351,818,5.088,819,5.088]],["title/interfaces/DynamicComponentSerializerMap.html",[0,0.143,471,2.162]],["body/interfaces/DynamicComponentSerializerMap.html",[0,0.229,2,0.416,3,0.416,4,0.346,5,0.569,10,0.381,11,3.004,15,1.434,19,0.529,20,2.357,25,0.862,26,0.021,30,2.649,34,0.808,40,0.529,44,0.381,49,0.918,52,0.017,53,0.017,83,0.976,102,2.021,121,2.276,123,2.426,131,3.016,148,3.453,247,2.817,271,2.426,470,2.834,471,3.453,482,2.789,645,2.017,691,3.453,820,5.738,821,5.738]],["title/injectables/DynamicComponentSerializerService.html",[70,0.906,668,2.012]],["body/injectables/DynamicComponentSerializerService.html",[2,0.343,3,0.343,4,0.285,5,0.698,10,0.313,15,1.515,18,1.635,19,0.436,25,0.761,26,0.021,31,1.582,34,0.537,39,0.861,40,0.74,44,0.313,49,0.81,52,0.015,53,0.015,56,1.085,65,2.335,70,1.528,75,1.422,78,1.278,82,1.348,83,1.071,84,1.211,89,0.912,96,1.761,102,1.684,121,1.873,123,1.997,271,1.997,299,3.295,355,2.338,385,2.136,470,2.635,471,3.047,476,3.36,482,3.047,483,2.975,645,2.473,668,2.836,816,3.94,820,3.36,821,3.36,822,3.36,823,4.461,824,3.929,825,3.929,826,5.217,827,5.217,828,3.94,829,3.929,830,2.705,831,3.36,832,3.36,833,3.929,834,3.929,835,3.929,836,3.929,837,3.929,838,3.929]],["title/interfaces/DynamicComponentsMap.html",[0,0.143,828,2.337]],["body/interfaces/DynamicComponentsMap.html",[0,0.237,2,0.441,3,0.441,4,0.367,5,0.73,10,0.403,15,1.499,19,0.561,26,0.02,39,0.835,40,0.561,44,0.403,49,1.023,52,0.017,53,0.017,56,1.273,83,1.011,102,1.761,121,3.139,123,2.571,131,3.196,135,4.327,271,2.571,482,3.578,645,2.587,828,3.868,839,5.06,840,5.06]],["title/modules/DynamicComponentsModule.html",[224,1.395,841,2.548]],["body/modules/DynamicComponentsModule.html",[2,0.285,3,0.285,4,0.237,5,0.389,10,0.261,14,1.322,15,1.485,16,1.126,17,1.967,18,1.671,26,0.021,31,1.395,34,0.727,40,0.734,44,0.503,49,0.714,52,0.013,53,0.013,75,1.254,78,0.8,83,0.759,87,2.122,89,0.758,95,1.375,102,1.322,168,2.5,169,2.337,219,2.666,224,2.176,226,1.909,227,2.25,228,3.663,229,2.25,235,3.166,236,2.25,237,2.064,247,2.192,255,4.042,256,3.166,258,3.166,260,3.166,267,4.042,268,3.494,272,1.909,274,2.483,278,3.166,317,2.5,331,3.494,465,3.975,467,2.483,469,2.337,470,1.38,483,2.704,494,3.494,621,2.904,632,3.933,645,1.38,658,4.127,662,3.166,668,3.431,691,2.686,755,3.166,816,2.904,830,3.166,831,2.795,832,2.795,841,4.696,842,2.795,843,2.795,844,2.795,845,2.795,846,3.268,847,4.599,848,4.599,849,4.599,850,2.795,851,3.268,852,3.268,853,4.599]],["title/directives/LeaveDirective.html",[16,0.906,523,2.162]],["body/directives/LeaveDirective.html",[2,0.279,3,0.279,4,0.232,5,0.627,10,0.255,12,1.609,16,1.479,18,1.663,19,0.355,24,1.303,25,0.661,26,0.021,34,0.437,35,1.596,36,2.862,37,2.303,39,0.944,40,0.502,44,0.419,49,0.817,51,1.807,52,0.013,53,0.013,59,1.434,66,1.708,67,1.276,75,1.235,78,1.11,82,0.827,83,0.528,84,0.743,87,1.276,88,1.708,89,0.743,95,0.827,98,2.222,176,2.564,179,2.303,180,2.432,192,2.862,245,2.647,247,2.16,258,3.12,272,2.647,279,3.443,281,3.443,313,1.352,314,1.626,315,2.862,383,3.323,385,1.74,407,2.303,493,2.203,495,2.463,498,3.847,501,3.96,523,2.647,599,3.443,600,4.416,639,3.443,654,3.875,692,3.12,854,2.203,855,4.763,856,6.586,857,4.532,858,4.532,859,4.532,860,4.532,861,4.532,862,4.532,863,3.875,864,3.443,865,4.532,866,4.532,867,4.532,868,4.532,869,5.721,870,4.532,871,5.261,872,3.201,873,4.532,874,3.201,875,3.201,876,3.201,877,3.201,878,3.875,879,2.737,880,2.737,881,2.737]],["title/injectables/NgStateService.html",[70,0.906,522,2.162]],["body/injectables/NgStateService.html",[2,0.379,3,0.379,4,0.315,5,0.732,7,1.439,10,0.444,12,1.007,19,0.481,25,0.633,26,0.021,30,2.495,34,0.593,39,0.919,40,0.681,44,0.346,52,0.016,53,0.016,56,1.278,59,1.946,62,2.946,63,1.834,64,2.206,70,1.505,75,1.518,78,1.505,82,1.122,83,0.716,84,1.007,89,1.007,95,1.439,98,1.834,102,1.248,165,3.026,314,3.294,522,3.252,530,5.865,550,4.231,882,4.231,883,3.712,884,5.865,885,5.567,886,4.341,887,5.567,888,4.341,889,4.341,890,4.341,891,4.341]],["title/injectables/NgTransitionService.html",[70,0.906,520,2.162]],["body/injectables/NgTransitionService.html",[2,0.253,3,0.253,4,0.21,5,0.652,7,1.092,10,0.397,12,0.673,17,1.281,19,0.322,25,0.616,26,0.021,30,1.893,34,0.396,35,2.142,39,0.822,40,0.644,44,0.231,49,0.45,52,0.012,53,0.012,56,1.035,59,1.3,61,2.763,63,1.226,64,1.474,70,1.22,75,1.151,78,1.486,82,1.092,83,0.697,84,0.98,89,0.673,95,1.287,96,2.451,98,1.784,114,3.209,116,1.998,165,2.973,305,2.667,383,1.832,385,3.403,387,2.481,520,2.467,533,6.04,544,2.908,545,3.454,547,2.204,548,2.481,592,2.481,882,3.765,884,5.486,892,2.481,893,2.908,894,4.223,895,4.223,896,2.902,897,4.223,898,2.902,899,3.612,900,4.223,901,2.902,902,4.223,903,4.223,904,4.155,905,4.223,906,4.223,907,2.481,908,2.902,909,2.902,910,2.902,911,2.902,912,2.902,913,2.902,914,4.223,915,2.902,916,2.902,917,2.902,918,2.902,919,2.902,920,2.902,921,2.902,922,4.223,923,4.223,924,4.223,925,4.223,926,4.223,927,2.902,928,2.902,929,2.902,930,2.902,931,2.902,932,2.902,933,2.902,934,2.902,935,2.902,936,2.902,937,2.902,938,2.902,939,2.902,940,2.902,941,2.902,942,4.223,943,2.902,944,2.902,945,2.902,946,4.223]],["title/interfaces/StateCSSMap.html",[0,0.143,417,1.659]],["body/interfaces/StateCSSMap.html",[0,0.236,2,0.44,3,0.44,4,0.366,5,0.729,7,1.58,10,0.402,12,1.527,19,0.559,26,0.019,33,2.959,34,0.899,35,1.855,37,2.564,38,3.324,39,0.833,44,0.402,45,3.474,49,1.021,52,0.017,53,0.017,65,2.012,66,1.902,102,1.451,112,3.834,131,3.187,179,2.564,417,2.741,436,3.107,947,4.21,948,5.047,949,3.834,950,5.047,951,5.047]],["title/interfaces/StateCSSMapper.html",[0,0.143,41,2.162]],["body/interfaces/StateCSSMapper.html",[0,0.21,2,0.363,3,0.363,4,0.302,5,0.497,7,1.71,10,0.332,11,2.117,14,1.559,19,0.462,20,2.162,21,3.042,24,2.014,25,0.93,26,0.021,27,4.119,28,3.167,30,1.867,33,2.99,34,0.944,39,1.119,41,3.167,42,2.117,44,0.332,45,2.868,49,0.647,51,2.403,52,0.015,53,0.015,77,3.729,83,0.688,95,1.558,102,1.198,179,3.558,202,4.284,417,3.04,947,2.868,952,3.563,953,5.458,954,4.636,955,4.167]],["title/injectables/StateCssMapperService.html",[70,0.906,419,1.88]],["body/injectables/StateCssMapperService.html",[2,0.283,3,0.283,4,0.235,5,0.686,7,1.797,10,0.423,19,0.36,21,1.547,25,0.773,26,0.021,31,1.746,33,3.053,34,0.918,38,3.129,39,1.002,40,0.588,41,3.097,42,2.925,43,2.465,44,0.259,45,3.15,49,0.71,52,0.013,53,0.013,56,0.675,66,2.491,70,1.298,74,2.89,75,1.248,77,3.679,78,1.41,82,1.37,83,0.875,84,1.23,89,0.753,95,1.183,98,2.432,102,1.932,143,3.477,168,2.488,179,2.693,199,3.15,202,2.049,245,2.673,247,2.181,283,1.764,355,1.454,383,2.049,417,3.141,419,2.325,436,1.649,947,3.963,953,2.775,954,3.913,956,2.775,957,4.576,958,4.576,959,3.245,960,5.757,961,3.245,962,4.576,963,4.576,964,3.245,965,3.245,966,3.245,967,3.913,968,3.245,969,3.245,970,4.576,971,3.245,972,3.245,973,3.245,974,3.245,975,3.245,976,3.245]],["title/coverage.html",[977,4.285]],["body/coverage.html",[0,0.27,1,1.187,4,0.18,5,0.869,6,3.118,7,1.586,8,2.473,9,2.13,12,1.486,15,1.443,16,1.335,18,1.243,24,0.716,25,0.363,26,0.021,33,2.423,34,0.693,41,1.455,42,1.916,52,0.011,53,0.011,54,1.573,55,2.13,61,1.052,62,1.052,63,1.593,65,0.993,70,1.459,71,1.265,72,1.455,73,2.13,90,1.715,101,2.865,121,1.187,122,2.13,123,1.265,124,2.865,127,1.715,128,2.653,129,2.13,130,1.892,131,3.205,137,1.187,138,2.915,139,2.13,140,1.265,142,1.593,159,1.354,191,1.892,203,1.265,204,1.916,216,1.455,217,2.578,218,2.381,234,1.354,259,1.715,263,2.865,265,1.573,277,2.865,307,2.13,312,2.13,327,2.13,400,2.13,402,1.715,403,3.224,404,1.892,405,2.13,406,1.265,407,1.265,417,1.116,419,1.265,434,2.312,436,1.265,465,1.715,466,2.13,467,1.892,468,2.13,469,1.265,470,1.593,471,1.455,482,2.203,483,2.578,488,2.964,489,2.13,501,2.381,518,1.455,520,1.455,522,1.455,523,1.455,545,1.573,550,1.715,597,2.13,607,1.573,608,2.13,619,2.13,624,1.715,626,2.13,631,2.13,644,1.573,645,2.653,646,1.892,647,2.13,658,1.455,659,2.13,668,1.354,673,1.573,751,1.892,807,2.13,812,2.13,816,1.573,817,2.13,822,2.13,828,1.573,830,1.715,854,3.133,882,2.596,883,2.13,892,2.13,947,3.133,952,2.13,956,2.13,977,2.13,978,1.892,979,2.491,980,7.016,981,6.852,982,2.13,983,4.358,984,2.491,985,5.452,986,5.452,987,5.736,988,5.736,989,2.491,990,2.491,991,2.491,992,2.491,993,2.491,994,2.13,995,2.491,996,2.491,997,2.491,998,2.491,999,2.491,1000,3.771,1001,2.13,1002,2.491,1003,2.491,1004,2.13,1005,3.224,1006,2.13,1007,2.13,1008,2.491,1009,2.13,1010,3.771,1011,3.771,1012,3.771,1013,3.771,1014,2.13,1015,2.491,1016,2.491,1017,2.491,1018,2.491]],["title/dependencies.html",[226,2.594,1019,3.11]],["body/dependencies.html",[18,1.271,26,0.021,52,0.017,53,0.017,59,2.325,89,1.204,226,3.03,304,4.723,354,3.941,850,4.436,1020,7.353,1021,5.187,1022,5.187,1023,5.187,1024,6.217,1025,5.187,1026,5.187,1027,5.187,1028,5.187,1029,5.187,1030,5.187,1031,5.187]],["title/miscellaneous/enumerations.html",[1032,1.58,1033,3.797]],["body/miscellaneous/enumerations.html",[5,0.729,7,1.304,12,1.419,14,1.451,19,0.559,26,0.019,35,1.531,51,2.438,52,0.017,53,0.017,88,2.74,125,3.474,495,3.324,498,3.572,545,3.862,547,4.646,595,4.646,882,4.21,904,3.834,907,5.229,1032,2.564,1033,4.316,1034,6.115,1035,6.115,1036,6.115,1037,5.047,1038,5.047,1039,5.047,1040,5.047,1041,4.316,1042,5.047,1043,4.316]],["title/miscellaneous/functions.html",[24,1.277,1032,1.58]],["body/miscellaneous/functions.html",[5,0.647,10,0.433,12,1.26,19,0.602,24,1.837,25,0.791,26,0.019,35,1.647,52,0.018,53,0.018,82,1.403,83,0.896,84,1.26,180,4.124,313,2.293,498,3.171,600,4.287,854,3.737,855,4.124,878,4.642,1009,5.462,1032,2.758,1044,4.642]],["title/index.html",[19,0.345,110,1.817,1045,2.659]],["body/index.html",[12,1.105,15,1.433,16,1.571,17,1.445,18,1.642,24,1.37,26,0.016,31,1.445,36,3.008,52,0.016,53,0.016,110,2.782,132,2.589,141,2.589,142,2.012,162,3.618,217,2.42,243,4.073,261,3.618,300,3.618,313,2.012,316,3.728,408,4.073,495,2.589,544,4.063,692,3.279,899,5.733,978,4.484,1046,4.763,1047,4.763,1048,5.902,1049,4.763,1050,4.763,1051,4.073,1052,6.414,1053,4.763,1054,4.073,1055,4.073,1056,4.073,1057,4.073,1058,4.763,1059,4.073,1060,4.763,1061,4.763,1062,4.763,1063,5.902,1064,4.763,1065,5.902,1066,4.763,1067,4.763,1068,4.763,1069,5.902,1070,4.763,1071,4.763,1072,4.763]],["title/license.html",[110,1.817,1045,2.659,1073,2.659]],["body/license.html",[4,0.329,14,1.648,17,1.378,26,0.016,52,0.016,53,0.016,117,3.127,150,4.353,237,2.869,369,3.451,503,3.884,639,4.769,675,3.451,904,3.451,978,3.451,1051,3.884,1055,3.884,1073,3.884,1074,4.542,1075,6.277,1076,4.542,1077,4.542,1078,5.73,1079,4.542,1080,4.542,1081,3.884,1082,4.542,1083,5.73,1084,4.542,1085,6.591,1086,7.192,1087,4.542,1088,5.73,1089,4.542,1090,5.368,1091,4.542,1092,4.542,1093,4.542,1094,4.542,1095,4.542,1096,4.542,1097,4.542,1098,4.542,1099,4.542,1100,4.542,1101,3.884,1102,3.884,1103,5.73,1104,5.73,1105,4.542,1106,4.542,1107,5.73,1108,4.542,1109,4.542,1110,4.542,1111,4.542,1112,3.884,1113,4.542,1114,4.542,1115,4.542,1116,4.542,1117,4.542,1118,4.542,1119,4.542,1120,4.542,1121,4.542,1122,4.542,1123,4.542,1124,4.542,1125,4.542]],["title/modules.html",[224,1.889]],["body/modules.html",[26,0.018,52,0.018,53,0.018,224,2.101,225,3.838,304,5.213,305,4.334,612,3.838,841,3.838,1126,6.862,1127,6.862]],["title/overview.html",[1128,4.285]],["body/overview.html",[0,0.157,16,0.992,17,1.228,26,0.021,34,0.553,44,0.323,52,0.015,53,0.015,70,0.992,71,3.02,140,3.02,159,3.729,224,2.005,225,4.893,226,2.365,227,2.787,228,2.787,229,2.787,230,3.462,231,3.462,232,3.462,233,3.462,234,3.729,235,3.663,236,2.787,237,2.557,407,3.486,419,3.02,518,3.472,520,3.472,522,3.472,523,4.008,612,5.082,613,3.462,614,3.462,615,3.462,616,3.462,658,4.008,668,3.231,841,4.723,842,3.462,843,3.462,844,3.462,845,3.462,1059,3.462,1128,3.462,1129,4.049,1130,4.049,1131,4.049,1132,4.049]],["title/miscellaneous/typealiases.html",[1032,1.58,1133,4.44]],["body/miscellaneous/typealiases.html",[5,0.748,19,0.503,20,2.628,24,1.306,25,1.063,26,0.016,52,0.016,53,0.016,88,2.16,95,1.481,102,1.805,108,5.272,169,2.308,290,4.292,313,2.42,369,4.353,655,4.321,656,3.451,664,3.127,682,4.321,713,4.769,715,3.127,721,4.9,753,3.451,756,3.451,1032,2.308,1054,4.9,1134,4.542,1135,4.542,1136,5.73,1137,4.542,1138,5.73,1139,6.277,1140,4.542,1141,6.591,1142,4.542,1143,5.73,1144,6.277,1145,4.542,1146,4.542,1147,4.542,1148,4.542,1149,5.73,1150,4.542,1151,4.542,1152,4.542]],["title/miscellaneous/variables.html",[983,3.373,1032,1.58]],["body/miscellaneous/variables.html",[5,0.77,6,2.101,7,1.602,8,2.101,11,1.963,12,1.599,13,2.66,14,1.111,15,1.288,19,0.428,25,0.752,26,0.021,30,1.732,34,0.528,35,1.172,51,1.541,52,0.014,53,0.014,56,1.073,57,3.919,65,2.471,67,1.541,70,1.264,87,2.649,88,2.504,90,3.998,98,1.632,109,2.804,128,1.632,138,1.963,216,2.257,217,2.951,218,2.44,219,1.632,257,4.708,265,3.668,434,1.963,470,1.632,483,1.963,488,2.101,498,2.257,501,4.195,600,3.258,605,2.936,609,2.936,624,3.998,645,1.632,691,2.257,830,3.998,854,2.66,855,2.936,879,3.304,880,3.304,881,3.304,982,4.411,983,2.936,994,4.411,1001,4.411,1004,3.304,1005,4.966,1006,3.304,1007,4.411,1014,4.411,1032,2.951,1044,3.304,1153,3.864,1154,3.864,1155,3.864,1156,5.159,1157,3.864,1158,3.864,1159,3.864,1160,3.864,1161,3.864,1162,3.864,1163,3.864,1164,3.864,1165,3.864]],["title/additional-documentation/content-conductor.html",[142,1.133,217,1.363,1166,2.037,1167,2.037]],["body/additional-documentation/content-conductor.html",[14,1.623,15,1.033,16,1.216,17,1.712,19,0.626,21,1.74,22,2.307,24,1.05,26,0.019,28,2.133,31,1.921,32,1.985,39,0.603,49,0.876,52,0.014,53,0.014,56,0.759,66,1.377,70,0.895,75,1.651,78,0.895,82,0.944,83,0.931,84,0.847,88,1.377,132,3.749,133,3.48,134,2.133,137,2.886,140,2.523,142,2.873,144,3.297,146,3.825,147,3.885,148,2.133,149,2.775,155,4.287,158,1.985,159,2.7,162,4.287,165,1.985,168,1.985,169,1.856,171,3.136,172,2.307,176,2.928,177,3.123,178,3.292,190,3.773,192,3.136,193,4.247,198,4.826,199,2.514,217,3.396,224,1.377,234,1.985,242,2.514,245,2.133,248,2.514,278,2.514,283,1.985,285,3.123,292,2.133,319,3.123,328,2.775,385,2.7,500,2.775,685,2.514,691,2.133,718,3.123,893,2.514,1056,3.123,1081,3.123,1168,4.966,1169,3.652,1170,2.775,1171,4.966,1172,3.652,1173,3.652,1174,3.652,1175,3.652,1176,3.652,1177,3.652,1178,3.652,1179,3.652,1180,3.652,1181,3.652,1182,3.652,1183,3.652,1184,3.652,1185,3.652,1186,3.652,1187,3.652,1188,3.652,1189,3.652,1190,3.652,1191,3.652,1192,3.123]],["title/additional-documentation/dynamic-animations.html",[12,0.622,18,0.657,1166,2.037,1167,2.037]],["body/additional-documentation/dynamic-animations.html",[1,1.351,7,1.829,12,1.713,14,1.656,15,1.251,16,1.523,17,0.86,18,1.561,22,1.791,23,2.154,24,0.815,26,0.018,28,2.871,35,2.032,36,3.104,37,2.749,39,0.993,49,0.645,51,1.959,52,0.012,53,0.016,58,2.154,59,1.271,66,2.17,67,1.656,88,2.17,106,2.859,109,1.541,125,2.859,133,1.979,141,1.541,143,2.154,145,3.964,150,2.154,158,2.258,165,1.541,176,1.861,178,1.541,179,1.441,202,3.104,219,1.754,224,1.069,239,3.155,240,1.952,251,2.154,258,1.952,272,3.364,278,1.952,291,2.154,293,2.425,294,2.425,305,3.8,313,1.754,314,1.441,317,2.258,367,3.104,407,2.497,491,3.733,493,3.724,494,3.155,495,3.271,497,1.791,498,3.724,500,2.154,501,3.417,502,2.425,505,4.11,555,2.154,557,2.425,558,4.626,559,2.425,560,3.551,561,2.425,562,2.425,563,2.425,565,2.425,566,2.425,568,2.425,569,2.425,571,2.154,595,3.155,599,2.154,600,3.104,605,3.733,621,1.791,633,2.425,664,3.724,665,2.154,685,2.859,687,2.425,692,1.952,863,2.425,864,2.154,893,1.952,949,2.154,967,2.425,1041,2.425,1043,2.425,1090,3.551,1101,2.425,1102,2.425,1170,2.154,1193,2.835,1194,4.153,1195,2.835,1196,2.835,1197,2.835,1198,2.835,1199,2.835,1200,2.835,1201,5.758,1202,4.153,1203,2.835,1204,4.153,1205,4.153,1206,2.835,1207,2.835,1208,2.835,1209,2.835,1210,4.153,1211,4.153,1212,2.835,1213,2.835,1214,2.835,1215,2.835,1216,2.835,1217,2.835,1218,2.835,1219,2.835,1220,2.835,1221,2.835,1222,2.835,1223,2.835,1224,2.835,1225,2.835,1226,2.835,1227,2.835,1228,2.835,1229,2.835,1230,2.835,1231,2.835,1232,2.835,1233,2.835,1234,2.835,1235,2.835,1236,2.835,1237,2.835,1238,2.835,1239,2.835,1240,2.425]],["title/additional-documentation/dynamic-components.html",[15,0.558,18,0.657,1166,2.037,1167,2.037]],["body/additional-documentation/dynamic-components.html",[0,0.162,14,1.794,15,1.492,16,1.333,17,1.651,18,1.48,24,1.205,25,0.418,26,0.021,30,1.286,31,1.833,32,2.69,34,0.791,38,2.69,39,0.691,49,0.938,52,0.014,53,0.012,56,0.597,65,1.973,70,0.703,74,1.813,75,1.349,83,1.056,88,2.181,102,1.205,115,1.677,141,1.56,145,1.976,148,1.677,168,2.958,176,2.218,178,3.146,224,1.082,244,3.183,252,2.454,256,4.16,260,1.976,276,1.677,283,1.56,292,2.448,299,1.813,313,1.212,317,3.285,328,3.183,340,2.181,367,2.646,385,2.278,469,2.129,470,2.636,491,2.181,493,1.976,497,3.125,505,2.181,515,2.454,621,3.125,644,3.125,648,4.653,650,3.407,652,4.653,655,2.885,658,3.381,661,2.454,662,4.296,663,2.454,664,2.885,665,2.181,666,2.454,667,2.454,668,2.278,670,2.454,673,3.655,674,5.168,675,2.181,676,3.583,677,2.454,678,2.454,679,2.454,680,2.454,681,4.653,682,1.976,683,2.454,684,2.454,685,1.976,690,2.454,691,3.381,715,1.976,717,2.454,722,4.591,749,2.181,755,3.407,808,2.454,810,2.454,823,3.583,828,1.813,864,2.181,893,1.976,949,3.183,1057,2.454,1112,2.454,1170,2.181,1192,2.454,1240,2.454,1241,4.949,1242,2.87,1243,2.87,1244,2.87,1245,2.87,1246,2.87,1247,2.87,1248,2.87,1249,2.87,1250,4.19,1251,2.87,1252,2.87,1253,4.19,1254,2.87,1255,2.87,1256,2.87,1257,5.441,1258,2.87,1259,2.87,1260,4.19,1261,2.87,1262,4.19,1263,2.87,1264,4.19,1265,2.87,1266,2.87,1267,2.87,1268,2.87,1269,2.87,1270,2.87,1271,2.87,1272,2.87,1273,2.87]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["0",{"_index":400,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["0m",{"_index":881,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["10/16",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["14/19",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":1132,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1076,"title":{},"body":{"license.html":{}}}],["25",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1059,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3/4",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1131,"title":{},"body":{"overview.html":{}}}],["4/14",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1129,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["500m",{"_index":863,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["6",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["6.1.1",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":1072,"title":{},"body":{"index.html":{}}}],["6.2.2",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1130,"title":{},"body":{"overview.html":{}}}],["73",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["abil",{"_index":893,"title":{},"body":{"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["abov",{"_index":1102,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["abstract",{"_index":250,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["accessor",{"_index":323,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["act",{"_index":57,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":1121,"title":{},"body":{"license.html":{}}}],["actual",{"_index":258,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["ad",{"_index":199,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["add",{"_index":202,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["addit",{"_index":1166,"title":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}},"body":{}}],["alias",{"_index":1134,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alllow",{"_index":847,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["allow",{"_index":141,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["amount",{"_index":858,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["analog",{"_index":492,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["and/or",{"_index":1096,"title":{},"body":{"license.html":{}}}],["angular",{"_index":495,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["angular'",{"_index":249,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["angular/anim",{"_index":59,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"dependencies.html":{},"additional-documentation/dynamic-animations.html":{}}}],["angular/common",{"_index":850,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":89,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":12,"title":{"additional-documentation/dynamic-animations.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animation'",{"_index":868,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animation.t",{"_index":1007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animation/leav",{"_index":1006,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationbuild",{"_index":58,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animationbuilder):animationstatemachin",{"_index":69,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{}}}],["animationmetadata",{"_index":105,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["animations(anim",{"_index":579,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.direct",{"_index":628,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animations.directive.t",{"_index":489,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"coverage.html":{}}}],["animations.directive.ts:100",{"_index":527,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:108",{"_index":540,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:109",{"_index":538,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:115",{"_index":525,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:128",{"_index":532,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:132",{"_index":529,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:140",{"_index":524,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:154",{"_index":535,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:167",{"_index":534,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:91",{"_index":537,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:92",{"_index":536,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.directive.ts:93",{"_index":539,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.foreach(anim",{"_index":580,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animations.module.t",{"_index":617,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animations.servic",{"_index":543,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["animations.service.t",{"_index":631,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["animations.service.ts:30",{"_index":636,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["animations.service.ts:55",{"_index":638,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["animations/anim",{"_index":6,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/default",{"_index":403,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"coverage.html":{}}}],["animations/dynam",{"_index":488,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/leav",{"_index":1004,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations/leave/leave.directive.t",{"_index":854,"title":{},"body":{"directives/LeaveDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["animations/leave/leave.directive.ts:22",{"_index":872,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animations/leave/leave.directive.ts:24",{"_index":874,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["animations/ng",{"_index":882,"title":{},"body":{"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["animations/st",{"_index":947,"title":{},"body":{"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["animations:[dvkleav",{"_index":552,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationshandl",{"_index":510,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationshandlerconstructor",{"_index":629,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["animationsstatemachin",{"_index":409,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["animationsstatemachineconstructor",{"_index":630,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["animationstatemachin",{"_index":1,"title":{"interfaces/AnimationStateMachine.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"additional-documentation/dynamic-animations.html":{}}}],["animationstatemachineconstructor",{"_index":54,"title":{"interfaces/AnimationStateMachineConstructor.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["animationstatemachineconstructortoken",{"_index":90,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationstatemetadata",{"_index":530,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgStateService.html":{}}}],["animationstatemetadata).styl",{"_index":586,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationstatesbuild",{"_index":420,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["animationstatesservic",{"_index":71,"title":{"injectables/AnimationStatesService.html":{}},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"overview.html":{}}}],["animationstatesservice#createanimationstatemachin",{"_index":94,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["animationstatesservice):dynamicanimationshandl",{"_index":611,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{}}}],["animationstylemetadata",{"_index":103,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["animationstylesmap",{"_index":62,"title":{"interfaces/AnimationStylesMap.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"coverage.html":{}}}],["animationtransitionmetadata",{"_index":533,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["animationtransitionmetadata).anim",{"_index":585,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["animationtransitionsmap",{"_index":61,"title":{"interfaces/AnimationTransitionsMap.html":{}},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["anoth",{"_index":193,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["appli",{"_index":38,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-components.html":{}}}],["applic",{"_index":1065,"title":{},"body":{"index.html":{}}}],["aris",{"_index":1124,"title":{},"body":{"license.html":{}}}],["around",{"_index":291,"title":{},"body":{"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"additional-documentation/dynamic-animations.html":{}}}],["array",{"_index":165,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["arrow",{"_index":1264,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["assign",{"_index":246,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["associ",{"_index":1087,"title":{},"body":{"license.html":{}}}],["async",{"_index":666,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["attach",{"_index":158,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["attachinputstream",{"_index":700,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachinputstreams(stream",{"_index":712,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachoutputcallback",{"_index":701,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachoutputcallbacks(callback",{"_index":719,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["attachview",{"_index":151,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachview(contain",{"_index":154,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachview(container:str",{"_index":214,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["attachviews(contain",{"_index":163,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["attachviews(container:str",{"_index":215,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["author",{"_index":1051,"title":{},"body":{"index.html":{},"license.html":{}}}],["automat",{"_index":633,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["avail",{"_index":1056,"title":{},"body":{"index.html":{},"additional-documentation/content-conductor.html":{}}}],["back",{"_index":1151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["background",{"_index":565,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["base",{"_index":245,"title":{},"body":{"modules/ContentConductorModule.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["bbdynamiccomponentdirective2}",{"_index":734,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["be",{"_index":112,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/StateCSSMap.html":{}}}],["befor",{"_index":949,"title":{},"body":{"interfaces/StateCSSMap.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["below",{"_index":1213,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["between",{"_index":148,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["bind",{"_index":1228,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["bootstrap",{"_index":229,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["both",{"_index":500,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["bound",{"_index":505,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["brows",{"_index":1127,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":304,"title":{},"body":{"injectables/ContentConductorService.html":{},"dependencies.html":{},"modules.html":{}}}],["bug",{"_index":1220,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["build",{"_index":899,"title":{},"body":{"injectables/NgTransitionService.html":{},"index.html":{}}}],["buildanimationtransit",{"_index":894,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["buildanimationtransitions(transit",{"_index":897,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["builder",{"_index":68,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{}}}],["c",{"_index":369,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["call",{"_index":169,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/content-conductor.html":{}}}],["callback",{"_index":722,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["callbacks.model",{"_index":757,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{}}}],["callbacks.model.t",{"_index":1143,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["callbacks/output",{"_index":756,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["callbacks[cb](ev",{"_index":799,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["capabl",{"_index":408,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"index.html":{}}}],["card",{"_index":1208,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["case",{"_index":653,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["caus",{"_index":526,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["ccservic",{"_index":319,"title":{},"body":{"directives/ContentContainerDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["chanc",{"_index":1235,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["chang",{"_index":367,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["charg",{"_index":1082,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1117,"title":{},"body":{"license.html":{}}}],["class",{"_index":34,"title":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["clean",{"_index":167,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{}}}],["cli",{"_index":1069,"title":{},"body":{"index.html":{}}}],["click",{"_index":680,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["close",{"_index":555,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["closeallsubscript",{"_index":702,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["closeallsubscriptions(subscript",{"_index":723,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["closed';th",{"_index":1224,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["closur",{"_index":954,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["cluster_contentconductormodul",{"_index":230,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_declar",{"_index":231,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_export",{"_index":232,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_contentconductormodule_provid",{"_index":233,"title":{},"body":{"modules/ContentConductorModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodul",{"_index":613,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_declar",{"_index":614,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_export",{"_index":615,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamicanimationsmodule_provid",{"_index":616,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodul",{"_index":842,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_declar",{"_index":843,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_export",{"_index":844,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["cluster_dynamiccomponentsmodule_provid",{"_index":845,"title":{},"body":{"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["code",{"_index":862,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["collect",{"_index":603,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["color",{"_index":566,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["combin",{"_index":808,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["come",{"_index":1061,"title":{},"body":{"index.html":{}}}],["command",{"_index":1063,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":849,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["compil",{"_index":300,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"index.html":{}}}],["complet",{"_index":950,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["complex",{"_index":1215,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["compmodel",{"_index":738,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["compon",{"_index":15,"title":{"additional-documentation/dynamic-components.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["component'",{"_index":242,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"additional-documentation/content-conductor.html":{}}}],["component.direct",{"_index":851,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["component.directive.t",{"_index":659,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"coverage.html":{}}}],["component.directive.ts:104",{"_index":710,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:106",{"_index":709,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:112",{"_index":737,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:139",{"_index":733,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:152",{"_index":730,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:164",{"_index":741,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:183",{"_index":714,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:206",{"_index":720,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:223",{"_index":735,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:237",{"_index":724,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:247",{"_index":739,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:89",{"_index":744,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:90",{"_index":745,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:91",{"_index":746,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["component.directive.ts:97",{"_index":711,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentconstructor",{"_index":121,"title":{"interfaces/ComponentConstructor.html":{}},"body":{"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["componentconstructor):str",{"_index":815,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["componentfactoryresolv",{"_index":708,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentmodel",{"_index":747,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentmodel(compmodel",{"_index":760,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["componentnam",{"_index":479,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["componentref",{"_index":743,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["components.module.t",{"_index":846,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["components/compon",{"_index":122,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"coverage.html":{}}}],["components/default",{"_index":466,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"coverage.html":{}}}],["components/dynam",{"_index":645,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/initi",{"_index":1146,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["components/input",{"_index":1147,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["components/output",{"_index":1150,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["compref",{"_index":697,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["concept",{"_index":1204,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["condent",{"_index":1168,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["condit",{"_index":1101,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["conductor",{"_index":217,"title":{"additional-documentation/content-conductor.html":{}},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["conductor.model",{"_index":220,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["conductor.model.t",{"_index":139,"title":{},"body":{"interfaces/ContentConductor.html":{},"coverage.html":{}}}],["conductor.model.ts:101",{"_index":164,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:22",{"_index":184,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:28",{"_index":166,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:41",{"_index":189,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:56",{"_index":174,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:70",{"_index":201,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:81",{"_index":182,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.model.ts:91",{"_index":157,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["conductor.module.t",{"_index":238,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["conductor.servic",{"_index":264,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{}}}],["conductor.service.t",{"_index":277,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["conductor.service.ts:117",{"_index":348,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:12",{"_index":337,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:128",{"_index":345,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:139",{"_index":344,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:19",{"_index":338,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:20",{"_index":343,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:21",{"_index":339,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:22",{"_index":341,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:23",{"_index":342,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:25",{"_index":351,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:28",{"_index":287,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["conductor.service.ts:33",{"_index":349,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:41",{"_index":289,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["conductor.service.ts:58",{"_index":346,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:76",{"_index":352,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:90",{"_index":347,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor.service.ts:96",{"_index":353,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["conductor/cont",{"_index":138,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conductor/contain",{"_index":129,"title":{},"body":{"interfaces/ContainersMap.html":{},"coverage.html":{}}}],["conductor/content/content.directive.t",{"_index":327,"title":{},"body":{"directives/ContentDirective.html":{},"coverage.html":{}}}],["conductor/content/content.directive.ts:13",{"_index":330,"title":{},"body":{"directives/ContentDirective.html":{}}}],["conductor/default",{"_index":263,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["conductorconstructor",{"_index":275,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{}}}],["conductorservic",{"_index":284,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["configur",{"_index":867,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["conform",{"_index":262,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["connect",{"_index":1125,"title":{},"body":{"license.html":{}}}],["consist",{"_index":1255,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["console.error(`${compmodel.nam",{"_index":764,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["console.error(`${express",{"_index":942,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["console.log('dynam",{"_index":679,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["const",{"_index":385,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constant",{"_index":1238,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["constrain",{"_index":1149,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constraint",{"_index":1202,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["construct",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constructor(animationshandlerconstructor",{"_index":635,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["constructor(build",{"_index":79,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["constructor(conductorconstructor",{"_index":286,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["constructor(containersquerylist",{"_index":336,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["constructor(el",{"_index":415,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["constructor(priv",{"_index":283,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["constructor(protect",{"_index":762,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["constructor(rendererfactori",{"_index":959,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["constructor(serializerconstructor",{"_index":824,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["constructor(serializermap",{"_index":474,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["constructor(templateref",{"_index":329,"title":{},"body":{"directives/ContentDirective.html":{}}}],["constructor(vcref",{"_index":318,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["constructor.model",{"_index":271,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{}}}],["constructor.model.t",{"_index":124,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"interfaces/ContentConductorConstructor.html":{},"coverage.html":{}}}],["constructor.token",{"_index":266,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{}}}],["constructor.token.t",{"_index":982,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor/compon",{"_index":123,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["constructor/cont",{"_index":218,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consum",{"_index":1197,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["contain",{"_index":133,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["container.direct",{"_index":270,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["container.directive.t",{"_index":312,"title":{},"body":{"directives/ContentContainerDirective.html":{},"coverage.html":{}}}],["container.directive.ts:24",{"_index":322,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["container.directive.ts:29",{"_index":320,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["container.model",{"_index":205,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{}}}],["container.model.t",{"_index":307,"title":{},"body":{"interfaces/ContentContainer.html":{},"coverage.html":{}}}],["container.viewcontain",{"_index":358,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["container/cont",{"_index":204,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["container:str",{"_index":211,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["containernam",{"_index":309,"title":{},"body":{"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{}}}],["containers.reduce((map,contain",{"_index":356,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["containersmap",{"_index":127,"title":{"interfaces/ContainersMap.html":{}},"body":{"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["containersquerylist",{"_index":221,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["containerssub",{"_index":333,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["content",{"_index":142,"title":{"additional-documentation/content-conductor.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["content/content.direct",{"_index":269,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["contentchildren(contentdirect",{"_index":1172,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["contentconductor",{"_index":137,"title":{"interfaces/ContentConductor.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"additional-documentation/content-conductor.html":{}}}],["contentconductorconstructor",{"_index":216,"title":{"interfaces/ContentConductorConstructor.html":{}},"body":{"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentconductorconstructortoken",{"_index":265,"title":{},"body":{"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentconductormodul",{"_index":225,"title":{"modules/ContentConductorModule.html":{}},"body":{"modules/ContentConductorModule.html":{},"modules.html":{},"overview.html":{}}}],["contentconductorservic",{"_index":140,"title":{"injectables/ContentConductorService.html":{}},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentcontain",{"_index":203,"title":{"interfaces/ContentContainer.html":{}},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["contentcontainerdirect",{"_index":159,"title":{"directives/ContentContainerDirective.html":{}},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentcontainerdirective'",{"_index":195,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["contentdirect",{"_index":234,"title":{"directives/ContentDirective.html":{}},"body":{"modules/ContentConductorModule.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{}}}],["contentsquerylist",{"_index":223,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{}}}],["contentssub",{"_index":334,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["context",{"_index":1262,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["contract",{"_index":1122,"title":{},"body":{"license.html":{}}}],["convert",{"_index":884,"title":{},"body":{"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{}}}],["copi",{"_index":1085,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1075,"title":{},"body":{"license.html":{}}}],["core",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["correctli",{"_index":301,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["coverag",{"_index":977,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":31,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"injectables/StateCssMapperService.html":{},"index.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["create(injector",{"_index":781,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createanimationshandl",{"_index":634,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["createanimationshandler(el",{"_index":637,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["createanimationstatemachin",{"_index":76,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createanimationstatemachine(el",{"_index":85,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["createanimationstatemachine]{@link",{"_index":93,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["createcompon",{"_index":703,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createcomponent(constructor",{"_index":727,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createcontentconductor",{"_index":285,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["createcontentconductor(containersquerylist",{"_index":288,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["createcontentconductor(this.contain",{"_index":1179,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["createcssmapp",{"_index":411,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createcssmapper(map",{"_index":423,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createembeddedview(templ",{"_index":376,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["createinjector",{"_index":704,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createinjector(provid",{"_index":732,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["createseri",{"_index":823,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-components.html":{}}}],["createserializer(map",{"_index":827,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["createstatecssmapp",{"_index":957,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["createstatecssmapper(el",{"_index":963,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["createstatecssmapper(this.element,this.cssmap",{"_index":463,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createstatemachin",{"_index":412,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["createstatemachine(transit",{"_index":425,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["css",{"_index":33,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["cssmap",{"_index":416,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["cssmapper",{"_index":410,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["cssmapperservic",{"_index":418,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["current",{"_index":36,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"directives/LeaveDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["currentst",{"_index":1223,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["custom",{"_index":260,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["da",{"_index":509,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["damag",{"_index":1118,"title":{},"body":{"license.html":{}}}],["daservic",{"_index":517,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["data",{"_index":648,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-components.html":{}}}],["data.model",{"_index":811,"title":{},"body":{"interfaces/DynamicComponentModel.html":{}}}],["data.model.t",{"_index":647,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"coverage.html":{}}}],["data/dynam",{"_index":646,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["dc",{"_index":695,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["dcsservic",{"_index":1248,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["deal",{"_index":1088,"title":{},"body":{"license.html":{}}}],["dec",{"_index":1042,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declar",{"_index":228,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["decor",{"_index":1195,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["decrement",{"_index":1043,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["default",{"_index":87,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["defaultanimationsstatemachin",{"_index":619,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["defaultcontentconductorservic",{"_index":259,"title":{"classes/DefaultContentConductorService.html":{}},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["defaultdynamicanimationshandlerservic",{"_index":402,"title":{"classes/DefaultDynamicAnimationsHandlerService.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["defaultdynamiccomponentseri",{"_index":465,"title":{"classes/DefaultDynamicComponentSerializer.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["defin",{"_index":39,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["definin",{"_index":1225,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["definit",{"_index":125,"title":{},"body":{"interfaces/ComponentConstructor.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["demo",{"_index":1067,"title":{},"body":{"index.html":{}}}],["depend",{"_index":226,"title":{"dependencies.html":{}},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descend",{"_index":1174,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["describ",{"_index":598,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{}}}],["descript",{"_index":10,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{}}}],["deseri",{"_index":766,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["deserializemap",{"_index":820,"title":{},"body":{"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["deserializemap.get(componentnam",{"_index":486,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["design",{"_index":1252,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["desir",{"_index":621,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["destin",{"_index":197,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["destroy",{"_index":21,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["destroy():void",{"_index":207,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["destroycomp",{"_index":705,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["detach",{"_index":175,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["detachedview",{"_index":397,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["detachview",{"_index":152,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detachview(contain",{"_index":173,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detachviews(contain",{"_index":181,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["detail",{"_index":280,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["detect",{"_index":663,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["develop",{"_index":692,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{}}}],["differ",{"_index":332,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["direct",{"_index":16,"title":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["directive'",{"_index":170,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["display",{"_index":172,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["dispos",{"_index":1269,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["distinct",{"_index":1271,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["distinctuntilchang",{"_index":716,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["distribut",{"_index":1094,"title":{},"body":{"license.html":{}}}],["docs/injectables/contentconductorservice.html",{"_index":282,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["document",{"_index":978,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":254,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["dsservic",{"_index":669,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["due",{"_index":1233,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["dure",{"_index":1170,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["dvk",{"_index":316,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"index.html":{}}}],["dvkdemo",{"_index":1064,"title":{},"body":{"index.html":{}}}],["dvkleav",{"_index":501,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["dvkleavetim",{"_index":1009,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["dvkleavetiming(tim",{"_index":878,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{}}}],["dynam",{"_index":18,"title":{"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamicanimationsdirect",{"_index":407,"title":{"directives/DynamicAnimationsDirective.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-animations.html":{}}}],["dynamicanimationshandl",{"_index":406,"title":{"interfaces/DynamicAnimationsHandler.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["dynamicanimationshandlerconstructor",{"_index":607,"title":{"interfaces/DynamicAnimationsHandlerConstructor.html":{}},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["dynamicanimationshandlerconstructortoken",{"_index":624,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamicanimationsmodul",{"_index":612,"title":{"modules/DynamicAnimationsModule.html":{}},"body":{"modules/DynamicAnimationsModule.html":{},"modules.html":{},"overview.html":{}}}],["dynamicanimationsservic",{"_index":518,"title":{"injectables/DynamicAnimationsService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicanimationsservice#createanimationshandl",{"_index":641,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["dynamiccomponentdata",{"_index":644,"title":{"interfaces/DynamicComponentData.html":{}},"body":{"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentdirect",{"_index":658,"title":{"directives/DynamicComponentDirective.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentmodel",{"_index":673,"title":{"interfaces/DynamicComponentModel.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentseri",{"_index":469,"title":{"interfaces/DynamicComponentSerializer.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentserializerconstructor",{"_index":816,"title":{"interfaces/DynamicComponentSerializerConstructor.html":{}},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["dynamiccomponentserializerconstructortoken",{"_index":830,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamiccomponentserializermap",{"_index":471,"title":{"interfaces/DynamicComponentSerializerMap.html":{}},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"coverage.html":{}}}],["dynamiccomponentserializermap):dynamiccomponentseri",{"_index":819,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["dynamiccomponentserializerservic",{"_index":668,"title":{"injectables/DynamicComponentSerializerService.html":{}},"body":{"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentsmap",{"_index":828,"title":{"interfaces/DynamicComponentsMap.html":{}},"body":{"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{},"additional-documentation/dynamic-components.html":{}}}],["dynamiccomponentsmodul",{"_index":841,"title":{"modules/DynamicComponentsModule.html":{}},"body":{"modules/DynamicComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["e",{"_index":677,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["each",{"_index":113,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{}}}],["element",{"_index":66,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["elementref",{"_index":516,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["emit",{"_index":1270,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["emitt",{"_index":1242,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["empti",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":162,"title":{},"body":{"interfaces/ContentConductor.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["enough",{"_index":1237,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["enter",{"_index":595,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["entir",{"_index":1258,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["entri",{"_index":906,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["enumer",{"_index":1033,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1066,"title":{},"body":{"index.html":{}}}],["even",{"_index":295,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["event",{"_index":1114,"title":{},"body":{"license.html":{}}}],["eventemitt",{"_index":749,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["eventemitter}",{"_index":721,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{}}}],["eventu",{"_index":866,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["exampl",{"_index":276,"title":{},"body":{"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"additional-documentation/dynamic-components.html":{}}}],["except",{"_index":1199,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["execut",{"_index":791,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"overview.html":{}}}],["exportas:'dynamiccomp2",{"_index":759,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["expos",{"_index":1196,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["express",{"_index":904,"title":{},"body":{"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["expression.length",{"_index":946,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expression.split(ngtransitionsymbols.to",{"_index":922,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["expressions.split(',').foreach(express",{"_index":920,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["extend",{"_index":810,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["fact",{"_index":1234,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["fail",{"_index":640,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["featur",{"_index":1052,"title":{},"body":{"index.html":{}}}],["feed",{"_index":694,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["few",{"_index":1198,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["field",{"_index":1257,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"license.html":{}}}],["find",{"_index":1217,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["finish",{"_index":496,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["fire",{"_index":792,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["first",{"_index":1240,"title":{},"body":{"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["fit",{"_index":1111,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1100,"title":{},"body":{"license.html":{}}}],["fomrindex",{"_index":208,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["for(let",{"_index":394,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["form",{"_index":143,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["format",{"_index":1193,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["forroot",{"_index":255,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["forroot(conductorconstructor",{"_index":273,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["found",{"_index":765,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["free",{"_index":1081,"title":{},"body":{"license.html":{},"additional-documentation/content-conductor.html":{}}}],["fromindex",{"_index":188,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["fromresolvedprovid",{"_index":776,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["fromstat",{"_index":114,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"injectables/NgTransitionService.html":{}}}],["fulli",{"_index":1205,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["function",{"_index":24,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["furnish",{"_index":1099,"title":{},"body":{"license.html":{}}}],["futur",{"_index":1239,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["garbag",{"_index":602,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["gener",{"_index":1071,"title":{},"body":{"index.html":{}}}],["get",{"_index":1045,"title":{"index.html":{},"license.html":{}},"body":{}}],["getcompon",{"_index":472,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getcomponent(componentnam",{"_index":477,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getcssclass",{"_index":958,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getcssclass(st",{"_index":965,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getcssclass(state:str",{"_index":968,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["getnam",{"_index":473,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getname(componentconstructor",{"_index":480,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{}}}],["getviewcontain",{"_index":324,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["given",{"_index":77,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["goal",{"_index":1049,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1080,"title":{},"body":{"license.html":{}}}],["green",{"_index":567,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["handl",{"_index":247,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/StateCssMapperService.html":{}}}],["handler",{"_index":609,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"miscellaneous/variables.html":{}}}],["handler.constructor",{"_index":622,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.constructor.t",{"_index":608,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"coverage.html":{}}}],["handler.model",{"_index":435,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.model.t",{"_index":597,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"coverage.html":{}}}],["handler.servic",{"_index":623,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["handler.service.t",{"_index":405,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:16",{"_index":422,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:17",{"_index":421,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:32",{"_index":433,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:36",{"_index":429,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:48",{"_index":431,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:52",{"_index":427,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:60",{"_index":426,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.service.ts:83",{"_index":424,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["handler.token",{"_index":625,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["handler.token.t",{"_index":1001,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler/default",{"_index":404,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["handler/dynam",{"_index":434,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hard",{"_index":861,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["held",{"_index":29,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["here",{"_index":1057,"title":{},"body":{"index.html":{},"additional-documentation/dynamic-components.html":{}}}],["herebi",{"_index":1079,"title":{},"body":{"license.html":{}}}],["holder",{"_index":1115,"title":{},"body":{"license.html":{}}}],["hook",{"_index":1241,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["hostbind",{"_index":871,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["hostbinding(\"@dvkleav",{"_index":875,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["html",{"_index":758,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["i=0",{"_index":395,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["identifi",{"_index":191,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentContainer.html":{},"coverage.html":{}}}],["if(!sub.clos",{"_index":805,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(callback",{"_index":793,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(expression.includes(ngtransitionsymbols.dec",{"_index":943,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.eith",{"_index":921,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.ent",{"_index":934,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.inc",{"_index":941,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.leav",{"_index":937,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(expression.includes(ngtransitionsymbols.to",{"_index":931,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(initialcontain",{"_index":373,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(stream",{"_index":786,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(subscript",{"_index":803,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["if(this.animationshandl",{"_index":577,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.animationsstatemachin",{"_index":446,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.containerssub",{"_index":377,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(this.contentssub",{"_index":380,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["if(this.cssmap",{"_index":459,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.cssmapp",{"_index":460,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.isstring(express",{"_index":919,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["if(this.istransition(anim",{"_index":581,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.myst",{"_index":573,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["if(this.st",{"_index":444,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["if(this.transit",{"_index":454,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["ifram",{"_index":306,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["ignor",{"_index":944,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["implement",{"_index":219,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["impli",{"_index":1109,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}}}],["inc",{"_index":1040,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["includ",{"_index":1090,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["increment",{"_index":1041,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/dynamic-animations.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{}}}],["individu",{"_index":903,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["init",{"_index":22,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["init(initialcontain",{"_index":183,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["initi",{"_index":32,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["initialcontain",{"_index":185,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["initializecompon",{"_index":706,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initializecomponent(compmodel",{"_index":736,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initializedvalu",{"_index":1256,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["initialst",{"_index":610,"title":{},"body":{"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{}}}],["initialvalu",{"_index":655,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["initvalu",{"_index":742,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["initvalues[input",{"_index":784,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["inject",{"_index":70,"title":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["inject(animationstatemachineconstructortoken",{"_index":97,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["inject(contentconductorconstructortoken",{"_index":302,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["inject(dynamicanimationshandlerconstructortoken",{"_index":642,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["inject(dynamiccomponentserializerconstructortoken",{"_index":833,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["injectiontoken('animationstatemachineconstructortoken",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('containersconductorconstructortoken",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dynamicanimationshandlerconstructortoken",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dynamiccomponentserializerconstructortoken",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":728,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["inner",{"_index":111,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["input",{"_index":317,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["input('dvk",{"_index":325,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["inputstream",{"_index":713,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["inputsubscript",{"_index":698,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["insert",{"_index":198,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["insertindex",{"_index":386,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["insid",{"_index":178,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["instal",{"_index":1060,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":691,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"modules/DynamicComponentsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["instanti",{"_index":256,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["instead",{"_index":251,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"additional-documentation/dynamic-animations.html":{}}}],["intention",{"_index":686,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"interfaces/ContentContainer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"interfaces/ContentContainer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/dynamic-components.html":{}}}],["intern",{"_index":688,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["isstat",{"_index":513,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["isstate(metadata",{"_index":528,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["isstring(express",{"_index":945,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["istransit",{"_index":514,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["istransition(metadata",{"_index":531,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["it'",{"_index":177,"title":{},"body":{"interfaces/ContentConductor.html":{},"additional-documentation/content-conductor.html":{}}}],["item",{"_index":1191,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["itself",{"_index":1222,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["js",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":1236,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["key",{"_index":108,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"miscellaneous/typealiases.html":{}}}],["keys.model.t",{"_index":1141,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["kind",{"_index":1108,"title":{},"body":{"license.html":{}}}],["kit",{"_index":1047,"title":{},"body":{"index.html":{}}}],["last",{"_index":180,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{}}}],["later",{"_index":1247,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["leav",{"_index":498,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["leave/leave.direct",{"_index":549,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["leavedirect",{"_index":523,"title":{"directives/LeaveDirective.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/LeaveDirective.html":{},"coverage.html":{},"overview.html":{}}}],["leavetim",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":227,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["length",{"_index":392,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["level",{"_index":107,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["liabil",{"_index":1119,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1116,"title":{},"body":{"license.html":{}}}],["librari",{"_index":1048,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1073,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycl",{"_index":660,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["limit",{"_index":150,"title":{},"body":{"interfaces/ContentConductor.html":{},"license.html":{},"additional-documentation/dynamic-animations.html":{}}}],["link",{"_index":95,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/typealiases.html":{}}}],["list",{"_index":294,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["liter",{"_index":119,"title":{},"body":{"interfaces/AnimationTransitionsMap.html":{}}}],["locat",{"_index":196,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["long",{"_index":864,"title":{},"body":{"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["look",{"_index":967,"title":{},"body":{"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["machin",{"_index":13,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"miscellaneous/variables.html":{}}}],["machine.constructor",{"_index":92,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{}}}],["machine.constructor.t",{"_index":55,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"coverage.html":{}}}],["machine.model",{"_index":60,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["machine.model.t",{"_index":9,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"coverage.html":{}}}],["machine.servic",{"_index":627,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["machine.service.t",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["machine.token",{"_index":91,"title":{},"body":{"injectables/AnimationStatesService.html":{},"modules/DynamicAnimationsModule.html":{}}}],["machine.token.t",{"_index":994,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["machine/anim",{"_index":8,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"modules/DynamicAnimationsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["machine/default",{"_index":626,"title":{},"body":{"modules/DynamicAnimationsModule.html":{},"coverage.html":{}}}],["made",{"_index":687,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["main",{"_index":490,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["manag",{"_index":1273,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["manual",{"_index":252,"title":{},"body":{"modules/ContentConductorModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["map",{"_index":102,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"injectables/NgStateService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["map(cb",{"_index":796,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["map.model",{"_index":355,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/StateCssMapperService.html":{}}}],["map.model.t",{"_index":131,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/DynamicComponentsMap.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{}}}],["map.model.ts:18",{"_index":951,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["map.model.ts:6",{"_index":135,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/DynamicComponentsMap.html":{}}}],["map/contain",{"_index":130,"title":{},"body":{"interfaces/ContainersMap.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{}}}],["map/dynam",{"_index":482,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"coverage.html":{}}}],["map/stat",{"_index":436,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["map[container.containernam",{"_index":357,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["map[entri",{"_index":975,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["map[nam",{"_index":837,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["map[stat",{"_index":969,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["map[state.nam",{"_index":890,"title":{},"body":{"injectables/NgStateService.html":{}}}],["mapcontain",{"_index":335,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["mapcontainers(contain",{"_index":350,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["mapper",{"_index":46,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["mapper.model",{"_index":43,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/StateCssMapperService.html":{}}}],["mapper.model.t",{"_index":952,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"coverage.html":{}}}],["mapper.servic",{"_index":438,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["mapper.service.t",{"_index":956,"title":{},"body":{"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["mapper.service.ts:11",{"_index":961,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper.service.ts:22",{"_index":966,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper.service.ts:32",{"_index":964,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["mapper/st",{"_index":42,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["mark",{"_index":718,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["match",{"_index":53,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["matter",{"_index":654,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/LeaveDirective.html":{}}}],["member",{"_index":491,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["merchant",{"_index":1110,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1092,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":314,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["method",{"_index":75,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["miscellan",{"_index":1032,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1074,"title":{},"body":{"license.html":{}}}],["model",{"_index":650,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"additional-documentation/dynamic-components.html":{}}}],["model.model",{"_index":752,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["model.model.t",{"_index":807,"title":{},"body":{"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["model/dynam",{"_index":751,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"coverage.html":{}}}],["modifi",{"_index":1055,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":224,"title":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"modules.html":{}},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["modulewithprovid",{"_index":268,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["moment",{"_index":1210,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["more",{"_index":1214,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["mouseev",{"_index":678,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["move",{"_index":147,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["moveview",{"_index":153,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["moveview(previouscontain",{"_index":186,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["moveviews(previouscontain",{"_index":200,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["multipl",{"_index":149,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["myaniamt",{"_index":556,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mycompon",{"_index":553,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mycssmap",{"_index":570,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["mystat",{"_index":554,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["name",{"_index":83,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["name:str",{"_index":136,"title":{},"body":{"interfaces/ContainersMap.html":{}}}],["necessari",{"_index":240,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-animations.html":{}}}],["need",{"_index":859,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["new",{"_index":65,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/StateCSSMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["new(...args):ani",{"_index":126,"title":{},"body":{"interfaces/ComponentConstructor.html":{}}}],["new(serializermap",{"_index":818,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["newtransit",{"_index":910,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["newtransitions[fromstate][tost",{"_index":916,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["next",{"_index":23,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/DynamicAnimationsHandler.html":{},"additional-documentation/dynamic-animations.html":{}}}],["nextcontain",{"_index":187,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["nextcontainer:str",{"_index":209,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["nextstat",{"_index":48,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["nextstate(tost",{"_index":428,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["nextstate(tostate:str",{"_index":443,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["ng",{"_index":544,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1171,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["ngmodul",{"_index":267,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["ngondestroy",{"_index":171,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["ngoninit",{"_index":515,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["ngrx",{"_index":1244,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["ngstateservic",{"_index":522,"title":{"injectables/NgStateService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgStateService.html":{},"coverage.html":{},"overview.html":{}}}],["ngtransitionservic",{"_index":520,"title":{"injectables/NgTransitionService.html":{}},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"overview.html":{}}}],["ngtransitionst",{"_index":547,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{}}}],["ngtransitionstates.void",{"_index":592,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.void]:transition.anim",{"_index":940,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.wildcard",{"_index":938,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionstates.wildcard]:transition.anim",{"_index":936,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["ngtransitionsymbol",{"_index":907,"title":{},"body":{"injectables/NgTransitionService.html":{},"miscellaneous/enumerations.html":{}}}],["noninfring",{"_index":1113,"title":{},"body":{"license.html":{}}}],["normal",{"_index":494,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-animations.html":{}}}],["note",{"_index":685,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["noth",{"_index":857,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["notic",{"_index":1103,"title":{},"body":{"license.html":{}}}],["nottypedkey",{"_index":1139,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["now",{"_index":1267,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["null",{"_index":383,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{}}}],["number",{"_index":115,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["number):viewref",{"_index":212,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["number):void",{"_index":210,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["numbercompon",{"_index":1250,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["numer",{"_index":1226,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["object",{"_index":30,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["object.keys(callback",{"_index":795,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["object.keys(initvalues).map",{"_index":782,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["object.keys(map).foreach(entry=>renderer.removeclass(el",{"_index":974,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["object.keys(map).foreach(nam",{"_index":834,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["object.keys(newtransitions).foreach(fromst",{"_index":912,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["object.keys(newtransitions[fromstate]).foreach(tost",{"_index":913,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["object.keys(streams).map(input",{"_index":788,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["observ",{"_index":715,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["observable}",{"_index":785,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["obtain",{"_index":1084,"title":{},"body":{"license.html":{}}}],["occur",{"_index":118,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{}}}],["offer",{"_index":1058,"title":{},"body":{"index.html":{}}}],["old",{"_index":948,"title":{},"body":{"interfaces/StateCSSMap.html":{}}}],["ommit",{"_index":161,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["on",{"_index":192,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["onclick",{"_index":676,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["ondestroy",{"_index":508,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["oninit",{"_index":507,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["open",{"_index":571,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["open';th",{"_index":1231,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["oper",{"_index":717,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["option",{"_index":84,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{}}}],["order",{"_index":278,"title":{},"body":{"injectables/ContentConductorService.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["origin",{"_index":560,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["otherwis",{"_index":503,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"license.html":{}}}],["out",{"_index":237,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":755,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["outputcallback",{"_index":682,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-components.html":{}}}],["outputsubscript",{"_index":699,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["outsid",{"_index":1218,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["overriden",{"_index":331,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["overview",{"_index":1128,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1019,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1167,"title":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}},"body":{}}],["param",{"_index":98,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/variables.html":{}}}],["paramet",{"_index":82,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"miscellaneous/functions.html":{},"additional-documentation/content-conductor.html":{}}}],["pars",{"_index":902,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["parsest",{"_index":885,"title":{},"body":{"injectables/NgStateService.html":{}}}],["parsestates(st",{"_index":887,"title":{},"body":{"injectables/NgStateService.html":{}}}],["parsetransitionexpress",{"_index":895,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["parsetransitionexpression(transit",{"_index":900,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["part",{"_index":239,"title":{},"body":{"modules/ContentConductorModule.html":{},"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-animations.html":{}}}],["partial",{"_index":1232,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["particular",{"_index":117,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"injectables/DynamicAnimationsService.html":{},"license.html":{}}}],["pass",{"_index":497,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["permiss",{"_index":1078,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1098,"title":{},"body":{"license.html":{}}}],["person",{"_index":1083,"title":{},"body":{"license.html":{}}}],["piec",{"_index":1192,"title":{},"body":{"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["pipe",{"_index":667,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["plan",{"_index":1227,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["play",{"_index":37,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"additional-documentation/dynamic-animations.html":{}}}],["pleas",{"_index":1211,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["point",{"_index":693,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["portion",{"_index":1106,"title":{},"body":{"license.html":{}}}],["potenti",{"_index":726,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["predefin",{"_index":1037,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["preserv",{"_index":1265,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["previouscontain",{"_index":194,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["privat",{"_index":96,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"injectables/NgTransitionService.html":{}}}],["project",{"_index":1070,"title":{},"body":{"index.html":{}}}],["projects/.../anim",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../cont",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dynam",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../initi",{"_index":1135,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../input",{"_index":1137,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../leav",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../leave.directive.t",{"_index":1044,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../ng",{"_index":1034,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../not",{"_index":1140,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../output",{"_index":1142,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../typ",{"_index":1145,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/common/not",{"_index":1148,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/common/typ",{"_index":1152,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/dvk/src/lib/cont",{"_index":128,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/dvk/src/lib/dynam",{"_index":5,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properli",{"_index":1268,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["properti",{"_index":20,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentContainer.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/typealiases.html":{}}}],["protect",{"_index":696,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["provid",{"_index":17,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"injectables/NgTransitionService.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["pseudo",{"_index":1005,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":869,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["publish",{"_index":1093,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1112,"title":{},"body":{"license.html":{},"additional-documentation/dynamic-components.html":{}}}],["put",{"_index":222,"title":{},"body":{"interfaces/ContentConductorConstructor.html":{},"interfaces/DynamicComponentData.html":{}}}],["queri",{"_index":293,"title":{},"body":{"injectables/ContentConductorService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["querylist",{"_index":146,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["read",{"_index":1173,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["readonli",{"_index":311,"title":{},"body":{"interfaces/ContentContainer.html":{}}}],["recogn",{"_index":1200,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["red",{"_index":569,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["refer",{"_index":28,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"directives/ContentContainerDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMapper.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{}}}],["referenc",{"_index":1169,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["reflectiveinjector",{"_index":729,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["reflectiveinjector.resolve(provid",{"_index":777,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["releas",{"_index":27,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/StateCSSMapper.html":{}}}],["remov",{"_index":179,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-animations.html":{}}}],["removeal",{"_index":953,"title":{},"body":{"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["render",{"_index":970,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.addclass(element,this.getcssclass(state,map",{"_index":973,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.destroy",{"_index":976,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["renderer.removeclass(element,this.getcssclass(state,map",{"_index":972,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["rendererfactori",{"_index":962,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["rendererfactory2",{"_index":960,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["report",{"_index":1221,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["repres",{"_index":109,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductorConstructor.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicComponentData.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["request",{"_index":731,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["requir",{"_index":297,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["reset",{"_index":236,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}],["resolv",{"_index":299,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"injectables/DynamicComponentSerializerService.html":{},"additional-documentation/dynamic-components.html":{}}}],["resolvecomponentfactory(constructor",{"_index":780,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["resourc",{"_index":1189,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["respect",{"_index":620,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["restrict",{"_index":1089,"title":{},"body":{"license.html":{}}}],["result",{"_index":52,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["return",{"_index":78,"title":{},"body":{"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{}}}],["reus",{"_index":690,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["rich",{"_index":1053,"title":{},"body":{"index.html":{}}}],["right",{"_index":1091,"title":{},"body":{"license.html":{}}}],["run",{"_index":599,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["runtim",{"_index":618,"title":{},"body":{"modules/DynamicAnimationsModule.html":{}}}],["rxj",{"_index":354,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":750,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["safe",{"_index":1259,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["same",{"_index":664,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["scaley(0.0",{"_index":562,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["scaley(1.0",{"_index":559,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["section",{"_index":1212,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["see",{"_index":279,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{}}}],["selector",{"_index":315,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{}}}],["sell",{"_index":1097,"title":{},"body":{"license.html":{}}}],["separ",{"_index":651,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["seri",{"_index":601,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["serial",{"_index":470,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["serializ",{"_index":1253,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["serializednam",{"_index":839,"title":{},"body":{"interfaces/DynamicComponentsMap.html":{}}}],["serializedname:str",{"_index":840,"title":{},"body":{"interfaces/DynamicComponentsMap.html":{}}}],["serializemap",{"_index":821,"title":{},"body":{"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializemap.get(componentconstructor",{"_index":487,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.constructor",{"_index":832,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{}}}],["serializer.constructor.t",{"_index":817,"title":{},"body":{"interfaces/DynamicComponentSerializerConstructor.html":{},"coverage.html":{}}}],["serializer.model",{"_index":484,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{}}}],["serializer.model.t",{"_index":812,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{},"coverage.html":{}}}],["serializer.model.ts:7",{"_index":813,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["serializer.model.ts:8",{"_index":814,"title":{},"body":{"interfaces/DynamicComponentSerializer.html":{}}}],["serializer.servic",{"_index":852,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["serializer.service.t",{"_index":822,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"coverage.html":{}}}],["serializer.service.ts:13",{"_index":825,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.service.ts:20",{"_index":829,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializer.t",{"_index":468,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"coverage.html":{}}}],["serializer.token",{"_index":831,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{}}}],["serializer.token.t",{"_index":1014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializer.ts:10",{"_index":475,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.ts:14",{"_index":478,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer.ts:19",{"_index":481,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["serializer/default",{"_index":467,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{}}}],["serializer/dynam",{"_index":483,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"injectables/DynamicComponentSerializerService.html":{},"modules/DynamicComponentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializerconstructor",{"_index":826,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializerconstrutor",{"_index":853,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["serializermap",{"_index":476,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{},"injectables/DynamicComponentSerializerService.html":{}}}],["serializermap.deserializemap.set(nam",{"_index":836,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serializermap.serializemap.set(map[nam",{"_index":835,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["serialz",{"_index":689,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["serveangular",{"_index":1068,"title":{},"body":{"index.html":{}}}],["server",{"_index":1246,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["servic",{"_index":74,"title":{},"body":{"injectables/AnimationStatesService.html":{},"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/dynamic-components.html":{}}}],["set",{"_index":313,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["setanim",{"_index":413,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["setanimations(anim",{"_index":542,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["setanimations(transit",{"_index":430,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["setcomponentmodel(compmodel",{"_index":748,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setcssmap",{"_index":414,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{}}}],["setcssmap(map",{"_index":432,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["setinitialvalu",{"_index":707,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setinitialvalues(initvalu",{"_index":740,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["setleavetim",{"_index":870,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["setleavetiming(tim",{"_index":873,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["setstate(st",{"_index":541,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["shall",{"_index":1104,"title":{},"body":{"license.html":{}}}],["shape",{"_index":11,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/ContentConductor.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":848,"title":{},"body":{"modules/DynamicComponentsModule.html":{}}}],["simpl",{"_index":1206,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["simpli",{"_index":1229,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["singl",{"_index":190,"title":{},"body":{"interfaces/ContentConductor.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["skip",{"_index":504,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["softwar",{"_index":1086,"title":{},"body":{"license.html":{}}}],["soon",{"_index":1062,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ComponentConstructor.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerConstructor.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["specif",{"_index":605,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["specifi",{"_index":176,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["specii",{"_index":499,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["standard",{"_index":1194,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["start",{"_index":110,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"index.html":{}}}],["state",{"_index":7,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state('closed',styl",{"_index":561,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state('open',styl",{"_index":557,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["state(state:str",{"_index":575,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["state.servic",{"_index":551,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["state.service.t",{"_index":883,"title":{},"body":{"injectables/NgStateService.html":{},"coverage.html":{}}}],["state.service.ts:10",{"_index":886,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state.service.ts:17",{"_index":888,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state.styl",{"_index":891,"title":{},"body":{"injectables/NgStateService.html":{}}}],["state/ng",{"_index":550,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgStateService.html":{},"coverage.html":{}}}],["state1",{"_index":923,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state1]:transition.anim",{"_index":930,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state2",{"_index":925,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state2]:transition.anim",{"_index":928,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["state:str",{"_index":45,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{}}}],["state:string)=>void",{"_index":955,"title":{},"body":{"interfaces/StateCSSMapper.html":{}}}],["statecssmap",{"_index":417,"title":{"interfaces/StateCSSMap.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["statecssmapp",{"_index":41,"title":{"interfaces/StateCSSMapper.html":{}},"body":{"interfaces/AnimationStateMachine.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{}}}],["statecssmapper)=>str",{"_index":50,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["statecssmapper)=>void",{"_index":47,"title":{},"body":{"interfaces/AnimationStateMachine.html":{}}}],["statecssmapperservic",{"_index":419,"title":{"injectables/StateCssMapperService.html":{}},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"overview.html":{}}}],["stateless",{"_index":1251,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["statemachineconstructor",{"_index":80,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["statement",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["statemod",{"_index":511,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["states.reduce((map,st",{"_index":889,"title":{},"body":{"injectables/NgStateService.html":{}}}],["states.servic",{"_index":437,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{}}}],["states.service.t",{"_index":73,"title":{},"body":{"injectables/AnimationStatesService.html":{},"coverage.html":{}}}],["states.service.ts:18",{"_index":81,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["states.service.ts:32",{"_index":86,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["states/anim",{"_index":72,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"coverage.html":{}}}],["states[0].trim",{"_index":924,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["states[1].trim",{"_index":926,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["statesservic",{"_index":521,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["static",{"_index":272,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["step",{"_index":502,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["still",{"_index":725,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["store",{"_index":652,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"additional-documentation/dynamic-components.html":{}}}],["stream",{"_index":662,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"modules/DynamicComponentsModule.html":{},"additional-documentation/dynamic-components.html":{}}}],["streams.model",{"_index":754,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{}}}],["streams.model.t",{"_index":1138,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["streams/input",{"_index":753,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"miscellaneous/typealiases.html":{}}}],["streams[input",{"_index":789,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["string",{"_index":49,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"interfaces/DynamicComponentsMap.html":{},"modules/DynamicComponentsModule.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["string):viewref",{"_index":213,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["string):void",{"_index":206,"title":{},"body":{"interfaces/ContentConductor.html":{}}}],["strstate",{"_index":512,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["structur",{"_index":328,"title":{},"body":{"directives/ContentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["stub",{"_index":855,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":67,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["sub.unsubscrib",{"_index":806,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subject",{"_index":675,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"license.html":{},"additional-documentation/dynamic-components.html":{}}}],["sublicens",{"_index":1095,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1219,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["subscribe((c",{"_index":368,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["subscribe((t",{"_index":372,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["subscribe(ev",{"_index":798,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subscribe(valu",{"_index":790,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["subscript",{"_index":340,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["subscriptions.foreach(sub",{"_index":804,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["substanti",{"_index":1105,"title":{},"body":{"license.html":{}}}],["such",{"_index":1203,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["suitabl",{"_index":649,"title":{},"body":{"interfaces/DynamicComponentData.html":{}}}],["suppli",{"_index":145,"title":{},"body":{"interfaces/ContentConductor.html":{},"modules/ContentConductorModule.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["support",{"_index":305,"title":{},"body":{"injectables/ContentConductorService.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"modules.html":{},"additional-documentation/dynamic-animations.html":{}}}],["svg",{"_index":1126,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1039,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":290,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializer.html":{},"miscellaneous/typealiases.html":{}}}],["tabl",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":865,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["templat",{"_index":292,"title":{},"body":{"injectables/ContentConductorService.html":{},"classes/DefaultContentConductorService.html":{},"directives/DynamicAnimationsDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["templateref",{"_index":144,"title":{},"body":{"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"injectables/ContentConductorService.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["test",{"_index":1216,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["text",{"_index":674,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["textclick",{"_index":1260,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["textcompon",{"_index":681,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["textcomponent':textcompon",{"_index":672,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.animationshandl",{"_index":589,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandler.nextstate(ngtransitionstates.void",{"_index":596,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandler.nextstate(this.strst",{"_index":578,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.animationshandlerconstructor",{"_index":643,"title":{},"body":{"injectables/DynamicAnimationsService.html":{}}}],["this.animationsstatemachin",{"_index":455,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.destroy",{"_index":450,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.init",{"_index":458,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationsstatemachine.next",{"_index":447,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.animationstatesbuild",{"_index":456,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["this.attachinputstreams(compmodel.input",{"_index":772,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.attachoutputcallbacks(compmodel.outputcallback",{"_index":773,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.build",{"_index":100,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["this.ccservic",{"_index":1178,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.closeallsubscriptions(this.inputsubscript",{"_index":801,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.closeallsubscriptions(this.outputsubscript",{"_index":800,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref",{"_index":768,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.changedetectorref.markforcheck",{"_index":775,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.destroy",{"_index":802,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.instance[cb",{"_index":797,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.compref.instance[input",{"_index":783,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.conductor",{"_index":1177,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.attachview('two',vref);detach",{"_index":1186,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.attachviews('two',views);fin",{"_index":1188,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.destroy",{"_index":1190,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.detachview('one',2);attach",{"_index":1185,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.detachviews('one');and",{"_index":1187,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.init('on",{"_index":1181,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.moveview('one','two',3);detach",{"_index":1183,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductor.moveviews('one','two');th",{"_index":1182,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.conductorconstructor",{"_index":303,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["this.cont",{"_index":1180,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["this.contain",{"_index":359,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap",{"_index":363,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].detach(index",{"_index":391,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].insert(view",{"_index":401,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[container].length",{"_index":398,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[initialcontain",{"_index":375,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].insert",{"_index":396,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].insert(view",{"_index":390,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[nextcontainer].length",{"_index":388,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[previouscontainer].detach(fromindex",{"_index":389,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersmap[previouscontainer].length",{"_index":384,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersquerylist",{"_index":366,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containersquerylist.toarray",{"_index":360,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub",{"_index":365,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub.clos",{"_index":378,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.containerssub.unsubscrib",{"_index":379,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentsquerylist",{"_index":371,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentsquerylist.toarray",{"_index":362,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub",{"_index":370,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub.clos",{"_index":381,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.contentssub.unsubscrib",{"_index":382,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.createcompon",{"_index":769,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.createcssmapper(cssmap",{"_index":439,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createcssmapper(map",{"_index":442,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createinjector(compmodel.provid",{"_index":770,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.createstatemachine(this.transit",{"_index":440,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.createstatemachine(transit",{"_index":449,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmap",{"_index":452,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.cssmapp",{"_index":448,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.add(this.st",{"_index":464,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.destroy",{"_index":451,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapper.removeal",{"_index":461,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.cssmapperservic",{"_index":462,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/DynamicAnimationsService.html":{}}}],["this.currentst",{"_index":1230,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["this.daservice.createanimationshandl",{"_index":590,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.data",{"_index":1261,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["this.dcsservice.createseri",{"_index":1249,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["this.destroycomp",{"_index":767,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.dsservice.createseri",{"_index":671,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.dvkleav",{"_index":587,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.dvkleave.setleavetiming(\"500m",{"_index":588,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.el",{"_index":457,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.element.nativeel",{"_index":591,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.initializecomponent(compmodel",{"_index":761,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.inputsubscript",{"_index":787,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.isst",{"_index":583,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.mapcontainers(this.contain",{"_index":364,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.myst",{"_index":574,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.onclick",{"_index":683,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.outputsubscript",{"_index":794,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.parsetransitionexpression(transit",{"_index":911,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["this.rendererfactory.createrenderer(element,nul",{"_index":971,"title":{},"body":{"injectables/StateCssMapperService.html":{}}}],["this.resolv",{"_index":779,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.seri",{"_index":670,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.serializer.getcomponent(compmodel.nam",{"_index":763,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.serializerconstructor(serializermap",{"_index":838,"title":{},"body":{"injectables/DynamicComponentSerializerService.html":{}}}],["this.serializermap",{"_index":485,"title":{},"body":{"classes/DefaultDynamicComponentSerializer.html":{}}}],["this.setinitialvalues(compmodel.initialvalu",{"_index":771,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.stat",{"_index":445,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.statemachineconstructor",{"_index":99,"title":{},"body":{"injectables/AnimationStatesService.html":{}}}],["this.states.push(anim",{"_index":584,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.statesservice.parsestates(this.st",{"_index":594,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.strstat",{"_index":576,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.styl",{"_index":441,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{}}}],["this.templ",{"_index":361,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.templates.map(templ",{"_index":374,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["this.text$.asobserv",{"_index":684,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["this.timingparam",{"_index":877,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["this.transervice.buildanimationtransitions(this.transit",{"_index":593,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.transit",{"_index":453,"title":{},"body":{"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{}}}],["this.transitions.push(anim",{"_index":582,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["this.vcref",{"_index":326,"title":{},"body":{"directives/ContentContainerDirective.html":{}}}],["this.vcref.insert(this.compref.hostview",{"_index":774,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["this.vcref.parentinjector",{"_index":778,"title":{},"body":{"directives/DynamicComponentDirective.html":{}}}],["those",{"_index":244,"title":{},"body":{"modules/ContentConductorModule.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["though",{"_index":296,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["through",{"_index":248,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["tie",{"_index":809,"title":{},"body":{"interfaces/DynamicComponentModel.html":{}}}],["time",{"_index":600,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{},"directives/LeaveDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["timingparam",{"_index":876,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["tme321",{"_index":1077,"title":{},"body":{"license.html":{}}}],["togglest",{"_index":572,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["toindex",{"_index":156,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["token",{"_index":257,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":1050,"title":{},"body":{"index.html":{}}}],["top",{"_index":106,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["tort",{"_index":1123,"title":{},"body":{"license.html":{}}}],["tostat",{"_index":116,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"injectables/NgTransitionService.html":{}}}],["tostate:str",{"_index":606,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["tostate]:transition.anim",{"_index":933,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["track",{"_index":661,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-components.html":{}}}],["transervic",{"_index":519,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["transfer",{"_index":1254,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["transform",{"_index":558,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transit",{"_index":35,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition(\":leav",{"_index":880,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["transition(':enter',animate('200m",{"_index":564,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{}}}],["transition(':leave',animate('200m",{"_index":568,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition('en",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('openclosed',animate('200m",{"_index":563,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"additional-documentation/dynamic-animations.html":{}}}],["transition.expr",{"_index":918,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.servic",{"_index":546,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{}}}],["transition.service.t",{"_index":892,"title":{},"body":{"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["transition.service.ts:12",{"_index":896,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.service.ts:22",{"_index":898,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.service.ts:41",{"_index":901,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.st",{"_index":548,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/NgTransitionService.html":{}}}],["transition.states.t",{"_index":1035,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transition.symbol",{"_index":908,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transition.symbols.t",{"_index":1036,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transition/ng",{"_index":545,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["transitions.model",{"_index":64,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{}}}],["transitions.model.t",{"_index":101,"title":{},"body":{"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"coverage.html":{}}}],["transitions.model.ts:12",{"_index":120,"title":{},"body":{"interfaces/AnimationTransitionsMap.html":{}}}],["transitions.model.ts:22",{"_index":104,"title":{},"body":{"interfaces/AnimationStylesMap.html":{}}}],["transitions.reduce((transmap",{"_index":909,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions/anim",{"_index":63,"title":{},"body":{"interfaces/AnimationStateMachineConstructor.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationStylesMap.html":{},"interfaces/AnimationTransitionsMap.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"interfaces/DynamicAnimationsHandler.html":{},"interfaces/DynamicAnimationsHandlerConstructor.html":{},"injectables/DynamicAnimationsService.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"coverage.html":{}}}],["transitions[fromst",{"_index":932,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[ngtransitionstates.void",{"_index":935,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[ngtransitionstates.wildcard",{"_index":939,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[state1",{"_index":927,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transitions[state2",{"_index":929,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["translat",{"_index":1243,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["transmap",{"_index":917,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmap[fromst",{"_index":914,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmap[fromstate][tost",{"_index":915,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["transmit",{"_index":1245,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["trigger",{"_index":493,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"directives/LeaveDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["trigger(\"dvkleav",{"_index":879,"title":{},"body":{"directives/LeaveDirective.html":{},"miscellaneous/variables.html":{}}}],["trigger('dvkleav",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":1175,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["ts",{"_index":506,"title":{},"body":{"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{}}}],["twiddl",{"_index":253,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["two",{"_index":1266,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["type",{"_index":25,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"injectables/AnimationStatesService.html":{},"interfaces/AnimationTransitionsMap.html":{},"interfaces/ContentConductor.html":{},"injectables/ContentConductorService.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"classes/DefaultDynamicComponentSerializer.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"interfaces/DynamicComponentModel.html":{},"interfaces/DynamicComponentSerializer.html":{},"interfaces/DynamicComponentSerializerMap.html":{},"injectables/DynamicComponentSerializerService.html":{},"directives/LeaveDirective.html":{},"injectables/NgStateService.html":{},"injectables/NgTransitionService.html":{},"interfaces/StateCSSMapper.html":{},"injectables/StateCssMapperService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-components.html":{}}}],["typealias",{"_index":1133,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedkey",{"_index":1144,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":298,"title":{},"body":{"injectables/ContentConductorService.html":{}}}],["uat/dynamicviewkit",{"_index":1046,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":387,"title":{},"body":{"classes/DefaultContentConductorService.html":{},"injectables/NgTransitionService.html":{}}}],["under",{"_index":860,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["unless",{"_index":1263,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["until",{"_index":1272,"title":{},"body":{"additional-documentation/dynamic-components.html":{}}}],["up",{"_index":168,"title":{},"body":{"interfaces/ContentConductor.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"injectables/StateCssMapperService.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-components.html":{}}}],["us",{"_index":14,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"modules/ContentConductorModule.html":{},"injectables/ContentConductorService.html":{},"directives/ContentContainerDirective.html":{},"directives/ContentDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"modules/DynamicAnimationsModule.html":{},"injectables/DynamicAnimationsService.html":{},"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"modules/DynamicComponentsModule.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["usag",{"_index":281,"title":{},"body":{"injectables/ContentConductorService.html":{},"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{}}}],["user",{"_index":243,"title":{},"body":{"modules/ContentConductorModule.html":{},"index.html":{}}}],["usevalu",{"_index":274,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{}}}],["usual",{"_index":604,"title":{},"body":{"interfaces/DynamicAnimationsHandler.html":{}}}],["valid",{"_index":905,"title":{},"body":{"injectables/NgTransitionService.html":{}}}],["valu",{"_index":88,"title":{},"body":{"injectables/AnimationStatesService.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"injectables/DynamicAnimationsService.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/content-conductor.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["values.model",{"_index":657,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{}}}],["values.model.t",{"_index":1136,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values/initi",{"_index":656,"title":{},"body":{"interfaces/DynamicComponentData.html":{},"directives/DynamicComponentDirective.html":{},"miscellaneous/typealiases.html":{}}}],["variabl",{"_index":983,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vcref",{"_index":321,"title":{},"body":{"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{}}}],["version",{"_index":261,"title":{},"body":{"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"index.html":{}}}],["view",{"_index":132,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentConductorConstructor.html":{},"modules/ContentConductorModule.html":{},"classes/DefaultContentConductorService.html":{},"index.html":{},"additional-documentation/content-conductor.html":{}}}],["viewchildren(contentcontainerdirect",{"_index":1176,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["viewcontain",{"_index":310,"title":{},"body":{"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{}}}],["viewcontainerref",{"_index":134,"title":{},"body":{"interfaces/ContainersMap.html":{},"interfaces/ContentConductor.html":{},"interfaces/ContentContainer.html":{},"directives/ContentContainerDirective.html":{},"directives/DynamicComponentDirective.html":{},"additional-documentation/content-conductor.html":{}}}],["viewref",{"_index":155,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"additional-documentation/content-conductor.html":{}}}],["viewscach",{"_index":393,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["void",{"_index":51,"title":{},"body":{"interfaces/AnimationStateMachine.html":{},"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{},"classes/DefaultDynamicAnimationsHandlerService.html":{},"directives/DynamicAnimationsDirective.html":{},"interfaces/DynamicAnimationsHandler.html":{},"directives/DynamicComponentDirective.html":{},"directives/LeaveDirective.html":{},"interfaces/StateCSSMapper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/dynamic-animations.html":{}}}],["vref",{"_index":1184,"title":{},"body":{"additional-documentation/content-conductor.html":{}}}],["wait",{"_index":856,"title":{},"body":{"directives/LeaveDirective.html":{}}}],["warranti",{"_index":1107,"title":{},"body":{"license.html":{}}}],["way",{"_index":665,"title":{},"body":{"directives/DynamicComponentDirective.html":{},"additional-documentation/dynamic-animations.html":{},"additional-documentation/dynamic-components.html":{}}}],["well",{"_index":1209,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["whether",{"_index":1120,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1054,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["wild",{"_index":1207,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["wildcard",{"_index":1038,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wire",{"_index":632,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"modules/DynamicComponentsModule.html":{}}}],["within",{"_index":241,"title":{},"body":{"modules/ContentConductorModule.html":{}}}],["without",{"_index":639,"title":{},"body":{"injectables/DynamicAnimationsService.html":{},"directives/LeaveDirective.html":{},"license.html":{}}}],["work",{"_index":1201,"title":{},"body":{"additional-documentation/dynamic-animations.html":{}}}],["wrapper",{"_index":308,"title":{},"body":{"interfaces/ContentContainer.html":{}}}],["x",{"_index":399,"title":{},"body":{"classes/DefaultContentConductorService.html":{}}}],["ye",{"_index":160,"title":{},"body":{"interfaces/ContentConductor.html":{},"classes/DefaultContentConductorService.html":{}}}],["zone.j",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":235,"title":{},"body":{"modules/ContentConductorModule.html":{},"modules/DynamicAnimationsModule.html":{},"modules/DynamicComponentsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AnimationStateMachine.html":{"url":"interfaces/AnimationStateMachine.html","title":"interface - AnimationStateMachine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStateMachine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an animation state machine to be used by a component or\ndirective that wants to provide dynamic animations.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destroy\n                                \n                                \n                                        init\n                                \n                                \n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references held by the object created for \nthe state machine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                    \n                                \n                                \n                                    \n                                        init:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Initialize the state and css class of the state machine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transition the state from the current state to the next state, \nplaying any animations and applying any css classes as defined.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateCSSMapper } from \"../state-css-mapper/state-css-mapper.model\";\n\n/**\n * The shape of an animation state machine to be used by a component or\n * directive that wants to provide dynamic animations.\n * \n */\nexport interface AnimationStateMachine {\n\n  /**\n   * Initialize the state and css class of the state machine.\n   */\n  init: (state:string, mapper?: StateCSSMapper)=>void;\n\n  /**\n   * Transition the state from the current state to the next state, \n   * playing any animations and applying any css classes as defined.\n   */\n  next: (nextState: string, mapper?: StateCSSMapper)=>string;\n\n  /**\n   * Release the references held by the object created for \n   * the state machine.\n   */\n  destroy: ()=>void;\n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationStateMachineConstructor.html":{"url":"interfaces/AnimationStateMachineConstructor.html","title":"interface - AnimationStateMachineConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStateMachineConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.constructor.ts\n        \n\n            \n                Description\n            \n            \n                The shape of a class constructor that can act as the animation state machine.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { AnimationBuilder } from '@angular/animations';\nimport { AnimationStateMachine } from './animation-state-machine.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\n\n/**\n * The shape of a class constructor that can act as the animation state machine.\n */\nexport interface AnimationStateMachineConstructor {\n    new( \n        element: any, \n        transitions: AnimationTransitionsMap,\n        styles: AnimationStylesMap,\n        builder: AnimationBuilder):AnimationStateMachine;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationStatesService.html":{"url":"injectables/AnimationStatesService.html","title":"injectable - AnimationStatesService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AnimationStatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts\n        \n\n            \n                Description\n            \n            \n                This service creates an animation transition \nstate machine with the method \ncreateAnimationStateMachine \nfrom given AnimationTransitionsMap\nand AnimationStylesMap objects.\nThe returned state machine is in the shape of \nAnimationStateMachine.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimationStateMachine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: AnimationBuilder, stateMachineConstructor: AnimationStateMachineConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    AnimationBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateMachineConstructor\n                                                  \n                                                        \n                                                                    AnimationStateMachineConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createAnimationStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateAnimationStateMachine(element: any, transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Create an AnimationStateMachine to apply to an\nelement when the state is transitioned.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to apply the animations to.\n\n                                                        \n                                                \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The AnimationTransitionsMap to play. \n\n                                                        \n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationStylesMap to apply.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { AnimationBuilder } from '@angular/animations';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { AnimationStateMachineConstructorToken } from '../animation-state-machine/animation-state-machine.token';\nimport { AnimationStateMachineConstructor } from '../animation-state-machine/animation-state-machine.constructor';\n\n/**\n * This service creates an animation transition \n * state machine with the method \n * [createAnimationStateMachine]{@link AnimationStatesService#createAnimationStateMachine} \n * from given {@link AnimationTransitionsMap}\n * and {@link AnimationStylesMap} objects.\n * \n * The returned state machine is in the shape of \n * {@link AnimationStateMachine}.\n */\n@Injectable()\nexport class AnimationStatesService {\n\n  constructor(\n    private builder: AnimationBuilder,\n    @Inject(AnimationStateMachineConstructorToken)\n    private stateMachineConstructor: AnimationStateMachineConstructor) {}\n\n  /**\n   * Create an {@link AnimationStateMachine} to apply to an\n   * element when the state is transitioned.\n   * @param element The element to apply the animations to.\n   * @param transitions The AnimationTransitionsMap to play. \n   * @param styles The AnimationStylesMap to apply.\n   */\n  createAnimationStateMachine(\n    element: any, \n    transitions: AnimationTransitionsMap = {},\n    styles: AnimationStylesMap) {\n\n    return new this.stateMachineConstructor(\n      element,\n      transitions,\n      styles,\n      this.builder\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationStylesMap.html":{"url":"interfaces/AnimationStylesMap.html","title":"interface - AnimationStylesMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationStylesMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n        \n\n            \n                Description\n            \n            \n                A mapping of state strings to AnimationStyleMetadata\ncreated with the style function. \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [state: string]:    AnimationStyleMetadata\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts:22\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AnimationMetadata, AnimationStyleMetadata } from \"@angular/animations\";\n\n/**\n * A map of states and AnimationMetadata. \n * The top level keys are the strings representing the states\n * a transition starts from.  The inner keys are the strings \n * representing the state being transitioned to.  Each fromState \n * can have an animation defined for any number of toStates \n * to play when that particular transition occurs.\n * \n */\nexport interface AnimationTransitionsMap {\n  [fromState: string]: {\n    [toState: string]: AnimationMetadata | AnimationMetadata[];\n  }\n} \n\n/**\n * A mapping of state strings to AnimationStyleMetadata\n * created with the style function. \n */\nexport interface AnimationStylesMap {\n  [state: string]: AnimationStyleMetadata; \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimationTransitionsMap.html":{"url":"interfaces/AnimationTransitionsMap.html","title":"interface - AnimationTransitionsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimationTransitionsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of states and AnimationMetadata. \nThe top level keys are the strings representing the states\na transition starts from.  The inner keys are the strings \nrepresenting the state being transitioned to.  Each fromState \ncan have an animation defined for any number of toStates \nto play when that particular transition occurs.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [fromState: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts:12\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AnimationMetadata, AnimationStyleMetadata } from \"@angular/animations\";\n\n/**\n * A map of states and AnimationMetadata. \n * The top level keys are the strings representing the states\n * a transition starts from.  The inner keys are the strings \n * representing the state being transitioned to.  Each fromState \n * can have an animation defined for any number of toStates \n * to play when that particular transition occurs.\n * \n */\nexport interface AnimationTransitionsMap {\n  [fromState: string]: {\n    [toState: string]: AnimationMetadata | AnimationMetadata[];\n  }\n} \n\n/**\n * A mapping of state strings to AnimationStyleMetadata\n * created with the style function. \n */\nexport interface AnimationStylesMap {\n  [state: string]: AnimationStyleMetadata; \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentConstructor.html":{"url":"interfaces/ComponentConstructor.html","title":"interface - ComponentConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/component-constructor/component-constructor.model.ts\n        \n\n            \n                Description\n            \n            \n                Component constructor definition.\n\n            \n\n\n\n\n\n    \n\n\n    \n        export interface ComponentConstructor {\n    new(...args):any;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainersMap.html":{"url":"interfaces/ContainersMap.html","title":"interface - ContainersMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainersMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of string names to view containers.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    ViewContainerRef\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\n\n/**\n * A map of string names to view containers.\n */\nexport interface ContainersMap { \n    [name:string]: ViewContainerRef \n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentConductor.html":{"url":"interfaces/ContentConductor.html","title":"interface - ContentConductor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentConductor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.model.ts\n        \n\n            \n                Description\n            \n            \n                This is the shape of the object returned by the injectable\nContentConductorService that allows content in the\nform of TemplateRefs supplied by a QueryList to\nbe moved between multiple containers. \nThe number of containers and the number of views to move between\nthem is not limited.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    attachView\n                                \n                                \n                                    attachViews\n                                \n                                \n                                    destroy\n                                \n                                \n                                    detachView\n                                \n                                \n                                    detachViews\n                                \n                                \n                                    init\n                                \n                                \n                                    moveView\n                                \n                                \n                                    moveViews\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachView\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachView(container: string, view: ViewRef, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:91\n                            \n                        \n\n\n                \n                    \n                            Attach a ViewRef to a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto attach the ViewRef to.\n\n                                                        \n                                                \n                                                \n                                                        view\n                                                        \n                                                                    ViewRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ViewRef to attach.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index in the container to attach the view.\nIf ommitted the view is attached to the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachViews(container: string, views?: ViewRef[], toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:101\n                            \n                        \n\n\n                \n                    \n                            Attach an array of ViewRefs to a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto attach the ViewRefs array to.\n\n                                                        \n                                                \n                                                \n                                                        views\n                                                        \n                                                                    ViewRef[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The ViewRefs array to attach.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index in the container to attach the views.\nIf ommitted the views are attached to the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:28\n                            \n                        \n\n\n                \n                    \n                            Clean up, should be called by the component or directive's\nngOnDestroy method that is displaying the content. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachView\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachView(container: string, index?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:56\n                            \n                        \n\n\n                \n                    \n                            Detach a ViewRef from a ContentContainerDirective\nspecified by it's index inside the ViewContainerRef\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string name of the ContentContainerDirective\nto remove the ViewRef from.\n\n                                                        \n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the ViewRef to remove. If ommitted the\nlast ViewRef is removed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ViewRef\n\n                            \n                                \n                                    The detached ViewRef.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachViews(container: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:81\n                            \n                        \n\n\n                \n                    \n                            Remove all ViewRefs from a ContentContainerDirective.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The name of the ContentContainerDirective \nto remove the ViewRefs from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ViewRef[]\n\n                            \n                                \n                                    An array of the ViewRefs removed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(initialContainer: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:22\n                            \n                        \n\n\n                \n                    \n                            Initialize the content into the container of the given\nstring name.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initialContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the string name of the container\nto create the content initially inside of.  \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveView\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveView(previousContainer: string, nextContainer: string, fromIndex: number, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:41\n                            \n                        \n\n\n                \n                    \n                            Move a single ViewRef identified by it's index \nfrom one ContentContainerDirective to the another.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The source ContentContainerDirective's name\nwhere the ViewRef is currently located.\n\n                                                        \n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The destination ContentContainerDirective's name\nwhere the ViewRef will be moved to.\n\n                                                        \n                                                \n                                                \n                                                        fromIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index inside the nextContainer to insert the ViewRef.\nIf not specified the ViewRef is added to the end of the container.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveViews(previousContainer: string, nextContainer: string, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.model.ts:70\n                            \n                        \n\n\n                \n                    \n                            Move all of the ViewRefs from one ContentContainerDirective\nto another.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto remove the ViewRef from.\n\n                                                        \n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The ContentContainerDirective \nto add the ViewRef to.\n\n                                                        \n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The index inside nextContainer to insert\nthe views, if ommitted the views are inserted at the end.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ViewRef } from '@angular/core';\nimport { ContentContainer } from './content-container/content-container.model';\n\n/**\n * This is the shape of the object returned by the injectable\n * {@link ContentConductorService} that allows content in the\n * form of TemplateRefs supplied by a QueryList to\n * be moved between multiple containers. \n * \n * The number of containers and the number of views to move between\n * them is not limited.\n * \n */\nexport interface ContentConductor {\n\n    /**\n     * Initialize the content into the container of the given\n     * string name.\n     * @param initialContainer the string name of the container\n     * to create the content initially inside of.  \n     */\n    init(initialContainer: string):void;\n\n    /**\n     *  Clean up, should be called by the component or directive's\n     *  ngOnDestroy method that is displaying the content. \n     */\n    destroy():void;\n\n    /**\n     * Move a single ViewRef identified by it's index \n     * from one {@link ContentContainerDirective} to the another.\n     * @param previousContainer The source ContentContainerDirective's name\n     * where the ViewRef is currently located.\n     * @param nextContainer The destination ContentContainerDirective's name\n     * where the ViewRef will be moved to.\n     * @param fomrIndex The index of the ViewRef to move from previousContainer.\n     * @param toIndex The index inside the nextContainer to insert the ViewRef.\n     * If not specified the ViewRef is added to the end of the container.\n     */\n    moveView( \n        previousContainer: string,\n        nextContainer:string, \n        fromIndex: number,\n        toIndex?: number):void;\n\n    /**\n     * Detach a ViewRef from a {@link ContentContainerDirective}\n     * specified by it's index inside the ViewContainerRef\n     * @param container The string name of the ContentContainerDirective\n     * to remove the ViewRef from.\n     * @param index The index of the ViewRef to remove. If ommitted the\n     * last ViewRef is removed.\n     * @returns The detached ViewRef.\n     */\n    detachView(\n        container:string,\n        index?: number):ViewRef;\n\n    /**\n     * Move all of the ViewRefs from one {@link ContentContainerDirective}\n     * to another.\n     * @param previousContainer The ContentContainerDirective \n     * to remove the ViewRef from.\n     * @param nextContainer The ContentContainerDirective \n     * to add the ViewRef to.\n     * @param toIndex The index inside nextContainer to insert\n     * the views, if ommitted the views are inserted at the end.\n     */\n    moveViews(\n        previousContainer: string, \n        nextContainer: string,\n        toIndex?: number):void;\n\n    /**\n     * Remove all ViewRefs from a {@link ContentContainerDirective}.\n     * @param container The name of the ContentContainerDirective \n     * to remove the ViewRefs from.\n     * @returns An array of the ViewRefs removed.\n     */\n    detachViews(container: string):ViewRef[];\n\n    /**\n     * Attach a ViewRef to a {@link ContentContainerDirective}.\n     * @param container The ContentContainerDirective \n     * to attach the ViewRef to.\n     * @param view The ViewRef to attach.\n     * @param toIndex The index in the container to attach the view.\n     * If ommitted the view is attached to the end.\n     */\n    attachView(container:string, view: ViewRef, toIndex?: number):void;\n\n    /**\n     * Attach an array of ViewRefs to a {@link ContentContainerDirective}.\n     * @param container The ContentContainerDirective \n     * to attach the ViewRefs array to.\n     * @param views The ViewRefs array to attach.\n     * @param toIndex The index in the container to attach the views.\n     * If ommitted the views are attached to the end.\n     */\n    attachViews(container:string, views?: ViewRef[], toIndex?: number):void;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentConductorConstructor.html":{"url":"interfaces/ContentConductorConstructor.html","title":"interface - ContentConductorConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentConductorConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.model.ts\n        \n\n            \n                Description\n            \n            \n                A constructor that returns an implementation \nof ContentConductor.  \n\n            \n\n\n\n\n\n    \n\n\n    \n        import { QueryList, TemplateRef } from '@angular/core';\nimport { ContentConductor } from \"../content-conductor.model\";\nimport { ContentContainer } from '../content-container/content-container.model';\n\n/**\n * A constructor that returns an implementation \n * of {@link ContentConductor}.  \n * \n * @param containersQueryList Should be a QueryList \n * of containers that views can be put into.  \n * \n * @param contentsQueryList Should be a QueryList of \n * the TemplateRefs representing the content to \n * display inside the containers.\n */\nexport interface ContentConductorConstructor {\n  new(\n    containersQueryList: QueryList,\n    contentsQueryList : QueryList>\n  ):ContentConductor;\n}\n  \n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentConductorModule.html":{"url":"modules/ContentConductorModule.html","title":"module - ContentConductorModule","body":"\n                   \n\n\n\n\n  Modules\n  ContentConductorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentConductorModule\n\n\n\ncluster_ContentConductorModule_declarations\n\n\n\ncluster_ContentConductorModule_exports\n\n\n\ncluster_ContentConductorModule_providers\n\n\n\n\nContentContainerDirective\n\nContentContainerDirective\n\n\n\nContentConductorModule\n\nContentConductorModule\n\nContentConductorModule -->\n\nContentContainerDirective->ContentConductorModule\n\n\n\n\n\nContentDirective\n\nContentDirective\n\nContentConductorModule -->\n\nContentDirective->ContentConductorModule\n\n\n\n\n\nContentContainerDirective \n\nContentContainerDirective \n\nContentContainerDirective  -->\n\nContentConductorModule->ContentContainerDirective \n\n\n\n\n\nContentDirective \n\nContentDirective \n\nContentDirective  -->\n\nContentConductorModule->ContentDirective \n\n\n\n\n\nContentConductorService\n\nContentConductorService\n\nContentConductorModule -->\n\nContentConductorService->ContentConductorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Content Conductor Module contains the parts necessary to define \ncontainers within a component's view, allow users to provide content\nfor those containers, and move the content between those containers \nbased on string names assigned to each container.\nThis functionality is handled through Angular's own abstractions \ninstead of manually twiddling DOM elements.\nThe forRoot function instantiates the module with a token \nfor the ContentConductorService to actually create the \nContentConductor that provides the functionality and must \nbe called for the provided functionality.  The optional parameter \nis the class that actually provides the functionality for moving\ncontent.  By default the DefaultContentConductorService is\nused but a custom version can be supplied that conforms to the\nContentConductor interface.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContentContainerDirective\n                            \n                            \n                                ContentDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ContentConductorService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ContentContainerDirective\n                            \n                            \n                                    ContentDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { DefaultContentConductorService } from './default-content-conductor/default-content-conductor.service';\nimport { ContentConductorConstructorToken } from './content-conductor-constructor/content-conductor-constructor.token';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ContentConductorService } from './content-conductor.service';\nimport { ContentDirective } from './content/content.directive';\nimport { ContentContainerDirective } from './content-container/content-container.directive';\nimport { ContentConductorConstructor } from './content-conductor-constructor/content-conductor-constructor.model';\n\n/**\n * The Content Conductor Module contains the parts necessary to define \n * containers within a component's view, allow users to provide content\n * for those containers, and move the content between those containers \n * based on string names assigned to each container.\n * \n * This functionality is handled through Angular's own abstractions \n * instead of manually twiddling DOM elements.\n * \n * The forRoot function instantiates the module with a token \n * for the {@link ContentConductorService} to actually create the \n * {@link ContentConductor} that provides the functionality and must \n * be called for the provided functionality.  The optional parameter \n * is the class that actually provides the functionality for moving\n * content.  By default the {@link DefaultContentConductorService} is\n * used but a custom version can be supplied that conforms to the\n * {@link ContentConductor} interface.\n */\n@NgModule({\n  declarations: [\n    ContentDirective, \n    ContentContainerDirective \n  ],\n  exports: [\n    ContentDirective, \n    ContentContainerDirective\n  ],\n  providers: [\n    ContentConductorService\n  ]\n})\nexport class ContentConductorModule {\n  static forRoot(conductorConstructor: ContentConductorConstructor = DefaultContentConductorService): ModuleWithProviders {\n    return {\n      ngModule: ContentConductorModule,\n      providers: [\n        { \n          provide: ContentConductorConstructorToken, \n          useValue: conductorConstructor  \n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentConductorService.html":{"url":"injectables/ContentConductorService.html","title":"injectable - ContentConductorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ContentConductorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-conductor.service.ts\n        \n\n            \n                Description\n            \n            \n                This service can be injected into a component in order to\ncreate a ContentConductor.\nSee ContentConductor for the details.\nExample of usage:\n../../docs/injectables/ContentConductorService.html\n\n            \n\n            \n                Example\n            \n            \n                        \n                            constructor(private conductorService: ContentConductorService) {}\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createContentConductor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(conductorConstructor: ContentConductorConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content-conductor.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conductorConstructor\n                                                  \n                                                        \n                                                                    ContentConductorConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createContentConductor\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateContentConductor(containersQueryList: QueryList, contentsQueryList: QueryList>)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-conductor.service.ts:41\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Create a ContentConductor\nfor moving content around a component's template.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        containersQueryList\n                                                        \n                                                                    QueryList\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A query list of ContentContainers\n\n                                                        \n                                                \n                                                \n                                                        contentsQueryList\n                                                        \n                                                                    QueryList>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A query list of TemplateRefs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The ContentConductor\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, QueryList, TemplateRef, Inject } from '@angular/core';\nimport { ContentContainer } from './content-container/content-container.model';\nimport { ContentConductorConstructorToken } from './content-conductor-constructor/content-conductor-constructor.token';\nimport { ContentConductorConstructor } from './content-conductor-constructor/content-conductor-constructor.model';\n\n/*\n * Even though this import is not used it is required for typescript\n * to resolve the return type of the createContentConductor method.\n * If it is removed this service will not compile correctly.\n */\nimport { ContentConductor } from './content-conductor.model';\n\n/**\n * This service can be injected into a component in order to\n * create a {@link ContentConductor}.\n * \n * See {@link ContentConductor} for the details.\n * \n *  \n * Example of usage:\n * ../../docs/injectables/ContentConductorService.html\n *\n * \n * @example\n * constructor(private conductorService: ContentConductorService) {}\n */\n@Injectable()\nexport class ContentConductorService {\n \n  constructor(\n    @Inject(ContentConductorConstructorToken) \n    private conductorConstructor: ContentConductorConstructor) { }\n\n  /**\n   * Create a {@link ContentConductor}\n   * for moving content around a component's template.\n   * @param containersQueryList A query list of ContentContainers\n   * @param contentsQueryList A query list of TemplateRefs.\n   * @return The ContentConductor\n   */\n  createContentConductor(\n    containersQueryList: QueryList,\n    contentsQueryList : QueryList>) {\n    \n    return  new this.conductorConstructor(\n      containersQueryList,\n      contentsQueryList\n    );\n  }\n  \n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainer.html":{"url":"interfaces/ContentContainer.html","title":"interface - ContentContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-container/content-container.model.ts\n        \n\n            \n                Description\n            \n            \n                A wrapper around a ViewContainerRef\nand a string name identifier.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        containerName\n                                \n                                \n                                        viewContainer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        containerName\n                                    \n                                \n                                \n                                    \n                                        containerName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewContainer\n                                    \n                                \n                                \n                                    \n                                        viewContainer:     ViewContainerRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ViewContainerRef\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\n\n/**\n * A wrapper around a ViewContainerRef\n * and a string name identifier.\n */\nexport interface ContentContainer {\n    readonly viewContainer: ViewContainerRef;\n    readonly containerName: string;\n  }\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentContainerDirective.html":{"url":"directives/ContentContainerDirective.html","title":"directive - ContentContainerDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContentContainerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive that can be attached to create a container \nwhere content with an attached ContentDirective\ncan be displayed.\nThe string set to the directive name is used to refer to\nthis container by the ContentConductor.\n\n            \n\n            \n                Implements\n            \n            \n                        ContentContainer\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-content-container]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-content-container\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vcRef: ViewContainerRef, ccService: ContentConductorService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vcRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ccService\n                                                  \n                                                        \n                                                                    ContentConductorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-content-container\n                    \n                    \n                        The string used to refer to this container.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewContainer\n                    \n                \n\n                \n                    \n                        getviewContainer()\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts:29\n                                \n                            \n                    \n                        \n                                The ViewContainerRef of this directive.\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, Input } from '@angular/core';\nimport { ContentConductorService } from '../content-conductor.service';\nimport { ContentContainer } from './content-container.model';\n\n/**\n * A directive that can be attached to create a container \n * where content with an attached {@link ContentDirective}\n * can be displayed.\n * \n * The string set to the directive name is used to refer to\n * this container by the {@link ContentConductor}.\n * \n * @example\n * \n */\n@Directive({\n  selector: '[dvk-content-container]'\n})\nexport class ContentContainerDirective implements ContentContainer {\n\n  /**\n   * The string used to refer to this container.\n   */\n  @Input('dvk-content-container') containerName: string;\n\n  /**\n   * The ViewContainerRef of this directive.\n   */\n  get viewContainer() { return this.vcRef; }\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private ccService: ContentConductorService) {}\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentDirective.html":{"url":"directives/ContentDirective.html","title":"directive - ContentDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ContentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/content/content.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive that must be used as a structural \ndirective so that the TemplateRef is injected.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            Some Content To Display In A Container\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-content]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/content/content.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * A directive that must be used as a structural \n * directive so that the TemplateRef is injected.\n * \n * @example\n * Some Content To Display In A Container\n */\n@Directive({\n  selector: '[dvk-content]'\n})\nexport class ContentDirective {\n  constructor(private templateRef: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultContentConductorService.html":{"url":"classes/DefaultContentConductorService.html","title":"class - DefaultContentConductorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultContentConductorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of a ContentConductor.\nThis version can be overriden by providing a different class\nfor the ContentConductorConstructorToken token.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ContentConductor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                containers\n                            \n                            \n                                    Private\n                                containersMap\n                            \n                            \n                                    Private\n                                containersSub\n                            \n                            \n                                    Private\n                                contentsSub\n                            \n                            \n                                    Private\n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachView\n                            \n                            \n                                attachViews\n                            \n                            \n                                destroy\n                            \n                            \n                                detachView\n                            \n                            \n                                detachViews\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                mapContainers\n                            \n                            \n                                moveView\n                            \n                            \n                                moveViews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(containersQueryList: QueryList, contentsQueryList: QueryList>)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containersQueryList\n                                                  \n                                                        \n                                                                    QueryList\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentsQueryList\n                                                  \n                                                        \n                                                                    QueryList>\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containers:     T[]\n\n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containersMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containersMap:     ContainersMap\n\n                    \n                \n                    \n                        \n                            Type :     ContainersMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            containersSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containersSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            contentsSub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contentsSub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templates:     TemplateRef[]\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachView\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachView(container: string, view: ViewRef, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        view\n                                                        \n                                                                    ViewRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachViews(container: string, views: ViewRef[], toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        views\n                                                        \n                                                                    ViewRef[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachView\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachView(container: string, index?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detachViews\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetachViews(container: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(initialContainer: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapContainers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapContainers(containers: T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:25\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containers\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveView\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveView(previousContainer: string, nextContainer: string, fromIndex: number, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveViews\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveViews(previousContainer: string, nextContainer: string, toIndex?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        previousContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextContainer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { QueryList, TemplateRef, ViewRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ContentConductor } from '../content-conductor.model';\nimport { ContentContainer } from '../content-container/content-container.model';\nimport { ContainersMap } from '../containers-map/containers-map.model';\n\n/**\n * The default implementation of a {@link ContentConductor}.\n * This version can be overriden by providing a different class\n * for the {@link ContentConductorConstructorToken} token.\n */\nexport class DefaultContentConductorService implements ContentConductor {\n\n  constructor(\n    private containersQueryList: QueryList,\n    private contentsQueryList : QueryList>\n  ) {}\n    \n  private containers: T[];\n  private templates: TemplateRef[];\n  private containersMap: ContainersMap = {};\n  private containersSub: Subscription;\n  private contentsSub: Subscription;\n\n  private mapContainers(\n    containers: T[]) {\n      return containers.reduce((map,container)=>{\n        map[container.containerName] = container.viewContainer;\n        return map;\n      },{});\n  }\n  \n  init(initialContainer: string) {\n    this.containers = this.containersQueryList.toArray();\n    this.templates = this.contentsQueryList.toArray();\n\n    this.containersMap = this.mapContainers(this.containers);\n    this.containersSub = this.containersQueryList\n      .changes\n      .subscribe((c: T[])=>{\n        this.containers = c;\n        this.mapContainers(this.containers);\n      });\n\n    this.contentsSub = this.contentsQueryList\n      .changes\n      .subscribe((t: TemplateRef[])=>{\n        this.templates = t;\n      });\n\n    if(initialContainer && this.templates) {\n      this.templates.map(template=>\n        this.containersMap[initialContainer]\n          .createEmbeddedView(template));\n    }\n  }\n\n  destroy() {\n    if(this.containersSub && !this.containersSub.closed) { \n      this.containersSub.unsubscribe(); \n    }\n\n    if(this.contentsSub && !this.contentsSub.closed) {\n      this.contentsSub.unsubscribe();\n    }\n\n    this.containersQueryList = null;\n    this.contentsQueryList = null;\n    this.containers = null;\n    this.templates = null;\n    this.containersMap = null;\n    this.containersSub = null;\n    this.contentsSub = null;\n  }\n\n  moveView( \n    previousContainer: string,\n    nextContainer:string, \n    fromIndex: number,\n    toIndex?: number) {\n      fromIndex = fromIndex || this.containersMap[previousContainer].length;\n      const insertIndex = toIndex === null || toIndex === undefined? \n        this.containersMap[nextContainer].length : \n        toIndex;\n\n      const view = this.containersMap[previousContainer].detach(fromIndex);\n      this.containersMap[nextContainer].insert(view, insertIndex);\n  }\n\n  detachView(\n    container:string,\n    index?: number) {\n      return this.containersMap[container].detach(index);\n  }\n\n  moveViews(previousContainer: string, nextContainer: string, toIndex?: number) {\n    const length = this.containersMap[previousContainer].length;\n    const viewsCache: ViewRef[] = [];\n\n    for(let i=0; i{\n      this.containersMap[nextContainer].insert(\n        view,\n        insertIndex);\n      insertIndex++\n    });\n  }\n\n  detachViews(container: string) {\n    const detachedViews = [];\n    const length = this.containersMap[container].length;\n\n    for(let x = 0; x {\n      this.containersMap[container].insert(view, insertIndex);\n      insertIndex++;\n    });\n  }\n\n  attachView(container: string, view: ViewRef, toIndex?: number) {\n    const insertIndex = toIndex === null || toIndex === undefined? \n      this.containersMap[container].length : \n      toIndex;\n\n    this.containersMap[container].insert(view, insertIndex);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultDynamicAnimationsHandlerService.html":{"url":"classes/DefaultDynamicAnimationsHandlerService.html","title":"class - DefaultDynamicAnimationsHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultDynamicAnimationsHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of DynamicAnimationsHandler\nthat provides the DynamicAnimationsDirective with \nanimations capabllities.  \n\n            \n\n\n            \n                Implements\n            \n            \n                        DynamicAnimationsHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animationsStateMachine\n                            \n                            \n                                    Private\n                                cssMapper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCSSMapper\n                            \n                            \n                                    Private\n                                createStateMachine\n                            \n                            \n                                destroy\n                            \n                            \n                                nextState\n                            \n                            \n                                setAnimations\n                            \n                            \n                                setCSSMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: any, state: string, transitions: AnimationTransitionsMap, styles: AnimationStylesMap, cssMap: StateCSSMap, cssMapperService: StateCssMapperService, animationStatesBuilder: AnimationStatesService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        transitions\n                                                  \n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMap\n                                                  \n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMapperService\n                                                  \n                                                        \n                                                                    StateCssMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStatesBuilder\n                                                  \n                                                        \n                                                                    AnimationStatesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            animationsStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animationsStateMachine:     AnimationStateMachine\n\n                    \n                \n                    \n                        \n                            Type :     AnimationStateMachine\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cssMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cssMapper:     StateCSSMapper\n\n                    \n                \n                    \n                        \n                            Type :     StateCSSMapper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createCSSMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createCSSMapper(map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createStateMachine\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createStateMachine(transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextState\n                            \n                            \n                        \n                    \n                \n                \n                    \nnextState(toState: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toState\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setAnimations\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetAnimations(transitions: AnimationTransitionsMap, styles: AnimationStylesMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCSSMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCSSMap(map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicAnimationsHandler } from '../dynamic-animations-handler/dynamic-animations-handler.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\nimport { StateCSSMapper } from '../state-css-mapper/state-css-mapper.model';\nimport { AnimationStateMachine } from '../animation-state-machine/animation-state-machine.model';\nimport { AnimationStatesService } from '../animation-states/animation-states.service';\nimport { StateCssMapperService } from '../state-css-mapper/state-css-mapper.service';\n\n/**\n * The default implementation of {@link DynamicAnimationsHandler}\n * that provides the {@link DynamicAnimationsDirective} with \n * animations capabllities.  \n */\nexport class DefaultDynamicAnimationsHandlerService implements DynamicAnimationsHandler {\n\n  private animationsStateMachine: AnimationStateMachine;\n  private cssMapper: StateCSSMapper;\n\n  constructor(\n    private element: any,\n    private state: string,\n    private transitions: AnimationTransitionsMap,\n    private styles: AnimationStylesMap, \n    private cssMap: StateCSSMap,\n    private cssMapperService: StateCssMapperService,\n    private animationStatesBuilder: AnimationStatesService\n  ) {\n    this.createCSSMapper(cssMap);\n    this.createStateMachine(this.transitions, this.styles);\n  }\n  \n  setCSSMap(map: StateCSSMap) {\n    this.createCSSMapper(map);\n  }\n\n  nextState(toState:string) {\n    if(this.state !== toState) {\n      this.state = toState;\n\n      if(this.animationsStateMachine) {\n        this.animationsStateMachine.next(\n          this.state, \n          this.cssMapper);\n      }\n    }\n  }\n\n  setAnimations(transitions: AnimationTransitionsMap, styles: AnimationStylesMap) {\n    this.createStateMachine(transitions, styles);\n  }\n\n  destroy() {\n    this.animationsStateMachine.destroy();\n    this.cssMapper.destroy();\n    this.state = null;\n    this.cssMap = null;\n    this.transitions = null;\n  }\n\n  private createStateMachine(\n    transitions: AnimationTransitionsMap, \n    styles: AnimationStylesMap) {\n    if(this.animationsStateMachine) {\n      this.animationsStateMachine.destroy();\n    }\n\n    if(this.transitions !== transitions || !this.animationsStateMachine) {\n      this.transitions = transitions;\n\n      this.animationsStateMachine = \n        this.animationStatesBuilder\n          .createAnimationStateMachine(\n            this.element,\n            this.transitions,\n            styles);\n\n      this.animationsStateMachine.init(\n        this.state,\n        this.cssMapper);\n    }\n  }\n\n  private createCSSMapper(map: StateCSSMap = {}) {\n    if(this.cssMap !== map || !this.cssMapper) {\n      this.cssMap = map;\n\n      if(this.cssMapper) {\n        this.cssMapper.removeAll();\n        this.cssMapper.destroy();\n      }\n\n      this.cssMapper = this.cssMapperService\n        .createStateCSSMapper(this.element,this.cssMap);\n\n      this.cssMapper.add(this.state);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultDynamicComponentSerializer.html":{"url":"classes/DefaultDynamicComponentSerializer.html","title":"class - DefaultDynamicComponentSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultDynamicComponentSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts\n        \n\n            \n                Description\n            \n            \n                The default implementation of DynamicComponentSerializer that\nprovides the serialization methods for the specified \nDynamicComponentSerializerMap. \n\n            \n\n\n            \n                Implements\n            \n            \n                        DynamicComponentSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializerMap: DynamicComponentSerializerMap)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializerMap\n                                                  \n                                                        \n                                                                    DynamicComponentSerializerMap\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(componentName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:14\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName(componentConstructor: ComponentConstructor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicComponentSerializerMap } from '../dynamic-component-serializer-map/dynamic-component-serializer-map.model';\nimport { DynamicComponentSerializer } from '../dynamic-component-serializer/dynamic-component-serializer.model';\nimport { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * The default implementation of {@link DynamicComponentSerializer} that\n * provides the serialization methods for the specified \n * {@link DynamicComponentSerializerMap}. \n */\nexport class DefaultDynamicComponentSerializer implements DynamicComponentSerializer {\n\n    constructor(private serializerMap: DynamicComponentSerializerMap) {}\n\n    getComponent(componentName: string) {\n        return this.serializerMap\n            .deserializeMap.get(componentName);\n    }\n\n    getName(componentConstructor: ComponentConstructor) {\n        return this.serializerMap\n            .serializeMap.get(componentConstructor);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicAnimationsDirective.html":{"url":"directives/DynamicAnimationsDirective.html","title":"directive - DynamicAnimationsDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicAnimationsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is the main interface to dynamic animations.\nIt should be attached to the element that is to be animated.\nDirections\nIn a component define a string member to represent the state\nof the Animations.  This is analogous to a trigger in normal\nAngular animations.\nThen define the animations as an array of state and transition\nfunction calls from the Angular animations module.\nOptionally specify a map of state names to css class names that\nwill be added and removed from the element as the animations \nstart and finish.\nThen pass those values into this directives state and animations\nInputs.\nIf a :leave animation, or *=>void, is speciied you must also both\nadd the @dvkLeave directive to the element and add dvkLeave to \nthe component as a static animation.  This step is only necessary\nfor a :leave animation. Otherwise it can be skipped.\nThe animations can then be played by changing the string bound to\nthe state Input.\nExample\n`ts\n\\@Component({\n              template: `\n                  \n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-da]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animationsHandler\n                            \n                            \n                                    Private\n                                stateMode\n                            \n                            \n                                    Private\n                                states\n                            \n                            \n                                    Private\n                                strState\n                            \n                            \n                                    Private\n                                transitions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isState\n                            \n                            \n                                    Private\n                                isTransition\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animations\n                            \n                            \n                                cssMap\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, daService: DynamicAnimationsService, tranService: NgTransitionService, statesService: NgStateService, dvkLeave: LeaveDirective)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:140\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        daService\n                                                  \n                                                        \n                                                                    DynamicAnimationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        tranService\n                                                  \n                                                        \n                                                                    NgTransitionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        statesService\n                                                  \n                                                        \n                                                                    NgStateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dvkLeave\n                                                  \n                                                        \n                                                                    LeaveDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        animations\n                    \n                    \n                        The description of the animations to play as an array \nof state and transition Angular animation functions.\n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:115\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cssMap\n                    \n                    \n                        The map of state name to css class names to apply\nas the state changes.\n\n                            \n                            Type:    StateCSSMap\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:140\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                    \n                        Changing the value of state will cause a transition \nand play an animation if one is defined for that state\nchange.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:100\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isState(metaData: AnimationMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaData\n                                                        \n                                                                    AnimationMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationStateMetadata\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isTransition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isTransition(metaData: AnimationMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaData\n                                                        \n                                                                    AnimationMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationTransitionMetadata\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:167\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:154\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            animationsHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animationsHandler:     DynamicAnimationsHandler\n\n                    \n                \n                    \n                        \n                            Type :     DynamicAnimationsHandler\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stateMode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stateMode:     \"string\" | \"number\"\n\n                    \n                \n                    \n                        \n                            Type :     \"string\" | \"number\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'string'\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            states\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        states:     AnimationStateMetadata[]\n\n                    \n                \n                    \n                        \n                            Type :     AnimationStateMetadata[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            strState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        strState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transitions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transitions:     AnimationTransitionMetadata[]\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTransitionMetadata[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:108\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n\n                \n                    \n                        setstate(state: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:100\n                                \n                            \n                    \n                        \n                                Changing the value of state will cause a transition \nand play an animation if one is defined for that state\nchange.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            state\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        animations\n                    \n                \n\n\n                \n                    \n                        setanimations(animations: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts:115\n                                \n                            \n                    \n                        \n                                The description of the animations to play as an array \nof state and transition Angular animation functions.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            animations\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, OnInit, OnDestroy, ElementRef, Optional } from '@angular/core';\nimport { AnimationTransitionMetadata, AnimationStateMetadata, AnimationMetadata } from '@angular/animations';\nimport { StateCSSMap } from './state-css-map/state-css-map.model';\nimport { DynamicAnimationsService } from './dynamic-animations.service';\nimport { NgTransitionService } from './ng-transition/ng-transition.service';\nimport { DynamicAnimationsHandler } from './dynamic-animations-handler/dynamic-animations-handler.model';\nimport { NgTransitionStates } from './ng-transition/ng-transition.states';\nimport { LeaveDirective } from './leave/leave.directive';\nimport { NgStateService } from './ng-state/ng-state.service';\n\n/**\n * This directive is the main interface to dynamic animations.\n * It should be attached to the element that is to be animated.\n * \n * ## Directions\n *\n * In a component define a string member to represent the state\n * of the Animations.  This is analogous to a trigger in normal\n * Angular animations.\n * \n * Then define the animations as an array of state and transition\n * function calls from the Angular animations module.\n * \n * Optionally specify a map of state names to css class names that\n * will be added and removed from the element as the animations \n * start and finish.\n * \n * Then pass those values into this directives state and animations\n * Inputs.\n *\n * If a :leave animation, or *=>void, is speciied you must also both\n * add the @dvkLeave directive to the element and add dvkLeave to \n * the component as a static animation.  This step is only necessary\n * for a :leave animation. Otherwise it can be skipped.\n * \n * The animations can then be played by changing the string bound to\n * the state Input.\n * \n * ## Example\n * \n * ```ts\n * \\@Component({\n *              template: `\n *                  \n *              `\n *              animations:[dvkLeave]\n * })\n * ```\n * class MyComponent {\n *              myState: string = 'closed';\n *              myAniamtions = [\n *                  state('open',style({\n *                      'transform': `scaleY(1.0)`,\n *                      'transform-origin': 'top'\n *                  })),\n *                  state('closed',style({\n *                      'transform': `scaleY(0.0)`,\n *                      'transform-origin': 'top'\n *                  })),\n *                  transition('openclosed',animate('200ms')),\n *                  transition(':enter',animate('200ms',\n *                      style({ 'background-color': 'green' })),\n *                  transition(':leave',animate('200ms',\n *                      style({ 'background-color': 'red' }))\n *              ]\n *              myCssMap = {\n *                  'open': 'is-open',\n *                  'closed': 'is-closed'\n *              }\n * \n *              toggleState() {\n *                  if(this.myState === 'closed') { \n *                      this.myState = 'open'; \n *                   }\n *                   else { \n *                       this.myState = 'closed'; \n *                   }\n *              }\n * }\n * ```\n */\n@Directive({\n  selector: '[dvk-da]'\n})\nexport class DynamicAnimationsDirective implements OnInit, OnDestroy {\n  private stateMode: 'string' | 'number' = 'string';\n  private animationsHandler: DynamicAnimationsHandler;\n  private strState: string;\n\n  /**\n   * Changing the value of state will cause a transition \n   * and play an animation if one is defined for that state\n   * change.\n   */\n  @Input() set state(state:string) { // | number)\n    this.strState = state;\n\n    if(this.animationsHandler) {\n      this.animationsHandler.nextState(this.strState);\n    }\n  }\n\n  private transitions: AnimationTransitionMetadata[];\n  private states: AnimationStateMetadata[];\n\n  /**\n   * The description of the animations to play as an array \n   * of state and transition Angular animation functions.\n   */\n  @Input() set animations(animations: (AnimationTransitionMetadata | AnimationStateMetadata)[]) {\n    this.transitions = [];\n    this.states = [];\n\n    animations.forEach(animation=>{\n      if(this.isTransition(animation)) {\n        this.transitions.push(animation);\n      } else if (this.isState) {\n        this.states.push(animation);\n      }\n    });\n  }\n\n  private isTransition(metaData: AnimationMetadata): metaData is AnimationTransitionMetadata {\n    return !!(metaData as AnimationTransitionMetadata).animation;\n  }\n\n  private isState(metaData: AnimationMetadata): metaData is AnimationStateMetadata {\n    return !!(metaData as AnimationStateMetadata).styles;\n  }\n\n  /**\n   * The map of state name to css class names to apply\n   * as the state changes.\n   */\n  @Input() cssMap: StateCSSMap;\n\n  constructor(\n    private element: ElementRef,\n    private daService: DynamicAnimationsService,\n    private tranService: NgTransitionService,\n    private statesService: NgStateService,\n    @Optional() \n    private dvkLeave: LeaveDirective) {\n      if (this.dvkLeave) {\n        this.dvkLeave.setLeaveTiming(\"500ms\");\n      }\n     }\n\n  ngOnInit() {\n\n    this.animationsHandler = this.daService.createAnimationsHandler(\n      this.element.nativeElement,\n      NgTransitionStates.Void,\n      this.tranService.buildAnimationTransitions(this.transitions),\n      this.statesService.parseStates(this.states),\n      this.cssMap);\n      \n    // enter\n    this.animationsHandler.nextState(this.strState);\n  }\n\n  ngOnDestroy() {\n\n    // leave\n    this.animationsHandler.nextState(NgTransitionStates.Void)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicAnimationsHandler.html":{"url":"interfaces/DynamicAnimationsHandler.html","title":"interface - DynamicAnimationsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicAnimationsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.model.ts\n        \n\n            \n                Description\n            \n            \n                Describe the interface for providing a component \nor directive with run time specified animations \nbased on a series of string transitions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destroy\n                                \n                                \n                                        nextState\n                                \n                                \n                                        setAnimations\n                                \n                                \n                                        setCSSMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references for garbage collection.  Should \nusually be called in ngOnDestroy.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextState\n                                    \n                                \n                                \n                                    \n                                        nextState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transition to the next state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setAnimations\n                                    \n                                \n                                \n                                    \n                                        setAnimations:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set the animations and states to use.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setCSSMap\n                                    \n                                \n                                \n                                    \n                                        setCSSMap:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set the map of css classes to apply at specific states.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * Describe the interface for providing a component \n * or directive with run time specified animations \n * based on a series of string transitions.\n * \n */\nexport interface DynamicAnimationsHandler {\n\n    /**\n     * Set the map of css classes to apply at specific states.\n     */\n    setCSSMap: (map: StateCSSMap) =>void;\n\n    /**\n     * Transition to the next state.\n     */\n    nextState: (toState:string) => void;\n\n    /**\n     * Set the animations and states to use.\n     */\n    setAnimations: (transitions: AnimationTransitionsMap, styles: AnimationStylesMap) => void;\n\n    /**\n     * Release the references for garbage collection.  Should \n     * usually be called in ngOnDestroy.\n     */\n    destroy: () => void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicAnimationsHandlerConstructor.html":{"url":"interfaces/DynamicAnimationsHandlerConstructor.html","title":"interface - DynamicAnimationsHandlerConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicAnimationsHandlerConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.constructor.ts\n        \n\n            \n                Description\n            \n            \n                The shape of a constructor for an object that can act as the Animations Handler.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { DynamicAnimationsHandler } from './dynamic-animations-handler.model';\nimport { AnimationStatesService } from '../animation-states/animation-states.service';\nimport { StateCssMapperService } from '../state-css-mapper/state-css-mapper.service';\nimport { AnimationTransitionsMap, AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * The shape of a constructor for an object that can act as the Animations Handler.\n */\nexport interface DynamicAnimationsHandlerConstructor {\n    new( \n        element: any,\n        initialState: string,\n        transitions: AnimationTransitionsMap,\n        styles: AnimationStylesMap,\n        cssMap: StateCSSMap,\n        cssMapperService: StateCssMapperService,\n        animationStatesBuilder: AnimationStatesService):DynamicAnimationsHandler;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicAnimationsModule.html":{"url":"modules/DynamicAnimationsModule.html","title":"module - DynamicAnimationsModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicAnimationsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicAnimationsModule\n\n\n\ncluster_DynamicAnimationsModule_declarations\n\n\n\ncluster_DynamicAnimationsModule_exports\n\n\n\ncluster_DynamicAnimationsModule_providers\n\n\n\n\nDynamicAnimationsDirective\n\nDynamicAnimationsDirective\n\n\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsDirective->DynamicAnimationsModule\n\n\n\n\n\nLeaveDirective\n\nLeaveDirective\n\nDynamicAnimationsModule -->\n\nLeaveDirective->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective  -->\n\nDynamicAnimationsModule->DynamicAnimationsDirective \n\n\n\n\n\nLeaveDirective \n\nLeaveDirective \n\nLeaveDirective  -->\n\nDynamicAnimationsModule->LeaveDirective \n\n\n\n\n\nAnimationStatesService\n\nAnimationStatesService\n\nDynamicAnimationsModule -->\n\nAnimationStatesService->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsService\n\nDynamicAnimationsService\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsService->DynamicAnimationsModule\n\n\n\n\n\nNgStateService\n\nNgStateService\n\nDynamicAnimationsModule -->\n\nNgStateService->DynamicAnimationsModule\n\n\n\n\n\nNgTransitionService\n\nNgTransitionService\n\nDynamicAnimationsModule -->\n\nNgTransitionService->DynamicAnimationsModule\n\n\n\n\n\nStateCssMapperService\n\nStateCssMapperService\n\nDynamicAnimationsModule -->\n\nStateCssMapperService->DynamicAnimationsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Dynamic Animations Module provides support for allowing Angular\nAnimations to be passed in at runtime dynamically instead of \ndescribed statically in the Component's metadata.\nThis functionality is handled through the exported \nDynamicAnimationsDirective.\nThe forRoot method must be called to provide the DynamicAnimationsHandler\nand the AnimationStateMachine that are used by the directive.\nThe implementations are handled by default by the DefaultDynamicAnimationsHandlerService\nand the DefaultAnimationsStateMachine respectively but can be \noverriden with custom implementations if desired.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicAnimationsDirective\n                            \n                            \n                                LeaveDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AnimationStatesService\n                            \n                            \n                                     DynamicAnimationsService\n                            \n                            \n                                     NgStateService\n                            \n                            \n                                     NgTransitionService\n                            \n                            \n                                     StateCssMapperService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicAnimationsDirective\n                            \n                            \n                                    LeaveDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DynamicAnimationsService } from './dynamic-animations.service';\nimport { StateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { AnimationStatesService } from './animation-states/animation-states.service';\nimport { DynamicAnimationsHandlerConstructor } from './dynamic-animations-handler/dynamic-animations-handler.constructor';\nimport { DefaultDynamicAnimationsHandlerService } from './default-dynamic-animations-handler/default-dynamic-animations-handler.service';\nimport { DynamicAnimationsHandlerConstructorToken } from './dynamic-animations-handler/dynamic-animations-handler.token';\nimport { AnimationStateMachineConstructorToken } from './animation-state-machine/animation-state-machine.token';\nimport { DefaultAnimationsStateMachine } from './default-animations-state-machine/default-animations-state-machine.service';\nimport { AnimationStateMachineConstructor } from './animation-state-machine/animation-state-machine.constructor';\nimport { DynamicAnimationsDirective } from './dynamic-animations.directive';\nimport { LeaveDirective } from './leave/leave.directive';\nimport { NgTransitionService } from './ng-transition/ng-transition.service';\nimport { NgStateService } from './ng-state/ng-state.service';\n\n/**\n * The Dynamic Animations Module provides support for allowing Angular\n * Animations to be passed in at runtime dynamically instead of \n * described statically in the Component's metadata.\n * \n * This functionality is handled through the exported \n * {@link DynamicAnimationsDirective}.\n * \n * The forRoot method must be called to provide the {@link DynamicAnimationsHandler}\n * and the {@link AnimationStateMachine} that are used by the directive.\n * \n * The implementations are handled by default by the {@link DefaultDynamicAnimationsHandlerService}\n * and the {@link DefaultAnimationsStateMachine} respectively but can be \n * overriden with custom implementations if desired.\n */\n@NgModule({\n  providers: [\n    DynamicAnimationsService,\n    AnimationStatesService, \n    StateCssMapperService,\n    NgTransitionService,\n    NgStateService\n  ],\n  declarations: [DynamicAnimationsDirective, LeaveDirective],\n  exports: [DynamicAnimationsDirective, LeaveDirective]\n})\nexport class DynamicAnimationsModule {\n  static forRoot(\n    animationsHandlerConstructor: DynamicAnimationsHandlerConstructor = DefaultDynamicAnimationsHandlerService,\n    animationsStateMachineConstructor: AnimationStateMachineConstructor = DefaultAnimationsStateMachine \n  ): ModuleWithProviders {\n    return {\n      ngModule: DynamicAnimationsModule,\n      providers: [\n        { \n          provide: DynamicAnimationsHandlerConstructorToken, \n          useValue: animationsHandlerConstructor \n        },\n        {\n          provide: AnimationStateMachineConstructorToken,\n          useValue: animationsStateMachineConstructor\n        }\n      ]\n    };\n  }  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicAnimationsService.html":{"url":"injectables/DynamicAnimationsService.html","title":"injectable - DynamicAnimationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicAnimationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is used to create a DynamicAnimationsHandler \nwith the DynamicAnimationsService method.\nThe DynamicAnimationsHandler \ncan be used to handle animations based on state transitions\nfor the specified element.\nThe DynamicAnimationsHandler can be wired up to a \nparticular component or directive to automatically handle \nthe animations for the specified element.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAnimationsHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animationsHandlerConstructor: DynamicAnimationsHandlerConstructor, cssMapperService: StateCssMapperService, animationStatesBuilder: AnimationStatesService)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animationsHandlerConstructor\n                                                  \n                                                        \n                                                                    DynamicAnimationsHandlerConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cssMapperService\n                                                  \n                                                        \n                                                                    StateCssMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStatesBuilder\n                                                  \n                                                        \n                                                                    AnimationStatesService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createAnimationsHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateAnimationsHandler(element: any, initialState: string, transitions: AnimationTransitionsMap, styles: AnimationStylesMap, cssMap: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Create a DynamicAnimationsHandler for \nthe given element.\nSee DynamicAnimationsService for example\nusage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The element to attach the animations\nhandler to. \n\n                                                        \n                                                \n                                                \n                                                        initialState\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The initial state of the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationTransitionsMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        styles\n                                                        \n                                                                    AnimationStylesMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The AnimationStylesMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                                \n                                                        cssMap\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The StateCSSMap for the AnimationStateMachine\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { StateCSSMap } from './state-css-map/state-css-map.model';\nimport { AnimationTransitionsMap, AnimationStylesMap } from './animation-transitions/animation-transitions.model';\nimport { Injectable, Inject } from '@angular/core';\nimport { DynamicAnimationsHandlerConstructor } from './dynamic-animations-handler/dynamic-animations-handler.constructor';\nimport { DynamicAnimationsHandlerConstructorToken } from './dynamic-animations-handler/dynamic-animations-handler.token';\nimport { StateCssMapperService } from './state-css-mapper/state-css-mapper.service';\nimport { AnimationStatesService } from './animation-states/animation-states.service';\n\n/**\n * This import is required for ts to resolve the return of \n * the createAnimationsHandler function.  Without it compilation\n * will fail.\n */\nimport { DynamicAnimationsHandler } from './dynamic-animations-handler/dynamic-animations-handler.model';\n\n/**\n * This service is used to create a {@link DynamicAnimationsHandler} \n * with the {@link DynamicAnimationsService#createAnimationsHandler} method.\n * \n * The {@link DynamicAnimationsHandler} \n * can be used to handle animations based on state transitions\n * for the specified element.\n * \n * The {@link DynamicAnimationsHandler} can be wired up to a \n * particular component or directive to automatically handle \n * the animations for the specified element.\n *\n */\n@Injectable()\nexport class DynamicAnimationsService {\n\n  constructor(\n    @Inject(DynamicAnimationsHandlerConstructorToken) \n    private animationsHandlerConstructor: DynamicAnimationsHandlerConstructor,\n    private cssMapperService: StateCssMapperService,\n    private animationStatesBuilder: AnimationStatesService,\n  ) { }\n\n  /**\n   * Create a {@link DynamicAnimationsHandler} for \n   * the given element.\n   * \n   * See {@link DynamicAnimationsService} for example\n   * usage.\n   * \n   * @param element The element to attach the animations\n   * handler to. \n   * \n   * @param initialState The initial state of the AnimationStateMachine\n   * @param transitions The AnimationTransitionsMap for the AnimationStateMachine\n   * @param styles The AnimationStylesMap for the AnimationStateMachine\n   * @param cssMap The StateCSSMap for the AnimationStateMachine\n   * \n   */\n  createAnimationsHandler(\n    element: any, \n    initialState: string, \n    transitions: AnimationTransitionsMap, \n    styles: AnimationStylesMap,\n    cssMap: StateCSSMap = {}) {\n\n      return new this.animationsHandlerConstructor(\n        element,\n        initialState,\n        transitions,\n        styles,\n        cssMap,\n        this.cssMapperService,\n        this.animationStatesBuilder);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentData.html":{"url":"interfaces/DynamicComponentData.html","title":"interface - DynamicComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-data/dynamic-component-data.model.ts\n        \n\n            \n                Description\n            \n            \n                Represent the data necessary for a dynamic \ncomponent that is suitable for serialization.\nThis part of the model is separate so that it\ncould be put inside a store or some other \nuse case where serialization matters.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        initialValues\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initialValues\n                                    \n                                \n                                \n                                    \n                                        initialValues:     InitialValues\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InitialValues\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InitialValues } from \"../initial-values/initial-values.model\";\n\n/**\n * Represent the data necessary for a dynamic \n * component that is suitable for serialization.\n * \n * This part of the model is separate so that it\n * could be put inside a store or some other \n * use case where serialization matters.\n */\nexport interface DynamicComponentData {\n    name: string;\n    initialValues?: InitialValues;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicComponentDirective.html":{"url":"directives/DynamicComponentDirective.html","title":"directive - DynamicComponentDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicComponentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts\n        \n\n            \n                Description\n            \n            \n                The Dynamic Component Directive is the interface to using\ndvk dynamic components.\nThe directive lifecycle will track any streams specified by\nthe model and handle change detection in the same way the \nasync pipe does.\nDirections\nProvide a DynamicComponentSerializerService \nfor the directive to use.\nconstructor(private dsService: DynamicComponentSerializerService) { \n     this.serializer = this.dsService.createSerializer({\n         'textComponent':TextComponent\n     });\n}And define a DynamicComponentModel for the DynamicComponentDirective\nto initialize with:\ntext$ = new Subject();\n\nonClick = (e: MouseEvent) => {\n     console.log('Dynamic component was clicked');\n}\n\nmodel: DynamicComponentModel = {\n     name: 'textComponent',\n     initialValues:{ \n         text: 'Initial Text',\n     },\n     outputCallbacks: {\n         onClicked: this.onClick\n     },\n     inputs$: {\n         text: this.text$.asObservable()\n     }\n};And in the template for the Component attach the dynamic \ncomponent directive to the desired element.\n  \n  Note\nThe DynamicComponentSerializer was intentionally made\nto be passed in rather than created internally so that the same\nserialzer could be reused for multiple instances of the \nDynamicComponentDirective.  This allows a developer to create \na single serializer at one point and feed it into all desired \ninstances of DynamicComponentDirectives.\n\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvk-dc]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                compRef\n                            \n                            \n                                    Private\n                                inputSubscriptions\n                            \n                            \n                                    Private\n                                outputSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                attachInputStreams\n                            \n                            \n                                    Protected\n                                attachOutputCallbacks\n                            \n                            \n                                    Protected\n                                closeAllSubscriptions\n                            \n                            \n                                    Protected\n                                createComponent\n                            \n                            \n                                    Protected\n                                createInjector\n                            \n                            \n                                    Protected\n                                destroyComp\n                            \n                            \n                                    Protected\n                                initializeComponent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                setInitialValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dvk-dc\n                            \n                            \n                                serializer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vcRef: ViewContainerRef, resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vcRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dvk-dc\n                    \n                    \n                        The model for this dynamic component to instantiate \nwith.\n\n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serializer\n                    \n                    \n                        The serialzer this instance of the directive should use\nto resolve Components.\n\n                            \n                            Type:    DynamicComponentSerializer\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:97\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            attachInputStreams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachInputStreams(streams: InputStreams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:183\n                            \n                        \n\n\n                \n                    \n                            Attach {@link Observable} input streams to the \nspecified property of the component.\nThe streams will attach a {@link distinctUntilChanged} operator\nto the {@link Observable} and mark the component for change detection\nwhen new values are passed through the stream. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        streams\n                                                        \n                                                                    InputStreams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of property names to {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            attachOutputCallbacks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachOutputCallbacks(callbacks: OutputCallbacks)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:206\n                            \n                        \n\n\n                \n                    \n                            Attach the {@link EventEmitter}s inside the component to\nthe specified callback.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callbacks\n                                                        \n                                                                    OutputCallbacks\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            closeAllSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeAllSubscriptions(subscriptions: Subscription[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:237\n                            \n                        \n\n\n                \n                    \n                            Close all the subscriptions that are still open.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        subscriptions\n                                                        \n                                                                    Subscription[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The array of subscriptions to \npotentially close.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createComponent(constructor: ComponentConstructor, injector: ReflectiveInjector)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:152\n                            \n                        \n\n\n                \n                    \n                            Request a component from angular of the given type.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The component constructor \n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                        \n                                                                    ReflectiveInjector\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The injector to use when creating the component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createInjector(providers: Provider[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:139\n                            \n                        \n\n\n                \n                    \n                            Create an injector from the {@link BBDynamicComponentDirective2}s\n{@link ViewContainerRef}.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        providers\n                                                        \n                                                                    Provider[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                An array of providers for the injector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            destroyComp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyComp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:223\n                            \n                        \n\n\n                \n                    \n                            Clean up all subscriptions and destroy the dynamically\ninstantiated component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initializeComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initializeComponent(compModel: DynamicComponentModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        compModel\n                                                        \n                                                                    DynamicComponentModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:247\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setInitialValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setInitialValues(initValues: InitialValues)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:164\n                            \n                        \n\n\n                \n                    \n                            Set initial values into the component.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initValues\n                                                        \n                                                                    InitialValues\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The map of property names to values to set.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            compRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        compRef:     ComponentRef\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputSubscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            outputSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outputSubscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:91\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        componentModel\n                    \n                \n\n\n                \n                    \n                        setcomponentModel(compModel: )\n                    \n                \n                            \n                                \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts:104\n                                \n                            \n                    \n                        \n                                The model for this dynamic component to instantiate \nwith.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            compModel\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    Directive,  \n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ReflectiveInjector,\n    ViewContainerRef, \n    EventEmitter,\n    Provider,\n    OnDestroy} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { ComponentConstructor } from './component-constructor/component-constructor.model';\nimport { DynamicComponentModel } from './dynamic-component-model/dynamic-component-model.model';\nimport { DynamicComponentSerializer } from './dynamic-component-serializer/dynamic-component-serializer.model';\nimport { InitialValues } from './initial-values/initial-values.model';\nimport { InputStreams } from './input-streams/input-streams.model';\nimport { OutputCallbacks } from './output-callbacks/output-callbacks.model';\n\n/**\n * The Dynamic Component Directive is the interface to using\n * dvk dynamic components.\n * \n * The directive lifecycle will track any streams specified by\n * the model and handle change detection in the same way the \n * async pipe does.\n *  \n * ### **Directions**\n * \n * Provide a {@link DynamicComponentSerializerService} \n * for the directive to use.\n * \n * ```ts\n * constructor(private dsService: DynamicComponentSerializerService) { \n *     this.serializer = this.dsService.createSerializer({\n *         'textComponent':TextComponent\n *     });\n * }\n * ```\n * \n * And define a {@link DynamicComponentModel} for the DynamicComponentDirective\n * to initialize with:\n * \n * ```ts\n * text$ = new Subject();\n * \n * onClick = (e: MouseEvent) => {\n *     console.log('Dynamic component was clicked');\n * }\n * \n * model: DynamicComponentModel = {\n *     name: 'textComponent',\n *     initialValues:{ \n *         text: 'Initial Text',\n *     },\n *     outputCallbacks: {\n *         onClicked: this.onClick\n *     },\n *     inputs$: {\n *         text: this.text$.asObservable()\n *     }\n * };\n * ```\n * \n * And in the template for the Component attach the dynamic \n * component directive to the desired element.\n * \n * ```html\n *  \n *  \n * ``` \n * \n * ###### **Note**\n * \n * The {@link DynamicComponentSerializer} was intentionally made\n * to be passed in rather than created internally so that the same\n * serialzer could be reused for multiple instances of the \n * DynamicComponentDirective.  This allows a developer to create \n * a single serializer at one point and feed it into all desired \n * instances of DynamicComponentDirectives.\n */\n@Directive({\n  selector: '[dvk-dc]',\n  exportAs:'dynamicComp2',\n})\nexport class DynamicComponentDirective implements OnDestroy {\n    protected compRef: ComponentRef;\n    private inputSubscriptions: Subscription[] = [];\n    private outputSubscriptions: Subscription[] = [];\n\n    /**\n     * The serialzer this instance of the directive should use\n     * to resolve Components.\n     */\n    @Input() serializer: DynamicComponentSerializer;\n\n    /**\n     * The model for this dynamic component to instantiate \n     * with.\n     */\n    @Input('dvk-dc') \n    set componentModel(compModel: DynamicComponentModel) {\n      this.initializeComponent(compModel);\n    }\n\n    constructor(protected vcRef: ViewContainerRef,\n                protected resolver: ComponentFactoryResolver) {\n    }\n\n    protected initializeComponent(compModel: DynamicComponentModel) {\n        const componentConstructor = this.serializer.getComponent(compModel.name);\n\n        if (!componentConstructor) {\n            console.error(`${compModel.name} was not found for deserialization.`)\n          return;\n        }\n\n        this.destroyComp();\n\n        this.compRef = this.createComponent(\n            componentConstructor, \n            this.createInjector(compModel.providers));\n\n        this.setInitialValues(compModel.initialValues);\n        this.attachInputStreams(compModel.inputs$);\n        this.attachOutputCallbacks(compModel.outputCallbacks);\n\n        this.vcRef.insert(this.compRef.hostView);\n        this.compRef.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Create an injector from the {@link BBDynamicComponentDirective2}s\n     * {@link ViewContainerRef}.\n     * @param providers An array of providers for the injector.\n     */\n    protected createInjector(providers: Provider[]) {\n        providers = providers || [];\n        return ReflectiveInjector\n            .fromResolvedProviders(\n            ReflectiveInjector.resolve(providers),\n            this.vcRef.parentInjector);\n    }\n\n    /**\n     * Request a component from angular of the given type.  \n     * @param constructor The component constructor \n     * @param injector The injector to use when creating the component.\n     */\n    protected createComponent(\n        constructor: ComponentConstructor, \n        injector: ReflectiveInjector) {\n        return this.resolver\n            .resolveComponentFactory(constructor)\n            .create(injector);\n    }\n\n    /**\n     * Set initial values into the component.\n     * @param initValues The map of property names to values to set.\n     */\n    protected setInitialValues(initValues: InitialValues) {\n        if (initValues) {\n            Object.keys(initValues).map(\n                input => {\n                    this.compRef.instance[input] = initValues[input];\n                }\n            )\n        }\n    }\n\n    /**\n     * Attach {@link Observable} input streams to the \n     * specified property of the component.\n     * \n     * The streams will attach a {@link distinctUntilChanged} operator\n     * to the {@link Observable} and mark the component for change detection\n     * when new values are passed through the stream. \n     * @param streams The map of property names to {@link Observable}s to attach.\n     */\n    protected attachInputStreams(streams: InputStreams) {\n        if(streams) {\n            this.inputSubscriptions = \n                Object.keys(streams).map(input=>{\n                    return streams[input]\n                        .pipe(\n                            distinctUntilChanged()\n                        )\n                        .subscribe(value=>{\n                            this.compRef.instance[input] = value;\n                            this.compRef.changeDetectorRef.markForCheck();\n                        })\n                });\n        }\n    }\n\n\n    /**\n     * Attach the {@link EventEmitter}s inside the component to\n     * the specified callback.\n     * @param callbacks The map of {@link EventEmitter} property names to\n     * callbacks that will be executed when the {@link EventEmitter} fires.\n     */\n    protected attachOutputCallbacks(callbacks: OutputCallbacks) {\n        if(callbacks) {\n            this.outputSubscriptions = \n                Object.keys(callbacks)\n                    .map(cb=>{\n                        return (this.compRef.instance[cb] as EventEmitter)\n                            .subscribe(event=>{\n                                callbacks[cb](event);\n                            });\n                    });\n        }\n    }\n\n    /**\n     * Clean up all subscriptions and destroy the dynamically\n     * instantiated component.\n     */\n    protected destroyComp() {\n        this.closeAllSubscriptions(this.outputSubscriptions);\n        this.closeAllSubscriptions(this.inputSubscriptions);\n\n        if (this.compRef) {\n            this.compRef.destroy();\n        }\n    }\n\n    /**\n     * Close all the subscriptions that are still open.\n     * @param subscriptions The array of subscriptions to \n     * potentially close.\n     */\n    protected closeAllSubscriptions(subscriptions: Subscription[]) {\n        if(subscriptions){\n            subscriptions.forEach(sub=>{\n                if(!sub.closed) {\n                    sub.unsubscribe();\n                }\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyComp();\n    } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentModel.html":{"url":"interfaces/DynamicComponentModel.html","title":"interface - DynamicComponentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-model/dynamic-component-model.model.ts\n        \n\n            \n                Description\n            \n            \n                This model combines DynamicComponentData with \nan optional set of observable streams to tie to inputs\nand callbacks to tie to EventEmitters in the \ndynamically created component.\n\n            \n\n            \n                Extends\n            \n            \n                    DynamicComponentData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inputs$\n                                \n                                \n                                            Optional\n                                        outputCallbacks\n                                \n                                \n                                            Optional\n                                        providers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inputs$\n                                    \n                                \n                                \n                                    \n                                        inputs$:     InputStreams\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputStreams\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputCallbacks\n                                    \n                                \n                                \n                                    \n                                        outputCallbacks:     OutputCallbacks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputCallbacks\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                    \n                                \n                                \n                                    \n                                        providers:     Provider[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Provider[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Provider } from \"@angular/core\";\nimport { InputStreams } from \"../input-streams/input-streams.model\";\nimport { OutputCallbacks } from \"../output-callbacks/output-callbacks.model\";\nimport { DynamicComponentData } from '../dynamic-component-data/dynamic-component-data.model';\n\n/**\n * This model combines {@link DynamicComponentData} with \n * an optional set of observable streams to tie to inputs\n * and callbacks to tie to EventEmitters in the \n * dynamically created component.\n */\nexport interface DynamicComponentModel extends DynamicComponentData {\n    inputs$?: InputStreams;\n    outputCallbacks?: OutputCallbacks;\n    providers?: Provider[],\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializer.html":{"url":"interfaces/DynamicComponentSerializer.html","title":"interface - DynamicComponentSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts\n        \n\n            \n                Description\n            \n            \n                Handle serialization  between a string name and a component constructor.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getComponent\n                                \n                                \n                                    getName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponent(componentName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts:7\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentConstructor\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName(componentConstructor: ComponentConstructor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                        \n                                                                    ComponentConstructor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * Handle serialization  between a string name and a component constructor.\n */\nexport interface DynamicComponentSerializer {\n    getComponent(componentName: string): ComponentConstructor;\n    getName(componentConstructor: ComponentConstructor):string;\n}\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializerConstructor.html":{"url":"interfaces/DynamicComponentSerializerConstructor.html","title":"interface - DynamicComponentSerializerConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializerConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.constructor.ts\n        \n\n            \n                Description\n            \n            \n                Definition for a component serializer constructor.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { DynamicComponentSerializer } from \"./dynamic-component-serializer.model\";\nimport { DynamicComponentSerializerMap } from \"../dynamic-component-serializer-map/dynamic-component-serializer-map.model\";\n\n/**\n * Definition for a component serializer constructor.\n */\nexport interface DynamicComponentSerializerConstructor {\n    new(serializerMap: DynamicComponentSerializerMap):DynamicComponentSerializer;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentSerializerMap.html":{"url":"interfaces/DynamicComponentSerializerMap.html","title":"interface - DynamicComponentSerializerMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentSerializerMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer-map/dynamic-component-serializer-map.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an object that can handle\nserialization between a string name and a \nComponent class instance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deserializeMap\n                                \n                                \n                                        serializeMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deserializeMap\n                                    \n                                \n                                \n                                    \n                                        deserializeMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serializeMap\n                                    \n                                \n                                \n                                    \n                                        serializeMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ComponentConstructor } from '../component-constructor/component-constructor.model';\n\n/**\n * The shape of an object that can handle\n * serialization between a string name and a \n * Component class instance.\n */\nexport interface DynamicComponentSerializerMap {\n    serializeMap: Map;\n    deserializeMap: Map;\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicComponentSerializerService.html":{"url":"injectables/DynamicComponentSerializerService.html","title":"injectable - DynamicComponentSerializerService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentSerializerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts\n        \n\n            \n                Description\n            \n            \n                Create a serializer for dynamic components to be resolved from \nstring names.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSerializer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializerConstructor: DynamicComponentSerializerConstructor)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializerConstructor\n                                                  \n                                                        \n                                                                    DynamicComponentSerializerConstructor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateSerializer(map: DynamicComponentsMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    DynamicComponentsMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { ComponentConstructor } from '../component-constructor/component-constructor.model';\nimport { DynamicComponentsMap } from '../dynamic-component-map/dynamic-component-map.model';\nimport { DynamicComponentSerializerMap } from '../dynamic-component-serializer-map/dynamic-component-serializer-map.model';\nimport { DynamicComponentSerializerConstructorToken } from './dynamic-component-serializer.token';\nimport { DynamicComponentSerializerConstructor } from './dynamic-component-serializer.constructor';\n\n/**\n * Create a serializer for dynamic components to be resolved from \n * string names.\n */\n@Injectable()\nexport class DynamicComponentSerializerService {\n\n  constructor(\n    @Inject(DynamicComponentSerializerConstructorToken)\n    private serializerConstructor: DynamicComponentSerializerConstructor\n  ) { }\n\n  createSerializer(map: DynamicComponentsMap) {\n    const serializerMap: DynamicComponentSerializerMap = {\n      serializeMap: new Map(),\n      deserializeMap: new Map(),\n    };\n\n    Object.keys(map).forEach(name=>{\n      serializerMap.serializeMap.set(map[name], name);\n      serializerMap.deserializeMap.set(name, map[name]);\n    });\n\n    return new this.serializerConstructor(serializerMap);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicComponentsMap.html":{"url":"interfaces/DynamicComponentsMap.html","title":"interface - DynamicComponentsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicComponentsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts\n        \n\n            \n                Description\n            \n            \n                A map of string names to component constructors.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [serializedName: string]:    ComponentConstructor\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ComponentConstructor } from \"../component-constructor/component-constructor.model\";\n\n/**\n * A map of string names to component constructors.\n */\nexport interface DynamicComponentsMap {\n    [serializedName:string]: ComponentConstructor;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicComponentsModule.html":{"url":"modules/DynamicComponentsModule.html","title":"module - DynamicComponentsModule","body":"\n                   \n\n\n\n\n  Modules\n  DynamicComponentsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DynamicComponentsModule\n\n\n\ncluster_DynamicComponentsModule_declarations\n\n\n\ncluster_DynamicComponentsModule_exports\n\n\n\ncluster_DynamicComponentsModule_providers\n\n\n\n\nDynamicComponentDirective\n\nDynamicComponentDirective\n\n\n\nDynamicComponentsModule\n\nDynamicComponentsModule\n\nDynamicComponentsModule -->\n\nDynamicComponentDirective->DynamicComponentsModule\n\n\n\n\n\nDynamicComponentDirective \n\nDynamicComponentDirective \n\nDynamicComponentDirective  -->\n\nDynamicComponentsModule->DynamicComponentDirective \n\n\n\n\n\nDynamicComponentSerializerService\n\nDynamicComponentSerializerService\n\nDynamicComponentsModule -->\n\nDynamicComponentSerializerService->DynamicComponentsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-components/dynamic-components.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Dynamic Components Module exports the DynamicComponentDirective\nthat can be used to create dynamic components while alllowing them to\nbe wired up with input and output streams similar to components \ninstantiated normally.\nThe forRoot method must be called in order to provide the directive \nwith an implementation of the DynamicComponentSerializer which\nhandles the mapping of string names to actual Component class instances.\nThe default implementation DefaultDynamicComponentSerializer \nmay be overriden with a custom implementation if desired.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicComponentDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DynamicComponentSerializerService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicComponentDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponentDirective } from './dynamic-component.directive';\nimport { DynamicComponentSerializerService } from './dynamic-component-serializer/dynamic-component-serializer.service';\nimport { DynamicComponentSerializerConstructorToken } from './dynamic-component-serializer/dynamic-component-serializer.token';\nimport { DefaultDynamicComponentSerializer } from './default-dynamic-component-serializer/default-dynamic-component-serializer';\nimport { DynamicComponentSerializerConstructor } from './dynamic-component-serializer/dynamic-component-serializer.constructor';\n\n/**\n * The Dynamic Components Module exports the {@link DynamicComponentDirective}\n * that can be used to create dynamic components while alllowing them to\n * be wired up with input and output streams similar to components \n * instantiated normally.\n * \n * The forRoot method must be called in order to provide the directive \n * with an implementation of the {@link DynamicComponentSerializer} which\n * handles the mapping of string names to actual Component class instances.\n * \n * The default implementation {@link DefaultDynamicComponentSerializer} \n * may be overriden with a custom implementation if desired.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DynamicComponentDirective \n  ],\n  exports: [\n    DynamicComponentDirective \n  ],\n  providers: [\n    DynamicComponentSerializerService\n  ]\n})\nexport class DynamicComponentsModule {\n  static forRoot(\n    serializerConstrutor: DynamicComponentSerializerConstructor = DefaultDynamicComponentSerializer\n  ): ModuleWithProviders {\n    return {\n      ngModule: DynamicComponentsModule,\n      providers: [\n        { \n          provide: DynamicComponentSerializerConstructorToken,\n          useValue: serializerConstrutor\n        }\n      ]\n    };\n  }  \n }\n\n \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LeaveDirective.html":{"url":"directives/LeaveDirective.html","title":"directive - LeaveDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  LeaveDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is a stub to handle :leave animations specified\ndynamically.  Angular will remove an element without waiting for \na dynamic animation to run but will wait for a static one.  So we\ndefine a stub :leave animation that does nothing but plays for the\namount of time needed for the specified dynamic :leave.\nCurrently this is under development and is hard coded to wait \nfor 500ms no matter how long the dynamic animation takes. \nEventually it will configure the wait time based on the actual\ndynamic animation's timing.\nSee DynamicAnimationsDirective for usage.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dvkLeave]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setLeaveTiming\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @dvkLeave\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        @dvkLeave:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLeaveTiming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLeaveTiming(timing: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timing\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { trigger, transition, animate, style } from '@angular/animations';\nimport { Directive, HostBinding } from '@angular/core';\n\n/**\n * This directive is a stub to handle :leave animations specified\n * dynamically.  Angular will remove an element without waiting for \n * a dynamic animation to run but will wait for a static one.  So we\n * define a stub :leave animation that does nothing but plays for the\n * amount of time needed for the specified dynamic :leave.\n * \n * Currently this is under development and is hard coded to wait \n * for 500ms no matter how long the dynamic animation takes. \n * Eventually it will configure the wait time based on the actual\n * dynamic animation's timing.\n * \n * See {@link DynamicAnimationsDirective} for usage.\n */\n@Directive({\n  selector: '[dvkLeave]'\n})\nexport class LeaveDirective {\n  @HostBinding(\"@dvkLeave\") public timingParams: any = null;\n  \n  public setLeaveTiming(timing: string): void {\n    this.timingParams = dvkLeaveTiming(timing);\n  }\n}\n\n/**\n * Stub animation for the :leave transition\n */\nexport const dvkLeave =  [\n  trigger(\"dvkLeave\", [\n    transition(\":leave\", \n      animate(\"{{ timing }}\"), \n        { params: { timing: \"0ms\" }})\n  ])\n]\n\n/**\n * Stub function for setting the timing of a \n * :leave transition\n * @param timing The timing the animation should\n * last.\n */\nexport function dvkLeaveTiming(timing: any) {\n  return { value: null, params: { timing } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgStateService.html":{"url":"injectables/NgStateService.html","title":"injectable - NgStateService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts\n        \n\n            \n                Description\n            \n            \n                Converts an array of AnimationStateMetadata objects into \nan AnimationStylesMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseStates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseStates\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseStates(states: AnimationStateMetadata[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Convert metadata to AnimationStylesMap\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                        \n                                                                    AnimationStateMetadata[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The metadata to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AnimationStylesMap\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimationStateMetadata } from '@angular/animations';\nimport { AnimationStylesMap } from '../animation-transitions/animation-transitions.model';\n\n/**\n * Converts an array of AnimationStateMetadata objects into \n * an {@link AnimationStylesMap}.\n */\n@Injectable()\nexport class NgStateService {\n  constructor() { }\n\n  /**\n   * Convert metadata to {@link AnimationStylesMap}\n   * @param states The metadata to convert.\n   */\n  parseStates(states: AnimationStateMetadata[]): AnimationStylesMap {\n    return states.reduce((map,state)=>{\n      map[state.name] = state.styles;\n      return map;\n    },{});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgTransitionService.html":{"url":"injectables/NgTransitionService.html","title":"injectable - NgTransitionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgTransitionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the ability to convert an array of AnimationTransitionMetadata\ninto an AnimationTransitionsMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildAnimationTransitions\n                            \n                            \n                                    Private\n                                parseTransitionExpression\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildAnimationTransitions\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildAnimationTransitions(transitions: AnimationTransitionMetadata[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Build an AnimationTransitionsMap from an array of \nAnimationTransitionMetadata objects.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        transitions\n                                                        \n                                                                    AnimationTransitionMetadata[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The AnimationTransitionMetadata[] to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parseTransitionExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseTransitionExpression(transition: AnimationTransitionMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Parse an individual AnimationTransitionMetadata for the transition\nexpression and convert that to a valid entry in an \nAnimationTransitionsMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        transition\n                                                        \n                                                                    AnimationTransitionMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The AnimationTransitionMetadata to convert.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimationTransitionMetadata } from '@angular/animations';\nimport { AnimationTransitionsMap } from '../animation-transitions/animation-transitions.model';\nimport { NgTransitionSymbols } from './ng-transition.symbols';\nimport { NgTransitionStates } from './ng-transition.states';\n\n/**\n * Provides the ability to convert an array of AnimationTransitionMetadata\n * into an {@link AnimationTransitionsMap}.\n */\n@Injectable()\nexport class NgTransitionService {\n  \n  constructor() { }\n\n  /**\n   * Build an {@link AnimationTransitionsMap} from an array of \n   * AnimationTransitionMetadata objects.\n   * \n   * @param transitions The AnimationTransitionMetadata[] to convert.\n   */\n  buildAnimationTransitions(transitions: AnimationTransitionMetadata[]) {\n    return transitions.reduce((transMap: AnimationTransitionsMap, transition)=>{\n      let newTransitions = this.parseTransitionExpression(transition);\n      Object.keys(newTransitions).forEach(fromState=>{\n        Object.keys(newTransitions[fromState]).forEach(toState=>{\n          transMap[fromState] = transMap[fromState] || {};\n          transMap[fromState][toState] = newTransitions[fromState][toState];\n        })\n      });\n      return transMap;\n    },{});\n  }\n\n  /**\n   * Parse an individual AnimationTransitionMetadata for the transition\n   * expression and convert that to a valid entry in an \n   * {@link AnimationTransitionsMap}.\n   * @param transition The AnimationTransitionMetadata to convert.\n   */\n  private parseTransitionExpression(transition: AnimationTransitionMetadata) {\n    const expressions = transition.expr;\n    let transitions: AnimationTransitionsMap = {};\n\n    if(this.isString(expressions)) {\n      expressions.split(',').forEach(expression=>{\n        if(expression.includes(NgTransitionSymbols.Either)) {\n          const states = expression.split(NgTransitionSymbols.To);\n          const state1 = states[0].trim();\n          const state2 = states[1].trim();\n\n          transitions = {\n            ...transitions,\n            [state1]: {\n              ...transitions[state1],\n              [state2]:transition.animation\n            },\n            [state2]: {\n              ...transitions[state2],\n              [state1]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.To)) {\n          const states = expression.split(NgTransitionSymbols.To);\n          const fromState = states[0].trim();\n          const toState = states[1].trim();\n\n          transitions = {\n            ...transitions,\n            [fromState]: {\n              ...transitions[fromState],\n              [toState]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Enter)) {\n          transitions = {\n            ...transitions,\n            [NgTransitionStates.Void]: {\n              ...transitions[NgTransitionStates.Void],\n              [NgTransitionStates.WildCard]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Leave)) {\n          transitions = {\n            ...transitions,\n            [NgTransitionStates.WildCard]: {\n              ...transitions[NgTransitionStates.WildCard],\n              [NgTransitionStates.Void]:transition.animation\n            }\n          };\n        }\n        else if(expression.includes(NgTransitionSymbols.Inc)) {\n          console.error(`${expression} is not yet supported`);\n        }\n        else if(expression.includes(NgTransitionSymbols.Dec)) {\n          console.error(`${expression} is not yet supported`);\n        }\n      })\n    }\n    return transitions;\n  }\n  \n  /**\n   * @ignore\n   */\n  private isString(expression: any): expression is string {\n    return expression.length !== null && expression.length !== undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateCSSMap.html":{"url":"interfaces/StateCSSMap.html","title":"interface - StateCSSMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateCSSMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts\n        \n\n            \n                Description\n            \n            \n                Map a state to a css class that \nshould be applied to the element\nbeing animated.\nThe old class will be removed before\nany transition animation is played.\nThe new class will be applied after\nany transition animations complete.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [state: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts:18\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface StateCSSMap {\n    [state:string]: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateCSSMapper.html":{"url":"interfaces/StateCSSMapper.html","title":"interface - StateCSSMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateCSSMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.model.ts\n        \n\n            \n                Description\n            \n            \n                The shape of an object that can map string state names \nto CSS classes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        add\n                                \n                                \n                                        destroy\n                                \n                                \n                                        remove\n                                \n                                \n                                        removeAll\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        add\n                                    \n                                \n                                \n                                    \n                                        add:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Add the css class defined by the StateCSSMap \nfor the given state.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Release the references used by the closure.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Remove the css class defined by the StateCSSMap \nfor the given state. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeAll\n                                    \n                                \n                                \n                                    \n                                        removeAll:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Remove all css classes defined by the StateCSSMap\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StateCSSMapper {\n\n  /**\n   * Remove the css class defined by the {@link StateCSSMap} \n   * for the given state. \n   */\n  remove: (state:string)=>void;\n\n  /**\n   * Remove all css classes defined by the {@link StateCSSMap}\n   */\n  removeAll: ()=>void;\n\n  /**\n   * Add the css class defined by the {@link StateCSSMap} \n   * for the given state.\n   */\n  add: (state:string)=> void;\n\n  /**\n   * Release the references used by the closure.\n   */\n  destroy: ()=> void;\n}\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateCssMapperService.html":{"url":"injectables/StateCssMapperService.html","title":"injectable - StateCssMapperService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StateCssMapperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts\n        \n\n            \n                Description\n            \n            \n                This service creates a closure that handles \nadding and removing css classes form a given element\nbased on the StateCSSMap.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStateCSSMapper\n                            \n                            \n                                getCSSClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                    RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStateCSSMapper\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStateCSSMapper(element: any, map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Create the StateCSSMapper to apply to the given element.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The element to apply the css classes to.\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The StateCSSMap that defines the css classes and states.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCSSClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCSSClass(state: string, map: StateCSSMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Get the css class for the given state.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The state.\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    StateCSSMap\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The StateCSSMap to look the state up in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, RendererFactory2 } from '@angular/core';\nimport { StateCSSMapper } from './state-css-mapper.model';\nimport { StateCSSMap } from '../state-css-map/state-css-map.model';\n\n/**\n * This service creates a closure that handles \n * adding and removing css classes form a given element\n * based on the {@link StateCSSMap}.\n */\n@Injectable()\nexport class StateCssMapperService {\n\n  constructor(private rendererFactory: RendererFactory2) {\n  }\n\n  /**\n   * Get the css class for the given state.\n   * \n   * @param state The state.\n   * @param map The StateCSSMap to look the state up in.\n   */\n  getCSSClass(state:string, map: StateCSSMap) {\n    return map && map[state];\n  }\n\n  /**\n   * Create the {@link StateCSSMapper} to apply to the given element.\n   * \n   * @param element The element to apply the css classes to.\n   * @param map The StateCSSMap that defines the css classes and states.\n   */\n  createStateCSSMapper(element: any, map: StateCSSMap) {\n    let renderer = this.rendererFactory.createRenderer(element,null);\n\n    return {\n      remove: (state:string)=> {\n        renderer.removeClass(element,this.getCSSClass(state,map));\n      },\n      add: (state:string)=> {\n        renderer.addClass(element,this.getCSSClass(state,map));\n      },\n      removeAll: ()=> {\n        Object.keys(map).forEach(entry=>renderer.removeClass(element, map[entry]));\n      },\n      destroy: ()=> {\n        renderer.destroy();\n        renderer = null;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/containers-map/containers-map.model.ts\n            \n            \n                interface\n            \n            \n                ContainersMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.model.ts\n            \n            \n                interface\n            \n            \n                ContentConductorConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.token.ts\n            \n            \n                variable\n            \n            \n                ContentConductorConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor.model.ts\n            \n            \n                interface\n            \n            \n                ContentConductor\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-conductor.service.ts\n            \n            \n                injectable\n            \n            \n                ContentConductorService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-container/content-container.directive.ts\n            \n            \n                directive\n            \n            \n                ContentContainerDirective\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content-container/content-container.model.ts\n            \n            \n                interface\n            \n            \n                ContentContainer\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/content/content.directive.ts\n            \n            \n                directive\n            \n            \n                ContentDirective\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/content-conductor/default-content-conductor/default-content-conductor.service.ts\n            \n            \n                class\n            \n            \n                DefaultContentConductorService\n            \n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.constructor.ts\n            \n            \n                interface\n            \n            \n                AnimationStateMachineConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.model.ts\n            \n            \n                interface\n            \n            \n                AnimationStateMachine\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.token.ts\n            \n            \n                variable\n            \n            \n                AnimationStateMachineConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-states/animation-states.service.ts\n            \n            \n                injectable\n            \n            \n                AnimationStatesService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n            \n            \n                interface\n            \n            \n                AnimationStylesMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/animation-transitions/animation-transitions.model.ts\n            \n            \n                interface\n            \n            \n                AnimationTransitionsMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/default-animations-state-machine/default-animations-state-machine.service.ts\n            \n            \n                class\n            \n            \n                DefaultAnimationsStateMachine\n            \n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/default-dynamic-animations-handler/default-dynamic-animations-handler.service.ts\n            \n            \n                class\n            \n            \n                DefaultDynamicAnimationsHandlerService\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.constructor.ts\n            \n            \n                interface\n            \n            \n                DynamicAnimationsHandlerConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.model.ts\n            \n            \n                interface\n            \n            \n                DynamicAnimationsHandler\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.token.ts\n            \n            \n                variable\n            \n            \n                DynamicAnimationsHandlerConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations.directive.ts\n            \n            \n                directive\n            \n            \n                DynamicAnimationsDirective\n            \n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/dynamic-animations.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicAnimationsService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave-pseudo-animation/leave-pseudo-animation.ts\n            \n            \n                variable\n            \n            \n                dvkLeave\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                directive\n            \n            \n                LeaveDirective\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                function\n            \n            \n                dvkLeaveTiming\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n            \n            \n                variable\n            \n            \n                dvkLeave\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/ng-state/ng-state.service.ts\n            \n            \n                injectable\n            \n            \n                NgStateService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.service.ts\n            \n            \n                injectable\n            \n            \n                NgTransitionService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-map/state-css-map.model.ts\n            \n            \n                interface\n            \n            \n                StateCSSMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.model.ts\n            \n            \n                interface\n            \n            \n                StateCSSMapper\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-animations/state-css-mapper/state-css-mapper.service.ts\n            \n            \n                injectable\n            \n            \n                StateCssMapperService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/component-constructor/component-constructor.model.ts\n            \n            \n                interface\n            \n            \n                ComponentConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/default-dynamic-component-serializer/default-dynamic-component-serializer.ts\n            \n            \n                class\n            \n            \n                DefaultDynamicComponentSerializer\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-data/dynamic-component-data.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentData\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-map/dynamic-component-map.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentsMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-model/dynamic-component-model.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentModel\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer-map/dynamic-component-serializer-map.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializerMap\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.constructor.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializerConstructor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.model.ts\n            \n            \n                interface\n            \n            \n                DynamicComponentSerializer\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicComponentSerializerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.token.ts\n            \n            \n                variable\n            \n            \n                DynamicComponentSerializerConstructorToken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    projects/dvk/src/lib/dynamic-components/dynamic-component.directive.ts\n            \n            \n                directive\n            \n            \n                DynamicComponentDirective\n            \n            \n                62 %\n                (10/16)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.1\n        \n            @angular/common : ^6.1.1\n        \n            @angular/core : ^6.1.1\n        \n            @angular/compiler : ^6.1.1\n        \n            @angular/forms : ^6.1.1\n        \n            @angular/http : ^6.1.1\n        \n            @angular/platform-browser : ^6.1.1\n        \n            @angular/platform-browser-dynamic : ^6.1.1\n        \n            @angular/router : ^6.1.1\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgTransitionStates   (projects/.../ng-transition.states.ts)\n                        \n                        \n                            NgTransitionSymbols   (projects/.../ng-transition.symbols.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.states.ts\n    \n        \n            \n                \n                    \n                        \n                        NgTransitionStates\n                    \n                \n                    \n                        \n                            States predefined by the Angular animations.\n\n                        \n                    \n                        \n                            \n                                 WildCard\n                            \n                        \n                        \n                            \n                                Value: *\n                            \n                        \n                        \n                            \n                                 Void\n                            \n                        \n                        \n                            \n                                Value: void\n                            \n                        \n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/ng-transition/ng-transition.symbols.ts\n    \n        \n            \n                \n                    \n                        \n                        NgTransitionSymbols\n                    \n                \n                    \n                        \n                            Symbols used by the angular animations transition\nexpression definitions.\n\n                        \n                    \n                        \n                            \n                                 To\n                            \n                        \n                        \n                            \n                                Value: =>\n                            \n                        \n                        \n                            \n                                 Either\n                            \n                        \n                        \n                            \n                                Value: \n                            \n                        \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                Value: :enter\n                            \n                        \n                        \n                            \n                                 Leave\n                            \n                        \n                        \n                            \n                                Value: :leave\n                            \n                        \n                        \n                            \n                                 Inc\n                            \n                        \n                        \n                            \n                                Value: :increment\n                            \n                        \n                        \n                            \n                                 Dec\n                            \n                        \n                        \n                            \n                                Value: :decrement\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dvkLeaveTiming   (projects/.../leave.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeaveTiming\n                            \n                            \n                        \n                    \n                \n                \n                    \ndvkLeaveTiming(timing: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Stub function for setting the timing of a \n:leave transition\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timing\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The timing the animation should\nlast.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@UAT/DynamicViewKit\nThe Dynamic View Kit is a library for building components\nand directives with dynamic capabilities.\nThe goal is to provide a set of tools that allow component and\ndirective authors to create feature rich components whose \nfunctionality can be modified by end users.\nDocumentation\nThe documentation is available here.\nFeatures\nCurrently the dvk offers 3 features for building components and \ndirectives.\n\nContent Conductor\nDynamic Animations\nDynamic Components\n\nInstallation\nComing soon...\nBuilding\nThe dvk library can be compiled with the command:\nng build dvkDemo Application\nThe development environment and demo application can then be \nstarted with the command:\nng serveAngular CLI\nThis project was generated with Angular CLI version 6.1.2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 tme321\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ContentConductorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicAnimationsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicComponentsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentConductorModule\n\n\n\ncluster_ContentConductorModule_declarations\n\n\n\ncluster_ContentConductorModule_exports\n\n\n\ncluster_ContentConductorModule_providers\n\n\n\ncluster_DynamicAnimationsModule\n\n\n\ncluster_DynamicAnimationsModule_declarations\n\n\n\ncluster_DynamicAnimationsModule_exports\n\n\n\ncluster_DynamicAnimationsModule_providers\n\n\n\ncluster_DynamicComponentsModule\n\n\n\ncluster_DynamicComponentsModule_declarations\n\n\n\ncluster_DynamicComponentsModule_exports\n\n\n\ncluster_DynamicComponentsModule_providers\n\n\n\n\nContentContainerDirective\n\nContentContainerDirective\n\n\n\nContentConductorModule\n\nContentConductorModule\n\nContentConductorModule -->\n\nContentContainerDirective->ContentConductorModule\n\n\n\n\n\nContentDirective\n\nContentDirective\n\nContentConductorModule -->\n\nContentDirective->ContentConductorModule\n\n\n\n\n\nContentContainerDirective \n\nContentContainerDirective \n\nContentContainerDirective  -->\n\nContentConductorModule->ContentContainerDirective \n\n\n\n\n\nContentDirective \n\nContentDirective \n\nContentDirective  -->\n\nContentConductorModule->ContentDirective \n\n\n\n\n\nContentConductorService\n\nContentConductorService\n\nContentConductorModule -->\n\nContentConductorService->ContentConductorModule\n\n\n\n\n\nDynamicAnimationsDirective\n\nDynamicAnimationsDirective\n\n\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsDirective->DynamicAnimationsModule\n\n\n\n\n\nLeaveDirective\n\nLeaveDirective\n\nDynamicAnimationsModule -->\n\nLeaveDirective->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective \n\nDynamicAnimationsDirective  -->\n\nDynamicAnimationsModule->DynamicAnimationsDirective \n\n\n\n\n\nLeaveDirective \n\nLeaveDirective \n\nLeaveDirective  -->\n\nDynamicAnimationsModule->LeaveDirective \n\n\n\n\n\nAnimationStatesService\n\nAnimationStatesService\n\nDynamicAnimationsModule -->\n\nAnimationStatesService->DynamicAnimationsModule\n\n\n\n\n\nDynamicAnimationsService\n\nDynamicAnimationsService\n\nDynamicAnimationsModule -->\n\nDynamicAnimationsService->DynamicAnimationsModule\n\n\n\n\n\nNgStateService\n\nNgStateService\n\nDynamicAnimationsModule -->\n\nNgStateService->DynamicAnimationsModule\n\n\n\n\n\nNgTransitionService\n\nNgTransitionService\n\nDynamicAnimationsModule -->\n\nNgTransitionService->DynamicAnimationsModule\n\n\n\n\n\nStateCssMapperService\n\nStateCssMapperService\n\nDynamicAnimationsModule -->\n\nStateCssMapperService->DynamicAnimationsModule\n\n\n\n\n\nDynamicComponentDirective\n\nDynamicComponentDirective\n\n\n\nDynamicComponentsModule\n\nDynamicComponentsModule\n\nDynamicComponentsModule -->\n\nDynamicComponentDirective->DynamicComponentsModule\n\n\n\n\n\nDynamicComponentDirective \n\nDynamicComponentDirective \n\nDynamicComponentDirective  -->\n\nDynamicComponentsModule->DynamicComponentDirective \n\n\n\n\n\nDynamicComponentSerializerService\n\nDynamicComponentSerializerService\n\nDynamicComponentsModule -->\n\nDynamicComponentSerializerService->DynamicComponentsModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            3 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InitialValues   (projects/.../initial-values.model.ts)\n                        \n                        \n                            InputStreams   (projects/.../input-streams.model.ts)\n                        \n                        \n                            NotTypedKeys   (projects/.../not-typed-keys.model.ts)\n                        \n                        \n                            OutputCallbacks   (projects/.../output-callbacks.model.ts)\n                        \n                        \n                            TypedKeys   (projects/.../typed-keys.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-components/initial-values/initial-values.model.ts\n    \n        \n            \n                \n                    \n                        \n                        InitialValues\n                    \n                \n                    \n                        \n                            A map of keys to values where \nthe keys are properties of \ntype T and the values are \nthe same as the property type.\n\n                        \n                    \n                \n                    \n                        InitialValues:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/dynamic-components/input-streams/input-streams.model.ts\n    \n        \n            \n                \n                    \n                        \n                        InputStreams\n                    \n                \n                    \n                        \n                            A map of Observables whose keys are \nany properties of type T that are not \n{@link EventEmitter}s.\n\n                        \n                    \n                \n                    \n                        InputStreams:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/common/not-typed-keys.model.ts\n    \n        \n            \n                \n                    \n                        \n                        NotTypedKeys\n                    \n                \n                    \n                        \n                            Constrain a set of keys from type T \nthat are not of type C.\n\n                        \n                    \n                \n                    \n                        NotTypedKeys:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/dynamic-components/output-callbacks/output-callbacks.model.ts\n    \n        \n            \n                \n                    \n                        \n                        OutputCallbacks\n                    \n                \n                    \n                        \n                            A map of call back functions whose keys are \nproperties of type T that are {@link EventEmitter}s.\n\n                        \n                    \n                \n                    \n                        OutputCallbacks:     \n\n                    \n                \n            \n        \n\n    projects/dvk/src/lib/common/typed-keys.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TypedKeys\n                    \n                \n                    \n                        \n                            Constrain a set of keys from type T\nthat are of type C.\n\n                        \n                    \n                \n                    \n                        TypedKeys:     \n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimationStateMachineConstructorToken   (projects/.../animation-state-machine.token.ts)\n                        \n                        \n                            ContentConductorConstructorToken   (projects/.../content-conductor-constructor.token.ts)\n                        \n                        \n                            dvkLeave   (projects/.../leave.directive.ts)\n                        \n                        \n                            dvkLeave   (projects/.../leave-pseudo-animation.ts)\n                        \n                        \n                            DynamicAnimationsHandlerConstructorToken   (projects/.../dynamic-animations-handler.token.ts)\n                        \n                        \n                            DynamicComponentSerializerConstructorToken   (projects/.../dynamic-component-serializer.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/dvk/src/lib/dynamic-animations/animation-state-machine/animation-state-machine.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AnimationStateMachineConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AnimationStateMachineConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AnimationStateMachineConstructorToken')\n                        \n                    \n\n                \n                    \n                        Token for the class to be constructed to act as the animation state machine.\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/content-conductor/content-conductor-constructor/content-conductor-constructor.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ContentConductorConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ContentConductorConstructorToken:     miscellaneou\n\n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('ContainersConductorConstructorToken')\n                        \n                    \n\n                \n                    \n                        An injection token representing an implementation of a \nconstructor in the shape of ContentConductorConstructor.\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/leave/leave.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dvkLeave:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  trigger(\"dvkLeave\", [\n    transition(\":leave\", \n      animate(\"{{ timing }}\"), \n        { params: { timing: \"0ms\" }})\n  ])\n]\n                        \n                    \n\n                \n                    \n                        Stub animation for the :leave transition\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/leave-pseudo-animation/leave-pseudo-animation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dvkLeave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dvkLeave:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('dvkLeave', [\n    transition('enabled => void', \n      animate('{{ leaveTiming }}', \n      style({ /* empty */ })))\n  ])\n                        \n                    \n\n\n            \n        \n\n    projects/dvk/src/lib/dynamic-animations/dynamic-animations-handler/dynamic-animations-handler.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DynamicAnimationsHandlerConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DynamicAnimationsHandlerConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DynamicAnimationsHandlerConstructorToken')\n                        \n                    \n\n                \n                    \n                        Token for injecting the constructor for an object that can\nact as the Animations Handler\n\n                    \n                \n\n            \n        \n\n    projects/dvk/src/lib/dynamic-components/dynamic-component-serializer/dynamic-component-serializer.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DynamicComponentSerializerConstructorToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DynamicComponentSerializerConstructorToken:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DynamicComponentSerializerConstructorToken')\n                        \n                    \n\n                \n                    \n                        This token represents the specific instance used for the\ncomponent serializer.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/content-conductor.html":{"url":"additional-documentation/content-conductor.html","title":"additional-page - Content Conductor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCondent Conductor\nThe Condent Conductor module provides the functionality for moving \nTemplateRefs between multiple ViewContainerRefs referenced with\nstring name values.\nCreating Containers\nContainers can be defined inside a Component template with the \nContentContainerDirective.\n\nThe string names provided to the directive can be used to reference\nthat container through an instance of ContentConductor.\nCreating a Conductor\nThe ContentConductor can be created by injecting the ContentConductorService into a component's constructor.\n  constructor(private ccService: ContentConductorService) { }And then calling the createContentConductor method with the QueryLists for the ContentContainerDirectives and the TemplateRefs.  These QueryLists should both be available during ngAfterViewInit.\nThe init method specifies which container any initial content should\nbe in.\n  @ContentChildren(ContentDirective,{ read: TemplateRef, descendants: true }) \n  contents: QueryList>;\n\n  @ViewChildren(ContentContainerDirective)\n  containers: QueryList;\n\n  conductor: ContentConductor;\n\n  ngAfterViewInit() {\n    this.conductor = this.ccService\n      .createContentConductor(this.containers, this.contents);\n\n    this.conductor.init('one');\n  }Using the Conductor\nThen content can be moved from one container to another by specifying\nthe container string names.\nthis.conductor.moveViews('one','two');The ContentConductor also provides the ability to move single views from one container to another based on their index inside the container.\nthis.conductor.moveView('one','two',3);Detach a single view from any container returning the ViewRef.\nconst vRef: ViewRef = this.conductor.detachView('one',2);Attach a view to the end of a specified container.\nthis.conductor.attachView('two',vRef);Detach all views from a specified container.\nconst views: ViewRef[] = this.conductor.detachViews('one');And attach an array of views to a specified container.\nthis.conductor.attachViews('two',views);Finally the content conductor should be destroyed inside the components\nngOnDestroy method in order to free up the resources it uses.\nngOnDestroy() {\n  this.conductor.destroy();\n}Note\nAll of the methods that insert views into containers also have an optional index parameter at the end that is the index to insert at.\nIf it is not specified the items are inserted to the end of the containers views.\nContent\nContent is added to the containers by creating it inside the element that has containers in it's view and creates the conductor.  The pieces of content should be marked with the structural directive ContentDirective.\n\n    Some Content To Display In A Container\n    \n    \n        \n        \n    \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-animations.html":{"url":"additional-documentation/dynamic-animations.html","title":"additional-page - Dynamic Animations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDynamic Animations\nThe Dynamic Animations module provides a directive that allow animations to be specified in the same format as standard Angular animations.  These animations are supplied at run time instead of statically in the Component decorator so a component developer can expose the animations specification and a consumer of the component can supply their own animations.\nDefining a set of Animations\nAnimations are defined using the same functions that normal Angular animations use with a few exceptions.  The animations are defined as an array containing state and transition definitions from @angular/animations.  A trigger definition is not recognized as the DynamicAnimationsDirective supplies an @Input member state that works in the same way as a trigger does.\nOther constraints are that no part of an animation can refer to a defined trigger, such as some forms of query, and no part can refer to a specific state.  The concept of states is implemented fully by the AnimationStateMachine as the Angular AnimationBuilder does not have the same concept of states as the standard static Angular animations.\nA simple animation looks like this.\nanimations = [\n    state('open',style({\n        'transform': `scaleY(1.0)`,\n        'transform-origin': 'top'\n    })),\n    state('closed',style({\n        'transform': `scaleY(0.0)`,\n        'transform-origin': 'top'\n    })),\n    transition('openclosed',animate('200ms'))\n];Currently supported abilities include the wild card for transitions like *=>open or closed=>* as well as :enter.  The :leave state has limited support at the moment.  Please refer to the section below.\nNote\nMore complex animations as defined normally by Angular are supported but have not all been fully tested at this time.  If you find any animations that work statically but do not work dynamically outside of the constraints listed above please submit a bug report with the animation that does not work included.\nAnimation States\nThe state itself can be represented by a string member that can be bound to the state @Input of the directive.  \ncurrentState = 'closed';The animation directive will automatically transition from the void state to the value of the bound state during initalization.  It will play any :enter or *=>void transitions that match the conditions as were definined in the animations.\nNote\nCurrently only string states are supported; numerical values will not work and neither will :increment or :decrement transition styles.  Support is planned but not yet implemented.\nUsing the DynamicAnimationsDirective\nThe dynamic animations directive can be attached to an element and passed the animations and the state binding.\n\nTransitioning the State\nThe state can be transitioned simply by changing the value of the bound member to the next desired state.\nthis.currentState = 'open';The transition that matches the change in state with the most specificity will be played when the value of the bound state is changed.\nLeave Transition\nThe leave transition is partially supported at the moment.\nIf a :leave animation, or *=>void, is specified you must also both\nadd the @dvkLeave directive to the element and add dvkLeave to \nthe component as a static animation.  This step is only necessary\nfor the leave animation. \nThis is due to the fact that Angular will remove an element before a dynamic animation has a chance to play.  A static leave animation must be used to keep the element around long enough for the dynamic animation to actually play.\nCurrently the dvkLeave directive is set to a constant time of 500ms.  In the future this value will be made dynamic to match the dynamic animation supplied.\nSo in order to use a leave animation first attach the animation to the component metadata.\n@Component({\n    animations: [dvkLeave]\n})Then add it as a trigger to the element containing the DynamicAnimationsDirective.\n\nAnd define a leave transition inside the animations supplied to the directive.\ntransition(':leave',animate('200ms',\n    style({ 'background-color': 'red' }))\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/dynamic-components.html":{"url":"additional-documentation/dynamic-components.html","title":"additional-page - Dynamic Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDynamic Components\nThe Dynamic Components module provides a directive that will instantiate components dynamically with the ability to hook up their inputs to observable streams and provide callbacks for the instantiated components output emitters.\nCreating a Serializer\nA DynamicComponentSerializer is used to translate between a string name and a Component class instance.  This allows the string name to be stored inside an ngrx store, transmitted to a server, or any other use that might be desired and the data can be used later to instantiate the same dynamic component.  \nA serializer can be created with the createSerializer method of the DynamicComponentSerializerService.  \nFirst inject the service into a components constructor.\nconstructor(private dcsService :DynamicComponentSerializerService) {} And then pass the createSerializer method a DynamicComponentsMap of string names to component class instances.\nserializer: DynamicComponentSerializer;\n\nngOnInit() {\n    this.serializer = this.dcsService.createSerializer({\n        'textComponent': TextComponent,\n        'numberComponent': NumberComponent\n    });\n}This serializer is stateless other than the map and can be reused for any number of instances of DynamicComponentDirectives.\nCreating a DynamicComponentModel\nA DynamicComponentModel is the model that the DynamicComponentDirective uses to instantiate a component and hook up any streams specified.\nA DynamicComponentModel extends the DynamicComponentData interface.  The DynamicComponentData interface was designed to be serializable so it can be stored or transferred as desired.  It consists of a name string and an initialValues object.  The name is the serialized name of the component that should be instantiated.  The initializedValues should be a map of fields inside the component class type to the desired initial values for those fields.  As long as the field values are serializable this entire data structure can be safely stored and used for any purpose.\n@Component({\n    template: `\n        \n        {{text}}\n        \n    `\n})\nclass TextComponent {\n    @Input() text: string;\n    @Output() textClicked = new EventEmitter();\n}\n\nconst data: DynamicComponentData = {\n    name: 'textComponent',\n    initialValues: {\n        'text': 'The initial text for this component'\n    }\n}This data structure can be combined with the other fields of the DynamicComponentModel before it is applied to the directive.\ntext$ = new Subject();\n\nonClick = (e: MouseEvent) => {\n    console.log('Dynamic component was clicked');\n}\n\nconst model: DynamicComponentModel = {\n    ...this.data,\n    inputs$: {\n        text: this.text$.asObservable()\n    },\n    outputCallbacks: {\n        textClicked: this.onClick\n    },\n    providers: [\n    /* Any custom providers for the component can be supplied here */\n    ]\n}Note\nThe context of this inside callbacks will be the dynamic component and not the class where the callback is defined unless the callback method is defined as an arrow function or the value of this is bound before passing the result to the dynamic component.  This example uses an arrow function to preserve the context of this inside the onClick callback.\nCreating a DynamicComponentDirective\nWith the model set up and a serializer created those two pieces can now be passed off to an instance of the DynamicComponentDirectives inside the template of a component.\n\nThe DynamicComponentDirective will use the serializer to resolve the string name to a component and create an instance of it.  It will apply any specified initial values during instantiation.  Then it will hook up any specified input streams and output callbacks to the members of the component.\nThe directive will track and properly dispose of the subscriptions for the streams and will trigger change detection manually when new values are emited from the input streams.  The input streams also have a distinct until changed operator applied.  The directive should manage these streams in the same way that the async pipe does for other components.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
